
&НаСервере
&Вместо("ОбъектыПоКритериюОтбора")
Функция Рин1_ОбъектыПоКритериюОтбора(ЗначениеКритерияОтбора)
	
	Если Не Метаданные.КритерииОтбора.СвязанныеДокументы.Тип.СодержитТип(ТипЗнч(ЗначениеКритерияОтбора))  Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	//Если ТипЗнч(ЗначениеКритерияОтбора) = Тип("ДокументСсылка.ЗаказКлиента") Тогда
	//	
	//	//bercut040220 НЕ добавляй метаданные связанныеобъекты в критерияхотбора в расширение - много объектов портируется!
	//	//отлаживай запрос в сеансе
	//	Запрос = Новый Запрос;
	//	Запрос.Текст = "ВЫБРАТЬ
	//	|	СвязанныеДокументы.Ссылка КАК Ссылка
	//	|ИЗ
	//	|	КритерийОтбора.СвязанныеДокументы(&ЗначениеКритерияОтбора) КАК СвязанныеДокументы	
	//	|ОБЪЕДИНИТЬ ВСЕ
	//	|ВЫБРАТЬ
	//	|	КорректировкаНазначенияТоваровТовары.Ссылка
	//	|ИЗ
	//	|	Документ.КорректировкаНазначенияТоваров.Товары КАК КорректировкаНазначенияТоваровТовары
	//	|ГДЕ
	//	|	(КорректировкаНазначенияТоваровТовары.Ссылка.Назначение.Заказ = &ЗначениеКритерияОтбора
	//	|ИЛИ КорректировкаНазначенияТоваровТовары.ИсходноеНазначение.Заказ = &ЗначениеКритерияОтбора
	//	|ИЛИ КорректировкаНазначенияТоваровТовары.НовоеНазначение.Заказ = &ЗначениеКритерияОтбора)";
	//	
	//Иначе 
	//	
	//	Запрос = Новый Запрос;
	//	Запрос.Текст = "ВЫБРАТЬ
	//	|	СвязанныеДокументы.Ссылка
	//	|ИЗ
	//	|	КритерийОтбора.СвязанныеДокументы(&ЗначениеКритерияОтбора) КАК СвязанныеДокументы";
	//	
	//КонецЕсли;
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	СвязанныеДокументы.Ссылка
	|ИЗ
//Исходное	|	КритерийОтбора.СвязанныеДокументы(&ЗначениеКритерияОтбора) КАК СвязанныеДокументы";
//{{20210126 ГлазуновДВ	
	|	КритерийОтбора.СвязанныеДокументы(&ЗначениеКритерияОтбора) КАК СвязанныеДокументы
	|
	//|ОБЪЕДИНИТЬ ВСЕ
	//|ВЫБРАТЬ
	//|	Рин1_КорректировкаРезервовТоваровТовары.Ссылка
	//|ИЗ
	//|	Документ.Рин1_КорректировкаРезервовТоваров.Товары КАК Рин1_КорректировкаРезервовТоваровТовары
	//|ГДЕ
	//|	(Рин1_КорректировкаРезервовТоваровТовары.Ссылка.ЗаказИнициатор = &ЗначениеКритерияОтбора
	//|	ИЛИ Рин1_КорректировкаРезервовТоваровТовары.Заказ = &ЗначениеКритерияОтбора)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|ВЫБРАТЬ
	|	КорректировкаНазначенияТоваровТовары.Ссылка
	|ИЗ
	|	Документ.КорректировкаНазначенияТоваров.Товары КАК КорректировкаНазначенияТоваровТовары
	|ГДЕ
	|	(КорректировкаНазначенияТоваровТовары.Ссылка.Назначение.Заказ = &ЗначениеКритерияОтбора
	|	ИЛИ КорректировкаНазначенияТоваровТовары.ИсходноеНазначение.Заказ = &ЗначениеКритерияОтбора
	|	ИЛИ КорректировкаНазначенияТоваровТовары.НовоеНазначение.Заказ = &ЗначениеКритерияОтбора)";
//}}20210126 ГлазуновДВ	
	
	Запрос.УстановитьПараметр("ЗначениеКритерияОтбора", ЗначениеКритерияОтбора);
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

//{{20210126 ГлазуновДВ	
&НаСервере
&Вместо("ВывестиРодительскиеОбъекты")
Процедура Рин1_ВывестиРодительскиеОбъекты(ТекущийОбъект, ДеревоРодитель, ВыведенныеОбъекты, СлужебныеОбъекты = Неопределено)
	
    СтрокиДерева = ДеревоРодитель.ПолучитьЭлементы();
    МетаданныеОбъекта = ТекущийОбъект.Метаданные();
    СписокРеквизитов    = Новый СписокЗначений;
	
	Если СлужебныеОбъекты = Неопределено Тогда 
		СлужебныеОбъекты = Новый Соответствие;
	КонецЕсли;

//{{20210126 ГлазуновДВ	
	РасширенныйСостав = Новый Массив;
	РасширенныйСостав.Добавить(Метаданные.Документы.Рин1_КорректировкаРезервовТоваров.Реквизиты.ЗаказИнициатор);
	РасширенныйСостав.Добавить(Метаданные.Документы.Рин1_КорректировкаРезервовТоваров.ТабличныеЧасти.Товары.Реквизиты.Заказ);
//}}20210126 ГлазуновДВ	
	
	Для Каждого Реквизит Из МетаданныеОбъекта.Реквизиты Цикл
//Исходое		Если Не Метаданные.КритерииОтбора.СвязанныеДокументы.Состав.Содержит(Реквизит) Тогда
//Исходое		    Продолжить;
//Исходое		КонецЕсли;
//{{20210126 ГлазуновДВ	
		//Если Не ТипЗнч(ТекущийОбъект)= Тип("ДокументСсылка.Рин1_КорректировкаРезервовТоваров") Тогда
		//    Если Не Метаданные.КритерииОтбора.СвязанныеДокументы.Состав.Содержит(Реквизит) Тогда
		//        Продолжить;
		//    КонецЕсли;
		//Иначе
		//    Если Реквизит.Имя <> "ЗаказИнициатор" И Реквизит.Имя <> "Заказ" Тогда
		//        Продолжить;
		//    КонецЕсли;
		//КонецЕсли;
	 	Если РасширенныйСостав.Найти(Реквизит) = Неопределено Тогда 		
			Если Не Метаданные.КритерииОтбора.СвязанныеДокументы.Состав.Содержит(Реквизит) Тогда
			    Продолжить;
			КонецЕсли;
		КонецЕсли;		
//}}20210126 ГлазуновДВ	
        Для Каждого ТекущийТип Из Реквизит.Тип.Типы() Цикл
            
            МетаданныеРеквизита = Метаданные.НайтиПоТипу(ТекущийТип);
            Если МетаданныеРеквизита = Неопределено Тогда
                Продолжить;
            КонецЕсли;
            Если Не ОбщегоНазначения.ОбъектМетаданныхДоступенПоФункциональнымОпциям(МетаданныеРеквизита) 
                Или Не ПравоДоступа("Чтение", МетаданныеРеквизита) Тогда
                Продолжить;
            КонецЕсли;
            Если Не Метаданные.Документы.Содержит(МетаданныеРеквизита)
                И Не Метаданные.Справочники.Содержит(МетаданныеРеквизита)
                И Не Метаданные.ПланыВидовХарактеристик.Содержит(МетаданныеРеквизита) Тогда
                Продолжить;
            КонецЕсли;
                
            ЗначениеРеквизита = ТекущийОбъект[Реквизит.Имя];
            Если ЗначениеЗаполнено(ЗначениеРеквизита)
                И ТипЗнч(ЗначениеРеквизита) = ТекущийТип
                И ЗначениеРеквизита <> ТекущийОбъект
                И СписокРеквизитов.НайтиПоЗначению(ЗначениеРеквизита) = Неопределено Тогда
                
                ЯвляетсяДокументом  = ОбщегоНазначения.ЭтоДокумент(МетаданныеРеквизита);
                
                Если ЯвляетсяДокументом Тогда
					ДатаДокумента = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЗначениеРеквизита, "Дата", Истина);
					СписокРеквизитов.Добавить(ЗначениеРеквизита, Формат(ДатаДокумента, "ДЛФ=DT"));
                Иначе
                    СписокРеквизитов.Добавить(ЗначениеРеквизита, Дата(1,1,1));
                КонецЕсли;
                
            КонецЕсли;
        КонецЦикла;
        
    КонецЦикла;

    Для Каждого ТЧ Из МетаданныеОбъекта.ТабличныеЧасти Цикл
        
        ИменаРеквизитов = "";
		СодержимоеТЧ = ТекущийОбъект[ТЧ.Имя].Выгрузить(); // ТаблицаЗначений
        Для Каждого Реквизит Из ТЧ.Реквизиты Цикл

            Если Не Метаданные.КритерииОтбора.СвязанныеДокументы.Состав.Содержит(Реквизит) Тогда
                Продолжить;
            КонецЕсли;
                
            Для Каждого ТекущийТип Из Реквизит.Тип.Типы() Цикл
                
                МетаданныеРеквизита = Метаданные.НайтиПоТипу(ТекущийТип);
                Если МетаданныеРеквизита = Неопределено Тогда
                    Продолжить;
                КонецЕсли;
                Если Не ОбщегоНазначения.ОбъектМетаданныхДоступенПоФункциональнымОпциям(МетаданныеРеквизита) 
                    Или Не ПравоДоступа("Чтение", МетаданныеРеквизита) Тогда
                    Продолжить;
                КонецЕсли;
                
                Если Не Метаданные.Документы.Содержит(МетаданныеРеквизита)
                    И Не Метаданные.Справочники.Содержит(МетаданныеРеквизита)
                    И Не Метаданные.ПланыВидовХарактеристик.Содержит(МетаданныеРеквизита) Тогда
                    Продолжить;
                КонецЕсли;
                
                ИменаРеквизитов = ИменаРеквизитов + ?(ИменаРеквизитов = "", "", ", ") + Реквизит.Имя;
                Прервать;
                    
            КонецЦикла;
            
        КонецЦикла;

        СодержимоеТЧ.Свернуть(ИменаРеквизитов);
        Для Каждого КолонкаТЧ Из СодержимоеТЧ.Колонки Цикл

            Для Каждого СтрокаТЧ Из СодержимоеТЧ Цикл

                ЗначениеРеквизита = СтрокаТЧ[КолонкаТЧ.Имя];
                МетаданныеЗначения = Метаданные.НайтиПоТипу(ТипЗнч(ЗначениеРеквизита));
                Если МетаданныеЗначения = Неопределено Тогда
                    Продолжить;
                КонецЕсли;
                Если Не ОбщегоНазначения.ОбъектМетаданныхДоступенПоФункциональнымОпциям(МетаданныеЗначения) 
                    Или Не ПравоДоступа("Чтение", МетаданныеЗначения) Тогда
                    Продолжить;
                КонецЕсли;
                Если ЗначениеРеквизита = ТекущийОбъект
                    Или СписокРеквизитов.НайтиПоЗначению(ЗначениеРеквизита) <> Неопределено Тогда
                    Продолжить;
                КонецЕсли;
                
                ЯвляетсяДокументом  = ОбщегоНазначения.ЭтоДокумент(МетаданныеЗначения);
                Если Не ЯвляетсяДокументом И Не Метаданные.Справочники.Содержит(МетаданныеЗначения)
                    И Не Метаданные.ПланыВидовХарактеристик.Содержит(МетаданныеЗначения) Тогда
                    Продолжить;
                КонецЕсли;
                
                Если ЯвляетсяДокументом Тогда
					ДатаДокумента = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЗначениеРеквизита, "Дата", Истина);
					СписокРеквизитов.Добавить(ЗначениеРеквизита, Формат(ДатаДокумента, "ДЛФ=DT"));
                Иначе
                    СписокРеквизитов.Добавить(ЗначениеРеквизита, Дата(1,1,1));
                КонецЕсли;
                
            КонецЦикла;
        КонецЦикла;
    КонецЦикла;

    СписокРеквизитов.СортироватьПоПредставлению();
    
    Для каждого ЭлементСписка Из СписокРеквизитов Цикл
        
        Выборка = ПолучитьВыборкуПоРеквизитамОбъекта(ЭлементСписка.Значение);
        
        Если Выборка.Следующий() Тогда
			НоваяСтрока = ДобавитьСтрокуВДерево(ДеревоРодитель, Выборка, ВыведенныеОбъекты);
			
			Если НоваяСтрока <> Неопределено
				И Не ДобавляемыйОбъектИмеетсяСредиРодителей(ДеревоРодитель, ЭлементСписка.Значение) Тогда
				
				ВывестиРодительскиеОбъекты(ЭлементСписка.Значение, НоваяСтрока, ВыведенныеОбъекты, СлужебныеОбъекты);
				
			ИначеЕсли СлужебныеОбъекты[ЭлементСписка.Значение] = Неопределено Тогда 
				
				СлужебныеОбъекты.Вставить(ЭлементСписка.Значение, Истина);
				ВывестиРодительскиеОбъекты(ЭлементСписка.Значение, ДеревоРодитель, ВыведенныеОбъекты, СлужебныеОбъекты);
			КонецЕсли;	
        КонецЕсли;
        
    КонецЦикла;
КонецПроцедуры
//}}20210126 ГлазуновДВ	
