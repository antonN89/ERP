
//http://download.cksource.com/CKEditor/CKEditor/
//http://download.cksource.com/CKEditor/CKEditor/CKEditor%204.5.3/
//http://download.cksource.com/CKEditor/CKEditor/CKEditor%204.6.2/ этот перестал работать

&НаКлиенте
Процедура Применить(Команда)
	
	Закрыть(Элементы.ПолеHTMLДокумента.Документ.defaultView.CKEDITOR.instances.editor1.getData());
	
КонецПроцедуры

&НаКлиенте
Процедура ПолеHTMLДокументаДокументСформирован(Элемент)
	
	ПолеРедактора = Элементы.ПолеHTMLДокумента.Документ.getElementById("editor1");
	TextHtml = ПолучитьМакетНаСервере("CkEditorEditorHTML").ПолучитьТекст();
	ПолеРедактора.innerHTML = TextHtml;
	
	Элементы.ПолеHTMLДокумента.Документ.defaultView.CKEDITOR.instances.editor1.setData(HTML1);
	
	//когда грузится редактор то текст доступен для редактирования, если нет то нужно принудительно давать разрешение на редактирование как тут ниже
	//Элемент.Документ.Body.ContentEditable = "true";
	//Если СтрДлина(HTML) > 0 Тогда
	//	Элемент.Документ.Body.innerHTML = HTML;
	//КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	Документ = Элементы.ПолеHTMLДокумента.Документ;
	
	ИнициализироватьБиблиотеку();
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	HTML1 = Параметры.HTML;
	
КонецПроцедуры

&НаКлиенте
Процедура Очистить(Команда)
	
	TextHtml = ПолучитьМакетНаСервере("CkEditorEditorHTML").ПолучитьТекст();
	TextHtml = СтрЗаменить(TextHtml,"A Simple Page with CKEditor","");
	Элементы.ПолеHTMLДокумента.Документ.defaultView.CKEDITOR.instances.editor1.setData(TextHtml);

КонецПроцедуры

&НаКлиенте
Процедура ИнициализироватьБиблиотеку()
	
	ИмяБиблиотеки="CkEditor";
	
	НеобходимоИнициализироватьБиблиотеку = Истина;
	ПутьКБиблиотеке = ЭтаФорма[ИмяБиблиотеки+"Путь"];
	
	Если ЗначениеЗаполнено(ПутьКБиблиотеке) Тогда
		Файл = новый Файл(ПутьКБиблиотеке);
		НеобходимоИнициализироватьБиблиотеку = НЕ Файл.Существует();
	КонецЕсли;
	
	НеобходимоИнициализироватьБиблиотеку = НЕ ЗначениеЗаполнено(CkEditorПуть);
	
	Если НеобходимоИнициализироватьБиблиотеку Тогда
		
		ПутьКБиблиотеке = КаталогВременныхФайлов()+ИмяБиблиотеки+"\"; 				

		СоздатьКаталог(ПутьКБиблиотеке);
		
		// скопируем в каталог файлы из архива
		МакетБиблиотеки = ПолучитьМакетНаСервере(ИмяБиблиотеки);
		МакетБиблиотекиEditorHTML = ПолучитьМакетНаСервере(ИмяБиблиотеки+"EditorHTML");
		
		Если МакетБиблиотеки <> Неопределено И МакетБиблиотекиEditorHTML <> Неопределено Тогда
			// сохраняем и распаковываем редактор
			ИмяФайлаZip = ИмяБиблиотеки+".zip";
			МакетБиблиотеки.Записать(ПутьКБиблиотеке+ИмяФайлаZip);
			ФайлАрхива = новый ЧтениеZipФайла(ПутьКБиблиотеке+ИмяФайлаZip);
			ФайлАрхива.ИзвлечьВсе(ПутьКБиблиотеке, РежимВосстановленияПутейФайловZIP.Восстанавливать); 
			ФайлАрхива.Закрыть();		
			// сохраняем настроенный файл редактора
			МакетБиблиотекиEditorHTML.Записать(ПутьКБиблиотеке+ИмяБиблиотеки+"EditorHTML.html");         
		Иначе
			ПутьКБиблиотеке = "";
			Сообщить("Неизвестная ошибка сохранения макета...");
		КонецЕсли;
		
	КонецЕсли;
	
	// Загрузим файл редактора
	HTML = ПутьКБиблиотеке+ИмяБиблиотеки+"EditorHTML.html";
	
	ЭтаФорма[ИмяБиблиотеки+"Путь"] = ПутьКБиблиотеке;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьМакетНаСервере(ИмяМакета)
	
	Макет = Неопределено;
	Попытка
		ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
		Макет = ОбработкаОбъект.ПолучитьМакет(ИмяМакета);
	Исключение
		Сообщить(ОписаниеОшибки());		
	КонецПопытки;
	Возврат Макет;
	
КонецФункции
