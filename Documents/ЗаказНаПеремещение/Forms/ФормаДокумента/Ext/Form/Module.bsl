&НаСервере
Функция ГИГ_ЗаполнитьОбеспечениеВУстановленномПорядке(ВыбранноеЗначение)
	
	ПараметрыЗаполнения = Новый Структура("ПереченьВариантов, ИзменятьОбособление, ЗаполнятьЦелымиУпаковками", Неопределено, Истина, Ложь);
	ЗаполнитьЗначенияСвойств(ПараметрыЗаполнения, ВыбранноеЗначение);
	
	ПутиКДанным = Новый Соответствие;
	ПутиКДанным.Вставить("ДатаОтгрузки", "НачалоОтгрузки");
	ПутиКДанным.Вставить("Склад", "СкладОтправитель");
	
	ПараметрыДокумента = Новый Структура;
	ПараметрыДокумента.Вставить("МенеджерРегистра", РегистрыНакопления.ЗаказыНаПеремещение);
	ПараметрыДокумента.Вставить("ПутиКДанным", ПутиКДанным);
	
	//{Гига suv 11.01.2018 СхемыОбеспеченияДляЗаказов
	//Свернуть
	
	СтруктураОтбор = Новый Структура("Номенклатура,Характеристика,Упаковка,Серия");
	СтруктураСуммирование = Новый Структура("КоличествоУпаковок,Количество");
	СтрокиВыбранные = Новый Массив;
	
	СоответствиеСтрок = Объект.Товары.Выгрузить(,"Номенклатура,Характеристика,Упаковка,Серия,ИсходныйНомерСтроки");
	СоответствиеСтрок.Очистить();
	
	Если Элементы.Товары.ВыделенныеСтроки.Количество() > 1 Тогда
		Для Каждого ИдентификаторСтроки из Элементы.Товары.ВыделенныеСтроки Цикл
			
			Строка = Объект.Товары.НайтиПоИдентификатору(ИдентификаторСтроки);
			
			ЗаполнитьЗначенияСвойств(СтруктураОтбор, Строка);
			
			Стр = СоответствиеСтрок.НайтиСтроки(СтруктураОтбор);
			
			Если НЕ Стр.Количество() Тогда
				Нстр = СоответствиеСтрок.Добавить();
				ЗаполнитьЗначенияСвойств(Нстр, Строка);
				Нстр.ИсходныйНомерСтроки = ИдентификаторСтроки;
				СтрокиВыбранные.Добавить(ИдентификаторСтроки);
			Иначе
				ЗаполнитьЗначенияСвойств(СтруктураСуммирование, Строка);
				
				СтрокаПриемник = Объект.Товары.НайтиПоИдентификатору(Стр[0].ИсходныйНомерСтроки);
				
				Для Каждого Колонка из СтруктураСуммирование Цикл
					СтрокаПриемник[Колонка.Ключ] = СтрокаПриемник[Колонка.Ключ] + Колонка.Значение;
				КонецЦикла;
				
				Объект.Товары.Удалить(Строка);
			КонецЕсли;	
			
		КонецЦикла;
	Иначе
		СтрокиВыбранные = Элементы.Товары.ВыделенныеСтроки;
	КонецЕсли;
	//Гига suv 11.01.2018}
	
	Таблица = ОбеспечениеСервер.ТаблицаЗаполнениеОбеспечения(
		СтрокиВыбранные,//Элементы.Товары.ВыделенныеСтроки,
		Объект,
		Объект.Товары,
		ПараметрыЗаполнения,
		ПараметрыДокумента);
	
	Если ТипЗнч(Таблица) <> Тип("ТаблицаЗначений") Тогда
		Возврат Новый Структура(
			"Ошибки",
			ОбеспечениеКлиентСервер.ОшибкиКонтроляОтгрузкиИОбеспечения(
				Таблица, "Товары", НСтр("ru = 'Товары'")));
	КонецЕсли;
	
	//{Гига suv 11.01.2018 СхемыОбеспеченияДляЗаказов
	СтрокиТовары = Объект.Товары.Выгрузить(Новый Массив,"Номенклатура, Характеристика, ИсходныйНомерСтроки");
	
	Для Каждого Индекс из СтрокиВыбранные Цикл
		СтрТовара = СтрокиТовары.Добавить();
		ЗаполнитьЗначенияСвойств(СтрТовара,Объект.Товары.НайтиПоИдентификатору(Индекс));
		СтрТовара.ИсходныйНомерСтроки = Индекс;
	КонецЦикла;
	
	СтруктураПараметры = Новый Структура("Склад,СтрокиТовары,Дата",Объект.СкладОтправитель,СтрокиТовары,Объект.Дата);
	ГИГ_ОбеспечениеСервер.ДополнитьОбеспечение(Таблица, СтруктураПараметры);
	//Гига suv 11.01.2018}
	
	//Перенос результатов в документ.
	ТекстОповещения = Документы.ЗаказНаПеремещение.ЗаполнитьВариантОбеспечения(
		Объект, ЭтаФорма, "СтрокиТовары", Таблица, ПараметрыУказанияСерий);
	
	Возврат Новый Структура("Ошибки, Оповещение", Неопределено, ТекстОповещения);
	
КонецФункции


&НаСервере
&Вместо("ЗаполнитьОбеспечениеВУстановленномПорядке")
Функция Рин1_ЗаполнитьОбеспечениеВУстановленномПорядке(ВыбранноеЗначение)
	
	Возврат ГИГ_ЗаполнитьОбеспечениеВУстановленномПорядке(ВыбранноеЗначение);
	
	Результат = ПродолжитьВызов(ВыбранноеЗначение);
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ГИГ_ОбработкаВыбораПеред(ВыбранноеЗначение, ИсточникВыбора)
	//{Гига suv 12.02.2018 СхемыОбеспеченияДляЗаказов	
	Если ИсточникВыбора.ИмяФормы = "Обработка.ГИГ_ПодборТоваровВДокументПродажи.Форма.Форма" Тогда
		ОбработкаВыбораПодборНаКлиенте(ВыбранноеЗначение);
	КонецЕсли;
	//Гига suv 12.02.2018}
КонецПроцедуры

&НаКлиенте
Процедура ГИГ_ПодобратьТоварыВместо(Команда)
	// &ЗамерПроизводительности
	ОценкаПроизводительностиКлиент.НачатьЗамерВремени(Истина,
		"Документ.ЗаказНаПеремещение.ФормаДокумента.Команда.ПодобратьТовары");
	
	Отказ = Ложь;
	
	Если Не ЗначениеЗаполнено(Объект.СкладОтправитель) Тогда
		
		ОчиститьСообщения();
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Поле ""Отправитель"" не заполнено'"), Объект.Ссылка, "Объект.СкладОтправитель",, Отказ);
		
	КонецЕсли;
	
	Если Отказ Тогда
		
		Возврат;
		
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Склад",                                     Объект.СкладОтправитель);
	ПараметрыФормы.Вставить("РежимПодбораБезСуммовыхПараметров",         Истина);
	ПараметрыФормы.Вставить("ОтборПоТипуНоменклатуры",                   Новый ФиксированныйМассив(НоменклатураКлиентСервер.ОтборПоТоваруМногооборотнойТаре(Ложь)));
	ПараметрыФормы.Вставить("ИспользоватьДатыОтгрузки",                  Истина);
	ПараметрыФормы.Вставить("СкрыватьКолонкуВидЦены",                    Истина);
	ПараметрыФормы.Вставить("СкрыватьКомандуЦеныНоменклатуры",           Истина);
	ПараметрыФормы.Вставить("Заголовок",                                 НСтр("ru = 'Подбор товаров'"));
	ПараметрыФормы.Вставить("Дата",                                      Объект.Дата);
	ПараметрыФормы.Вставить("Документ",                                  Объект.Ссылка);
	ПараметрыФормы.Вставить("ПараметрыУказанияСерий",                    ПараметрыУказанияСерий);
	ПараметрыФормы.Вставить("Назначение",                                Объект.Назначение);
	ПараметрыФормы.Вставить("Подразделение",                             Объект.Подразделение);
	ПараметрыФормы.Вставить("ПодборВариантовОбеспечения",                Истина);
	
	//{Гига suv 12.01.2018
	//ОткрытьФорму("Обработка.ПодборТоваровВДокументПродажи.Форма", ПараметрыФормы, ЭтаФорма, УникальныйИдентификатор);
	ПараметрыФормы.Вставить("СкрыватьРучныеСкидки",                      Истина);
	ОткрытьФорму("Обработка.ГИГ_ПодборТоваровВДокументПродажи.Форма", ПараметрыФормы, ЭтаФорма, УникальныйИдентификатор);
	//Гига suv 12.01.2018}
КонецПроцедуры

&НаСервере
Процедура ГИГ_ПриСозданииНаСервереПосле(Отказ, СтандартнаяОбработка)
	//{Гига suv 16.01.2018 СхемыОбеспеченияДляЗаказов
	Если Объект.ГИГ_СформированАвтоматически Тогда
		ТолькоПросмотр = НЕ УправлениеДоступом.ЕстьРоль("ГИГ_ИзменениеРезервовНаУдаленномСкладе");
	КонецЕсли;
	//Гига suv 16.01.2018}
КонецПроцедуры

&НаКлиенте
Процедура ГИГ_ТоварыГИГ_СхемаОбеспеченияНачалоВыбораВместо(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОтборСклад = Объект.СкладОтправитель;
	ОтборНоменклатура= Элемент.Родитель.ТекущиеДанные.Номенклатура;
	ОтборХарактеристикаНоменклатуры= Элемент.Родитель.ТекущиеДанные.Характеристика;
	
	ОткрытьФорму("Справочник.СхемыОбеспечения.Форма.ГИГ_ВыборСхемыПоСкладу",
				 Новый Структура("Склад,Номенклатура,Характеристика", ОтборСклад,ОтборНоменклатура,ОтборХарактеристикаНоменклатуры),
				 Элементы.ТоварыГИГ_СхемаОбеспечения
	);
	
КонецПроцедуры

&НаКлиенте
Процедура ГИГ_ТоварыГИГ_СхемаОбеспеченияОбработкаВыбораВместо(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ДатаРасчета = ?(НЕ ЗначениеЗаполнено(Объект.Дата),ТекущаяДата(),Объект.Дата);
	
	ДанныеНоменклатуры = Новый Структура("Номенклатура,Характеристика");
	ЗаполнитьЗначенияСвойств(ДанныеНоменклатуры,Элемент.Родитель.ТекущиеДанные);
	
	СтруктураСроки = ГИГ_МодульВызовСервера.ГИГ_ПолучитьСрокиОбеспеченияПоСхеме(ВыбранноеЗначение,ДатаРасчета,Объект.СкладОтправитель,ДанныеНоменклатуры);
		
	ЗаполнитьЗначенияСвойств(Объект.Товары.НайтиПоИдентификатору(Элемент.Родитель.ТекущаяСтрока),СтруктураСроки);
	
КонецПроцедуры

&НаКлиенте
Процедура Рин1_ОбработкаВыбораПеред(ВыбранноеЗначение, ИсточникВыбора)
	
	ГИГ_ОбработкаВыбораПеред(ВыбранноеЗначение, ИсточникВыбора);
	
КонецПроцедуры

&НаКлиенте
Процедура Рин1_ПодобратьТоварыПеред(Команда)
	
		ГИГ_ПодобратьТоварыВместо(Команда);
	Возврат;
	
КонецПроцедуры

&НаСервере
Процедура Рин1_ПриСозданииНаСервереПосле(Отказ, СтандартнаяОбработка)
	
	ГИГ_ПриСозданииНаСервереПосле(Отказ, СтандартнаяОбработка);
	
	// + [Rineco], [Киселев А.] [26.11.2021] 
	// Задача: [№ 23099], [#ДобавитьЭлементОбъединитьСтроки]
	ДобавитьЭлементОбъединитьСтроки(Отказ);
	// - [Rineco], [Киселев А.] [26.11.2021]
	
	
КонецПроцедуры

// + [Rineco], [Киселев А.] [26.11.2021] 
// Задача: [№ 23099], [#ДобавитьЭлементОбъединитьСтроки]
&НаСервере
Процедура ДобавитьЭлементОбъединитьСтроки(Отказ)
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	КомандаОбъединить = Команды.Добавить("КомандаОбъединить");
	КомандаОбъединить.Действие = "Подключаемый_СвернутьСтроки"; 
	КомандаОбъединить.Картинка = БиблиотекаКартинок.ОбъединитьСтроки;
	КомандаОбъединить.Подсказка = "Объединить строки номенклатуры";
	
	КнопкаСвернуть = Элементы.Вставить("СвернутьСтроки",Тип("КнопкаФормы"),Элементы.Товары.КоманднаяПанель,Элементы.ГруппаДобавитьСтроки);
	КнопкаСвернуть.ИмяКоманды = "КомандаОбъединить";

КонецПроцедуры

// + [Rineco], [Киселев А.] [26.11.2021] 
// Задача: [№ 23099], [#ДобавитьЭлементОбъединитьСтроки]
&НаКлиенте
Процедура Подключаемый_СвернутьСтроки(Команда)
	
	МассивСворачиваемыхСтрок = Новый Массив;
	
	Для Каждого СтрокаТаблицы Из Элементы.Товары.ВыделенныеСтроки Цикл 
		МассивСворачиваемыхСтрок.Добавить(СтрокаТаблицы);
	КонецЦикла;
	
	СвернутьСтрокиСервер(МассивСворачиваемыхСтрок);
	ОбновитьИнтерфейс();
	Модифицированность = Истина;
	
КонецПроцедуры

// + [Rineco], [Киселев А.] [26.11.2021] 
// Задача: [№ 23099], [#ДобавитьЭлементОбъединитьСтроки]
&НаСервере
Процедура  СвернутьСтрокиСервер(МассивСворачиваемыхСтрок)
	
	Если МассивСворачиваемыхСтрок.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ТаблицаБезСвертки = Объект.Товары.Выгрузить();
	ТаблицаДляСвертки = ТаблицаБезСвертки.СкопироватьКолонки();
	
	Для Каждого ЭлементМассива Из МассивСворачиваемыхСтрок Цикл 
		СтрокаДляСвертки = Объект.Товары.НайтиПоИдентификатору(ЭлементМассива);
		СтрокаДляСвертки.РИН_СвернутьСтроки = Истина;
		НоваяСтрокаДляСвертки = ТаблицаДляСвертки.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаДляСвертки,СтрокаДляСвертки);		
	КонецЦикла;
	
	ТаблицаБезСвертки = Объект.Товары.Выгрузить();
	Отбор = Новый Структура;
	Отбор.Вставить("РИН_СвернутьСтроки",Истина);
	СтрокиДляУдаления = ТаблицаБезСвертки.НайтиСтроки(Отбор);
	
	Для Каждого ЭлементСтрокиДляУдаления Из СтрокиДляУдаления Цикл 
		ТаблицаБезСвертки.Удалить(ЭлементСтрокиДляУдаления);
	КонецЦикла;
	
	ТаблицаДляМаксимальнойДаты  = ТаблицаДляСвертки.Скопировать();
	Альфа = Новый СравнениеЗначений;
	ТаблицаДляМаксимальнойДаты.Сортировать("НачалоОтгрузки Убыв", Альфа);
	МаксимальнаяДатаОтгрузки = ТаблицаДляМаксимальнойДаты[0].НачалоОтгрузки;
	
	ТаблицаДляСвертки.Свернуть("ГИГ_СхемаОбеспечения,ГИГ_СрокПоставки,Упаковка,Назначение,ВариантОбеспечения,Номенклатура,Характеристика,Серия,Отменено","Количество,КоличествоУпаковок");
	ТаблицаДляСвертки.Колонки.Добавить("НачалоОтгрузки",ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Дата));
	ТаблицаДляСвертки.ЗаполнитьЗначения(МаксимальнаяДатаОтгрузки,"НачалоОтгрузки");
	Объект.Товары.Очистить();
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ТаблицаДляСвертки,Объект.Товары);
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ТаблицаБезСвертки,Объект.Товары);
КонецПроцедуры


// + [Rineco], [Киселев А.Н.] [10.09.2021] 
// Задача: [№ 1853], [#Контроль удаленных позций в ТЧ]
&НаКлиенте
Процедура Рин1_ПередЗаписьюПеред(Отказ, ПараметрыЗаписи)
	Ринэко_КонтрольУдаленныхПозицийКлиент.НачатьКонтрольУдаленныхПозиций(ЭтотОбъект,Отказ,ПараметрыЗаписи);
КонецПроцедуры
// - [Rineco], [Киселев А.Н.] [10.09.2021]







