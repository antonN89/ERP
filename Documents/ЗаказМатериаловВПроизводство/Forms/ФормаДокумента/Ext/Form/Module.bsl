&НаСервере
Функция ГИГ_ЗаполнитьОбеспечениеВУстановленномПорядке(ВыбранноеЗначение)
		
	ПараметрыЗаполнения = Новый Структура("ПереченьВариантов, ИзменятьОбособление, ЗаполнятьЦелымиУпаковками", Неопределено, Истина, Ложь);
	ЗаполнитьЗначенияСвойств(ПараметрыЗаполнения, ВыбранноеЗначение);
	
	ПутиКДанным = Новый Соответствие; //Описание особенностей формы
	ПутиКДанным.Вставить("ДатаОтгрузкиРабот", "НачалоОтгрузки");
	ПутиКДанным.Вставить("ДатаОтгрузки", "НачалоОтгрузки");
	
	ПараметрыДокумента = Новый Структура;
	ПараметрыДокумента.Вставить("МенеджерРегистра", РегистрыНакопления.ЗаказыМатериаловВПроизводство);
	ПараметрыДокумента.Вставить("ПутиКДанным", ПутиКДанным);
	
	//{Гига suv 11.01.2018
	//Свернуть
	
	СтруктураОтбор = Новый Структура("Номенклатура,Характеристика,Упаковка,Серия");
	СтруктураСуммирование = Новый Структура("КоличествоУпаковок,Количество");
	СтрокиВыбранные = Новый Массив;
	
	СоответствиеСтрок = Объект.Товары.Выгрузить(,"ИсходныйНомерСтроки,Номенклатура,Характеристика,Упаковка,Серия");
	
	СоответствиеСтрок.Очистить();
	
	Если Элементы.Товары.ВыделенныеСтроки.Количество() > 1 Тогда
		Для Каждого ИдентификаторСтроки из Элементы.Товары.ВыделенныеСтроки Цикл
			
			Строка = Объект.Товары.НайтиПоИдентификатору(ИдентификаторСтроки);
			
			ЗаполнитьЗначенияСвойств(СтруктураОтбор, Строка);
			
			Стр = СоответствиеСтрок.НайтиСтроки(СтруктураОтбор);
			
			Если НЕ Стр.Количество() Тогда
				Нстр = СоответствиеСтрок.Добавить();
				ЗаполнитьЗначенияСвойств(Нстр, Строка);
				Нстр.ИсходныйНомерСтроки = ИдентификаторСтроки;
				СтрокиВыбранные.Добавить(ИдентификаторСтроки);
			Иначе
				ЗаполнитьЗначенияСвойств(СтруктураСуммирование, Строка);
				
				СтрокаПриемник = Объект.Товары.НайтиПоИдентификатору(Стр[0].ИсходныйНомерСтроки);
				
				Для Каждого Колонка из СтруктураСуммирование Цикл
					СтрокаПриемник[Колонка.Ключ] = СтрокаПриемник[Колонка.Ключ] + Колонка.Значение;
				КонецЦикла;
				
				Объект.Товары.Удалить(Строка);
			КонецЕсли;	
			
		КонецЦикла;
	Иначе
		СтрокиВыбранные = Элементы.Товары.ВыделенныеСтроки;
	КонецЕсли;
	//Гига suv 11.01.2018}
	
	Таблица = ОбеспечениеСервер.ТаблицаЗаполнениеОбеспечения(
		СтрокиВыбранные,//Элементы.Товары.ВыделенныеСтроки,
		Объект,
		Объект.Товары,
		ПараметрыЗаполнения,
		ПараметрыДокумента);
	
	Если ТипЗнч(Таблица) <> Тип("ТаблицаЗначений") Тогда
		Возврат Новый Структура(
			"Ошибки",
			ОбеспечениеКлиентСервер.ОшибкиКонтроляОтгрузкиИОбеспечения(
				Таблица, "Товары", НСтр("ru = 'Товары'")));
	КонецЕсли;
	
	//{Гига suv 11.01.2018
	СтрокиТовары = Объект.Товары.Выгрузить(Новый Массив,"Номенклатура, Характеристика, ИсходныйНомерСтроки");
	//СтрокиТовары = Параметры.СтрокиТовары;
	//СтрокиТовары.Очистить();
	
	Для Каждого Индекс из СтрокиВыбранные Цикл
		СтрТовара = СтрокиТовары.Добавить();
		ЗаполнитьЗначенияСвойств(СтрТовара,Объект.Товары.НайтиПоИдентификатору(Индекс));
		СтрТовара.ИсходныйНомерСтроки = Индекс;
	КонецЦикла;
	
	СтруктураПараметры = Новый Структура("Склад,СтрокиТовары,Дата",Объект.Склад,СтрокиТовары,Объект.Дата);
	ГИГ_ОбеспечениеСервер.ДополнитьОбеспечение(Таблица, СтруктураПараметры);
	//Гига suv 11.01.2018}
	
	//Перенос результатов в документ.
	ТекстОповещения = Документы.ЗаказМатериаловВПроизводство.ЗаполнитьВариантОбеспечения(
		Объект, ЭтаФорма, "СтрокиТовары", Таблица, ПараметрыУказанияСерий);
	
	Возврат Новый Структура("Ошибки, Оповещение", Неопределено, ТекстОповещения);
КонецФункции

&НаСервере
&Вместо("ЗаполнитьОбеспечениеВУстановленномПорядке")
Функция Рин1_ЗаполнитьОбеспечениеВУстановленномПорядке(ВыбранноеЗначение)
	
	Возврат ГИГ_ЗаполнитьОбеспечениеВУстановленномПорядке(ВыбранноеЗначение);
	
	Результат = ПродолжитьВызов(ВыбранноеЗначение);
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ГИГ_ОбработкаВыбораПеред(ВыбранноеЗначение, ИсточникВыбора)
//{Гига suv 12.02.2018 СхемыОбеспеченияДляЗаказов	
	Если ИсточникВыбора.ИмяФормы = "Обработка.ГИГ_ПодборТоваровВДокументПродажи.Форма.Форма" Тогда
		ОбработкаВыбораПодборНаКлиенте(ВыбранноеЗначение);
	КонецЕсли;
//Гига suv 12.02.2018}	
КонецПроцедуры

&НаКлиенте
Процедура ГИГ_ПодобратьТоварыВместо(Команда)
	
	// &ЗамерПроизводительности
	ОценкаПроизводительностиКлиент.НачатьЗамерВремени(Истина,
		"Документ.ЗаказМатериаловВПроизводство.ФормаДокумента.Команда.ПодобратьТовары");
	
	Отказ = Ложь;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Склад",                                     Объект.Склад);
	ПараметрыФормы.Вставить("РежимПодбораБезСуммовыхПараметров",         Истина);
	ПараметрыФормы.Вставить("ОтборПоТипуНоменклатуры",                   Новый ФиксированныйМассив(НоменклатураКлиентСервер.ОтборПоТоваруМногооборотнойТаре(Ложь)));
	ПараметрыФормы.Вставить("ИспользоватьДатыОтгрузки",                  Истина);
	ПараметрыФормы.Вставить("СкрыватьКолонкуВидЦены",                    Истина);
	ПараметрыФормы.Вставить("СкрыватьКомандуЦеныНоменклатуры",           Истина);
	ПараметрыФормы.Вставить("Заголовок",                                 НСтр("ru = 'Подбор товаров'"));
	ПараметрыФормы.Вставить("Дата",                                      Объект.Дата);
	ПараметрыФормы.Вставить("Документ",                                  Объект.Ссылка);
	ПараметрыФормы.Вставить("ПараметрыУказанияСерий",                    ПараметрыУказанияСерий);
	ПараметрыФормы.Вставить("Назначение",                                Объект.Назначение);
	ПараметрыФормы.Вставить("Подразделение",                             Объект.Подразделение);
	ПараметрыФормы.Вставить("ПодборВариантовОбеспечения",                Истина);
	//{Гига suv 12.01.2018
	//ОткрытьФорму("Обработка.ПодборТоваровВДокументПродажи.Форма", ПараметрыФормы, ЭтаФорма, УникальныйИдентификатор);
	ПараметрыФормы.Вставить("СкрыватьРучныеСкидки",                      Истина);
	ОткрытьФорму("Обработка.ГИГ_ПодборТоваровВДокументПродажи.Форма", ПараметрыФормы, ЭтаФорма, УникальныйИдентификатор);
	//Гига suv 12.01.2018}
	
КонецПроцедуры

&НаКлиенте
Процедура ГИГ_ТоварыГИГ_СхемаОбеспеченияНачалоВыбораВместо(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	ОтборСклад = Объект.Склад;
	ОтборНоменклатура= Элемент.Родитель.ТекущиеДанные.Номенклатура;
	ОтборХарактеристикаНоменклатуры= Элемент.Родитель.ТекущиеДанные.Характеристика;
	
	ОткрытьФорму("Справочник.СхемыОбеспечения.Форма.ГИГ_ВыборСхемыПоСкладу",
				 Новый Структура("Склад,Номенклатура,Характеристика", ОтборСклад,ОтборНоменклатура,ОтборХарактеристикаНоменклатуры),
				 Элементы.ТоварыГИГ_СхемаОбеспечения
	);
	
КонецПроцедуры

&НаКлиенте
Процедура ГИГ_ТоварыГИГ_СхемаОбеспеченияОбработкаВыбораПеред(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ДатаРасчета = ?(НЕ ЗначениеЗаполнено(Объект.Дата),ТекущаяДата(),Объект.Дата);
	
	ДанныеНоменклатуры = Новый Структура("Номенклатура,Характеристика");
	ЗаполнитьЗначенияСвойств(ДанныеНоменклатуры,Элемент.Родитель.ТекущиеДанные);
	
	СтруктураСроки = ГИГ_МодульВызовСервера.ГИГ_ПолучитьСрокиОбеспеченияПоСхеме(ВыбранноеЗначение,ДатаРасчета,Объект.Склад,ДанныеНоменклатуры);
		
	ЗаполнитьЗначенияСвойств(Объект.Товары.НайтиПоИдентификатору(Элемент.Родитель.ТекущаяСтрока),СтруктураСроки);

КонецПроцедуры

&НаКлиенте
Процедура Рин1_ОбработкаВыбораПеред(ВыбранноеЗначение, ИсточникВыбора)
	
	ГИГ_ОбработкаВыбораПеред(ВыбранноеЗначение, ИсточникВыбора);
	
КонецПроцедуры

&НаКлиенте
Процедура Рин1_ПодобратьТоварыПеред(Команда)
	
	ГИГ_ПодобратьТоварыВместо(Команда);
	Возврат;
	
КонецПроцедуры



