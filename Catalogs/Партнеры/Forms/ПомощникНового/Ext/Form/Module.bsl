
&НаКлиенте
&После("ПерейтиНаСтраницуДополнительныхРеквизитов")
Процедура Рин1_ПерейтиНаСтраницуДополнительныхРеквизитов()
	
	Для каждого Элемент Из Элементы Цикл	
		Если не СтрНайти(Элемент.Имя,"ДополнительныйРеквизитЗначение_") = 0 и Элемент.Вид = ВидПоляФормы.ПолеВвода Тогда
			УстановитьДопРеквизит(Элемент.Имя)
		КонецЕсли;	
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДопРеквизит(ЭлементИмя)
	
	Если ТипЗнч(ЭтотОбъект[ЭлементИмя]) = Тип("СправочникСсылка.ЗначенияСвойствОбъектов") Тогда
		ЭтотОбъект[ЭлементИмя] = Справочники.ЗначенияСвойствОбъектов.НайтиПоНаименованию("EU");
	КонецЕсли;
	
КонецПроцедуры // УстановитьДопРеквизит()

&НаСервере
Функция ДопРеквизитПустой(ЭлементИмя)
	
	Если ТипЗнч(ЭтотОбъект[ЭлементИмя]) = Тип("СправочникСсылка.ЗначенияСвойствОбъектов") Тогда
		Если ЭтотОбъект[ЭлементИмя] = Справочники.ЗначенияСвойствОбъектов.ПустаяСсылка()  Тогда
			Возврат Истина;
		Иначе
			Возврат Ложь;
		КонецЕсли;
	КонецЕсли;
	Возврат Ложь;
	
КонецФункции // УстановитьДопРеквизит()

//{{20201002 ГлазуновДВ Включили Сегмент и его заполнение по Списку
&НаСервере
&После("ПриСозданииНаСервере")
Процедура Рин1_ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	// Вставить содержимое метода.
	ЕстьПравоВключенияВСегмент	= Истина; //Для Записи Справочников в конце выполнения Помощника
	ЗаголовокСегмента = "Базовые скидки по категории клиента";
	
	Элементы.Сегмент.Видимость            = Истина;
	Элементы.Сегмент.Заголовок            = ЗаголовокСегмента;
	Элементы.Сегмент.ПоложениеЗаголовка   = ПоложениеЗаголовкаЭлементаФормы.Верх;
	Элементы.Сегмент.РежимВыбораИзСписка = Истина;
	Элементы.Сегмент.СписокВыбора.Добавить(Справочники.СегментыПартнеров.НайтиПоКоду("00-00000003"),Справочники.СегментыПартнеров.НайтиПоКоду("00-00000003").Наименование);
	Элементы.Сегмент.СписокВыбора.Добавить(Справочники.СегментыПартнеров.НайтиПоКоду("00-00000004"),Справочники.СегментыПартнеров.НайтиПоКоду("00-00000004").Наименование);
	Элементы.Сегмент.СписокВыбора.Добавить(Справочники.СегментыПартнеров.НайтиПоКоду("00-00000005"),Справочники.СегментыПартнеров.НайтиПоКоду("00-00000005").Наименование);
	
	Элементы.СегментЧастноеЛицо.Видимость = Истина;
	Элементы.СегментЧастноеЛицо.Заголовок = ЗаголовокСегмента;
	Элементы.СегментЧастноеЛицо.ПоложениеЗаголовка   = ПоложениеЗаголовкаЭлементаФормы.Верх;
	Элементы.СегментЧастноеЛицо.РежимВыбораИзСписка = Истина;
	Элементы.СегментЧастноеЛицо.СписокВыбора.Добавить(Справочники.СегментыПартнеров.НайтиПоКоду("00-00000003"),Справочники.СегментыПартнеров.НайтиПоКоду("00-00000003").Наименование);
	Элементы.СегментЧастноеЛицо.СписокВыбора.Добавить(Справочники.СегментыПартнеров.НайтиПоКоду("00-00000004"),Справочники.СегментыПартнеров.НайтиПоКоду("00-00000004").Наименование);
	Элементы.СегментЧастноеЛицо.СписокВыбора.Добавить(Справочники.СегментыПартнеров.НайтиПоКоду("00-00000005"),Справочники.СегментыПартнеров.НайтиПоКоду("00-00000005").Наименование);
	
	Элементы.ФактическийАдресЧастноеЛицо.РедактированиеТекста	= Ложь;
	Элементы.ФактическийАдрес.РедактированиеТекста 				= Ложь;
	Элементы.ЮридическийАдрес.РедактированиеТекста 				= Ложь;
	Элементы.ФактическийАдресГоловногоКонтрагента.РедактированиеТекста = Ложь;
	Элементы.ЮридическийАдресГоловногоКонтрагента.РедактированиеТекста = Ложь;
	
	Элементы.ФактическийАдресЧастноеЛицо.АвтоОтметкаНезаполненного	= Истина;
	Элементы.ФактическийАдрес.АвтоОтметкаНезаполненного				= Истина;
	Элементы.ЮридическийАдрес.АвтоОтметкаНезаполненного				= Истина;
	//Элементы.ФактическийАдресГоловногоКонтрагента.АвтоОтметкаНезаполненного = Истина;
	//Элементы.ЮридическийАдресГоловногоКонтрагента.АвтоОтметкаНезаполненного = Истина;
	
	//++Шерстюк Ю.Ю. 23.03.2021
	ФактАдресКонтрагентаОбязателен = Истина;
	//--Шерстюк Ю.Ю. 23.03.2021

КонецПроцедуры

&НаСервере
&Перед("ЗаписатьПартнераИСвязанныеДанные")
Процедура Рин1_ЗаписатьПартнераИСвязанныеДанные(СписокСозданных)
	// Вставить содержимое метода.
	Если ПустаяСтрока(ФактическийАдрес) Тогда
		ОписаниеОшибки = "Не заполнен Фактический Адрес";
		//++Шерстюк Ю.Ю. 23.03.2021 по Задаче 6699
		Сообщить("Ошибка записи: " + ОписаниеОшибки);
		//--Шерстюк Ю.Ю.
		ВызватьИсключение ОписаниеОшибки;
	КонецЕсли;
	//++Шерстюк Ю.Ю. 23.03.2021
	//Если УказыватьЮридическиеРеквизиты Тогда
	Если УказыватьЮридическиеРеквизиты и ЭтоКомпания = 0 Тогда //для частного лица не нужна проверка на заполнение юр.адреса
	//--Шерстюк Ю.Ю.
		Если ПустаяСтрока(ЮридическийАдрес) Тогда
			ОписаниеОшибки = "Не заполнен Юридический Адрес";
			ОписаниеОшибки = "Не заполнен Фактический Адрес";
			//++Шерстюк Ю.Ю. 23.03.2021 по Задаче 6699
			Сообщить("Ошибка записи: " + ОписаниеОшибки);
			//--Шерстюк Ю.Ю.
			ВызватьИсключение ОписаниеОшибки;
		КонецЕсли;
		
	КонецЕсли;
	Если ВыбратьГоловногоКонтрагента = 1 Тогда
		Если ПустаяСтрока(ФактическийАдресГоловногоКонтрагента) Тогда
			ОписаниеОшибки = "Не заполнен Фактический Адрес Головного контрагента";
			ОписаниеОшибки = "Не заполнен Фактический Адрес";
			//++Шерстюк Ю.Ю. 23.03.2021 по Задаче 6699
			Сообщить("Ошибка записи: " + ОписаниеОшибки);
			//--Шерстюк Ю.Ю.
			ВызватьИсключение ОписаниеОшибки;
		КонецЕсли;
		Если ПустаяСтрока(ЮридическийАдресГоловногоКонтрагента) Тогда
			ОписаниеОшибки = "Не заполнен Юридический Адрес Головного контрагента";
			ОписаниеОшибки = "Не заполнен Фактический Адрес";
			//++Шерстюк Ю.Ю. 23.03.2021 по Задаче 6699
			Сообщить("Ошибка записи: " + ОписаниеОшибки);
			//--Шерстюк Ю.Ю.
			ВызватьИсключение ОписаниеОшибки;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
&Вместо("ГруппаДоступаПриИзменении")
Процедура Рин1_ГруппаДоступаПриИзменении(Элемент)
	// Вставить содержимое метода.
	//ПродолжитьВызов(Элемент);
КонецПроцедуры
//}}20201002 ГлазуновДВ


//++Шерстюк Ю.Ю. 23.03.2021
&НаКлиенте
&Вместо("ДополнительныеСведенияЗаполненыНеправильно")
Функция Рин1_ДополнительныеСведенияЗаполненыНеправильно()
	Отказ = Ложь;
	ОчиститьСообщения();
	
	Если НЕ Клиент И НЕ Поставщик И НЕ ПрочиеОтношения И НЕ Конкурент Тогда
		ВывестиСообщениеПользователю(НСтр("ru = 'Необходимо определить хотя бы один тип отношений';
											|en = 'You must define at least one type of relations'"),"Клиент");
		Отказ = Истина;
	КонецЕсли;
	
	Если ИспользуютсяГруппыДоступаПартнеров
	 И ГруппаДоступа = ПредопределенноеЗначение("Справочник.ГруппыДоступаПартнеров.ПустаяСсылка") Тогда
		ВывестиСообщениеПользователю(НСтр("ru = 'Необходимо указать группу доступа';
											|en = 'Specify access group'"),"ГруппаДоступа");
		Отказ = Истина;
	КонецЕсли;
	
	Если ПустаяСтрока(Название) Тогда
		ВывестиСообщениеПользователю(НСтр("ru = 'Необходимо указать рабочее наименование';
											|en = 'Specify work name'"),"Название");
		Отказ = Истина;
	КонецЕсли;
	
	Если ЭтоКомпания = 0 Тогда
		
		//++Шерстюк Ю.Ю. 23.03.2021
		//Если УказыватьЮридическиеРеквизиты 
		//	И ЮрАдресКонтрагентаОбязателен
		//	И Не ЗначениеЗаполнено(ЮридическийАдрес) Тогда
		 Если УказыватьЮридическиеРеквизиты
		    И Не ЗначениеЗаполнено(ЮридическийАдрес) Тогда
		//--Шерстюк Ю.Ю.
			
			ВывестиСообщениеПользователю(НСтр("ru = 'Необходимо указать юридический адрес';
												|en = 'Specify legal address'"), "ЮридическийАдрес");
			Отказ = Истина;
			
		КонецЕсли;
		//++Шерстюк Ю.Ю. 23.03.2021
		//Если УказыватьЮридическиеРеквизиты 
		//	И ФактАдресКонтрагентаОбязателен
		//	И Не ЗначениеЗаполнено(ФактическийАдрес) Тогда
		Если ФактАдресКонтрагентаОбязателен
			И Не ЗначениеЗаполнено(ФактическийАдрес) Тогда
		//--Шерстюк Ю.Ю.	
			ВывестиСообщениеПользователю(НСтр("ru = 'Необходимо указать фактический адрес';
												|en = 'Specify actual address'"), "ФактическийАдрес");
			Отказ = Истина;
			
		КонецЕсли;
		
	Иначе
		
		Если ТребуетсяУказаниеАдресаЧастногоЛица(ЭтотОбъект) Тогда
			
			ВывестиСообщениеПользователю(НСтр("ru = 'Необходимо указать адрес проживания';
												|en = 'Specify residential address'"), "ЮридическийАдрес");
			Отказ = Истина;
			
		КонецЕсли;

	КонецЕсли;
	
	Возврат Отказ;

КонецФункции




&НаКлиенте
&Вместо("ВыполнитьНеобходимыеДействияПриПереходеПоСтраницам")
Процедура Рин1_ВыполнитьНеобходимыеДействияПриПереходеПоСтраницам(Знач Оповещение, Команда)
	
	Если Команда.Имя = "Далее" Тогда
		
		Если Элементы.СтраницыПомощника.ТекущаяСтраница = Элементы.СтраницаПервичнаяИнформация Тогда
			
			ВыполнитьПоискПоПервичнойИнформации();
			Если ТаблицаНайдено.Количество() > 0 Тогда
				ПерейтиНаСтраницуНайденныхСовпадений();
			Иначе
				ПерейтиНаСтраницуДополнительныхСведений();
			КонецЕсли;
			
		ИначеЕсли Элементы.СтраницыПомощника.ТекущаяСтраница = Элементы.СтраницаНайдено Тогда
			
			ВыборПользователяПоРезультатамНайдено(Новый ОписаниеОповещения("ВыполнитьНеобходимыеДействияПриПереходеПоСтраницамПослеВыбора", ЭтотОбъект, Новый Структура("Оповещение", Оповещение)));
			Возврат;
			
		ИначеЕсли Элементы.СтраницыПомощника.ТекущаяСтраница = Элементы.СтраницаДополнительныеСведения Тогда
			
			Если ИспользоватьДополнительныеРеквизиты Тогда
				
				Если ТребуетсяОбновлениеЭлементовДопРеквизитов Тогда
					ОбновитьЭлементыДополнительныхРеквизитов();
					ТребуетсяОбновлениеЭлементовДопРеквизитов = Ложь;
				КонецЕсли;
				
				Если Элементы.ГруппаДополнительныеРеквизиты.ПодчиненныеЭлементы.Количество() > 0 Тогда
					ПерейтиНаСтраницуДополнительныхРеквизитов();
				Иначе
					ПерейтиНаСтраницуРасчетногоСчетаИлиФинальную();
				КонецЕсли;
				
			Иначе
				
				ПерейтиНаСтраницуРасчетногоСчетаИлиФинальную();
				
			КонецЕсли;
			
		ИначеЕсли Элементы.СтраницыПомощника.ТекущаяСтраница = Элементы.СтраницаДополнительныеРеквизиты Тогда
			
			ПерейтиНаСтраницуРасчетногоСчетаИлиФинальную();
			
		ИначеЕсли Элементы.СтраницыПомощника.ТекущаяСтраница = Элементы.СтраницаРасчетныйСчет Тогда
			
			Если ИспользуютсяТолькоПартнеры
				Или (ДействиеСКонтрагентом = 1 И Не НаОснованииКонтрагента И УказыватьЮридическиеРеквизиты) Тогда
				
				Если ВидКомпании = 3 И Не ИспользуютсяТолькоПартнеры Тогда
					ПерейтиНаСтраницуВыбораГоловногоКонтрагента();
				ИначеЕсли ВидКомпании = 0 И ЗначениеЗаполнено(ИНН) Тогда
					ВыполнитьПоискНепривязанныхОбособленныхПодразделений();
					Если ОбособленныеПодразделения.Количество() > 0 Тогда
						ПерейтиНаСтраницуОбособленныхПодразделений();
					КонецЕсли;
				КонецЕсли;
				
			КонецЕсли;
			
			Если Элементы.СтраницыПомощника.ТекущаяСтраница = Элементы.СтраницаРасчетныйСчет Тогда
				ПерейтиНаФинальнуюСтраницу();
			КонецЕсли;
			
		ИначеЕсли Элементы.СтраницыПомощника.ТекущаяСтраница = Элементы.СтраницаОбособленныеПодразделения Тогда
			
			ПерейтиНаФинальнуюСтраницу();
			
		ИначеЕсли Элементы.СтраницыПомощника.ТекущаяСтраница = Элементы.СтраницаГоловнойКонтрагент Тогда
			
			Если ВыбратьГоловногоКонтрагента = 1 Тогда
				ПерейтиНаСтраницуРасчетногоСчетаГоловногоКонтрагента();
			Иначе
				ПерейтиНаФинальнуюСтраницу();
			КонецЕсли;
			
		ИначеЕсли Элементы.СтраницыПомощника.ТекущаяСтраница = Элементы.СтраницаРасчетныйСчетГоловногоКонтрагента Тогда
			
			ПерейтиНаФинальнуюСтраницу();
			
		ИначеЕсли Элементы.СтраницыПомощника.ТекущаяСтраница = Элементы.СтраницаФинальная Тогда
			
			//bercut110620
			Для каждого Элемент Из Элементы Цикл	
				Если не СтрНайти(Элемент.Имя,"ДополнительныйРеквизитЗначение_") = 0 и Элемент.Вид = ВидПоляФормы.ПолеВвода Тогда
					Если ДопРеквизитПустой(Элемент.Имя) Тогда
						Сообщить("Необходимо заполнить целевую группу!");
						//ПерейтиНаСтраницуДополнительныхРеквизитов();
						Возврат;
					КонецЕсли;
				КонецЕсли;	
			КонецЦикла;			
			//
			
			СписокСозданных = Новый СписокЗначений;
			СоздатьПартнера(СписокСозданных);
			
			Если СозданиеВыполнено Тогда
				
				РеквизитыПартнера = Новый Структура;
				
				Для Каждого ЭлементСписка Из СписокСозданных Цикл
					Если ТипЗнч(ЭлементСписка.Значение) = Тип("СправочникСсылка.Партнеры") Тогда
						РеквизитыПартнера.Вставить("Наименование", ЭлементСписка.Представление);
						РеквизитыПартнера.Вставить("ОсновнойМенеджер", ОсновнойМенеджер);
					КонецЕсли;
					ПоказатьОповещениеПользователя("Создание", ЭлементСписка.Значение, ЭлементСписка.Представление);
				КонецЦикла;
				
				Если РеквизитыПартнера.Количество() = 0 Тогда
					РеквизитыПартнера = ОбщегоНазначенияУТВызовСервера.ЗначенияРеквизитовОбъекта(ПартнерВыбор, "ОсновнойМенеджер, Наименование");
				КонецЕсли;
				
				ВыполнитьДействияЗакрытияФормы(Новый ОписаниеОповещения("ВыполнитьНеобходимыеДействияПриПереходеПоСтраницамЗавершение", ЭтотОбъект, Новый Структура("Оповещение", Оповещение)), РеквизитыПартнера, Истина);
				Возврат;
				
			КонецЕсли;
			
		КонецЕсли;
		
	Иначе
		
		РазмерСписка = СтекПредыдущихСтраниц.Количество();
		ИмяПредыдущейСтраницы = СтекПредыдущихСтраниц[РазмерСписка - 1].Значение;
		Элементы.СтраницыПомощника.ТекущаяСтраница = Элементы[ИмяПредыдущейСтраницы];
		СтекПредыдущихСтраниц.Удалить(РазмерСписка -1);
		
	КонецЕсли;
	
	ВыполнитьНеобходимыеДействияПриПереходеПоСтраницамФрагмент(Оповещение);
	
	
КонецПроцедуры

