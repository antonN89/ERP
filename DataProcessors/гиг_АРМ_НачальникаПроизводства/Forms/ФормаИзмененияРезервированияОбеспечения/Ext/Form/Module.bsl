
&НаСервере
Функция ПолучитьВариантОбеспеченияДляОбеспечения(ВариантОбеспечения)
	
	Если ВариантОбеспечения = Перечисления.ВариантыОбеспечения.ИзЗаказов ИЛИ ВариантОбеспечения = Перечисления.ВариантыОбеспечения.Отгрузить ИЛИ ВариантОбеспечения = Перечисления.ВариантыОбеспечения.СоСклада Тогда
		Возврат Перечисления.ВариантыОбеспечения.Требуется;
	КонецЕсли;
	
	Если ВариантОбеспечения = Перечисления.ВариантыОбеспечения.ОтгрузитьОбособленно Тогда
		Возврат Перечисления.ВариантыОбеспечения.Обособленно;
	КонецЕсли;
		
КонецФункции

&НаСервере
Функция ПолучитьВариантОбеспеченияДляРезервирования(ВариантОбеспечения)
КонецФункции

&НаСервере
Процедура ИзменитьРезервированиеНаСервере()
	ДеревоМатериаловОбъект = РеквизитФормыВЗначение("ДеревоМатериалов");
	ТаблицаСДанными = Новый ТаблицаЗначений;
		
	ТаблицаСДанными.Колонки.Добавить("МатериалДляОбеспечения", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	ТаблицаСДанными.Колонки.Добавить("Склад", Новый ОписаниеТипов("СправочникСсылка.Склады"));
	ТаблицаСДанными.Колонки.Добавить("ЭтапДляОбеспечения", Новый ОписаниеТипов("ДокументСсылка.ЭтапПроизводства2_2"));
	ТаблицаСДанными.Колонки.Добавить("ВариантОбеспечения", Новый ОписаниеТипов("ПеречислениеСсылка.ВариантыОбеспечения"));
	ТаблицаСДанными.Колонки.Добавить("КоличествоКОтбору", Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(15, 3)));
	//ТаблицаСДанными.Колонки.Добавить("КоличествоНеобходимо", Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(15, 3)));
	ТаблицаСДанными.Колонки.Добавить("Характеристика", Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
	ТаблицаСДанными.Колонки.Добавить("ЭтапДляРезерва", Новый ОписаниеТипов("ДокументСсылка.ЭтапПроизводства2_2"));
	
	
	Для Каждого СтрокаДереваПервыйУровень Из ДеревоМатериаловОбъект.Строки Цикл
		Для Каждого СтрокаДереваВторойУровень Из СтрокаДереваПервыйУровень.Строки Цикл
			Для Каждого СтрокаДерева Из СтрокаДереваВторойУровень.Строки Цикл
				Если СтрокаДерева.КоличествоКОтбору > 0 Тогда
					НоваяСтрока = ТаблицаСДанными.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаДерева);
					//НоваяСтрока.КоличествоНеобходимо = СтрокаДереваПервыйУровень.КоличествоНеобходимо;
				КонецЕсли;
			КонецЦикла;
			
		КонецЦикла;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТЗ.МатериалДляОбеспечения КАК Материал,
	               |	ТЗ.Склад КАК Склад,
	               |	ТЗ.ЭтапДляОбеспечения КАК ЭтапДляОбеспечения,
	               |	ТЗ.ВариантОбеспечения КАК ВариантОбеспечения,
	               |	ТЗ.КоличествоКОтбору КАК КоличествоКОтбору,
	              // |	ТЗ.КоличествоНеобходимо КАК КоличествоНеобходимо,
	               |	ТЗ.МатериалДляОбеспечения КАК МатериалДляОбеспечения,
	               |	ТЗ.Характеристика КАК Характеристика,
	               |	ТЗ.ЭтапДляРезерва КАК ЭтапДляРезерва
	               |ПОМЕСТИТЬ ВТ_Выборка
	               |ИЗ
	               |	&Таб КАК ТЗ
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_Выборка.ЭтапДляРезерва КАК Этап,
	               |	ВТ_Выборка.Материал КАК Материал,
	               |	ВТ_Выборка.Характеристика КАК Характеристика,
	               |	ВТ_Выборка.ВариантОбеспечения КАК ВариантОбеспечения,
	               |	СУММА(ВТ_Выборка.КоличествоКОтбору) КАК КоличествоКОтбору,
	               |	ВТ_Выборка.Склад КАК Склад
	              // |	МАКСИМУМ(ВТ_Выборка.КоличествоНеобходимо) КАК КоличествоНеобходимо
	               |ИЗ
	               |	ВТ_Выборка КАК ВТ_Выборка
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВТ_Выборка.ЭтапДляРезерва,
	               |	ВТ_Выборка.Характеристика,
	               |	ВТ_Выборка.ВариантОбеспечения,
	               |	ВТ_Выборка.Склад,
	               |	ВТ_Выборка.Материал
	               |ИТОГИ ПО
	               |	Этап
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_Выборка.ЭтапДляОбеспечения КАК Этап,
	               |	ВТ_Выборка.МатериалДляОбеспечения КАК Материал,
	               |	ВТ_Выборка.Характеристика КАК Характеристика,
	               |	ВТ_Выборка.ВариантОбеспечения КАК ВариантОбеспечения,
	               |	ВТ_Выборка.КоличествоКОтбору КАК КоличествоКОтбору
	               |ИЗ
	               |	ВТ_Выборка КАК ВТ_Выборка
	               |ИТОГИ ПО
	               |	Этап";
	
	Запрос.УстановитьПараметр("Таб", ТаблицаСДанными);
	
	ЗапросПакета = Запрос.ВыполнитьПакет();
	
	ВыборкаДляОбеспечения = ЗапросПакета[ЗапросПакета.Количество() - 1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаДляРезервирования = ЗапросПакета[ЗапросПакета.Количество() - 2].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ТаблицаДляДобавления = Новый ТаблицаЗначений;
	ТаблицаДляДобавления.Колонки.Добавить("СтрокаДляДобавления");
	ТаблицаДляДобавления.Колонки.Добавить("Количество");
	ТаблицаДляДобавления.Колонки.Добавить("ВариантОбеспечения");
	//вначале снимаем резервы с выбранных этапов производства 
	Пока ВыборкаДляОбеспечения.Следующий() Цикл
		
		Если ВыборкаДляОбеспечения.Этап = Документы.ЭтапПроизводства2_2.ПустаяСсылка() Тогда  //выборка по складу
			Продолжить;
		КонецЕсли;
		
		ДокЭтап = ВыборкаДляОбеспечения.Этап.ПолучитьОбъект();
		ТЧОбъекта = ДокЭтап.ОбеспечениеМатериаламиИРаботами;
		ВыборкаДляОбеспеченияДетальныеЗаписи = ВыборкаДляОбеспечения.Выбрать();
		ТаблицаДляДобавления.Очистить();
		Пока ВыборкаДляОбеспеченияДетальныеЗаписи.Следующий() Цикл
			СтруктураОтбора = Новый Структура("Номенклатура, Характеристика, ВариантОбеспечения", ВыборкаДляОбеспеченияДетальныеЗаписи.Материал, ВыборкаДляОбеспеченияДетальныеЗаписи.Характеристика, ВыборкаДляОбеспеченияДетальныеЗаписи.ВариантОбеспечения);
			
			НайденныеСтроки = ТЧОбъекта.НайтиСтроки(СтруктураОтбора);
			
			КоличествоКОтбору = ВыборкаДляОбеспеченияДетальныеЗаписи.КоличествоКОтбору;
			Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
				
				Если НайденнаяСтрока.КоличествоУпаковок < КоличествоКОтбору Тогда //переносим резерв не полностью 
					КоличествоКОтбору = КоличествоКОтбору - НайденнаяСтрока.КоличествоУпаковок;
					НайденнаяСтрока.ВариантОбеспечения = ПолучитьВариантОбеспеченияДляОбеспечения(НайденнаяСтрока.ВариантОбеспечения);
				ИначеЕсли НайденнаяСтрока.КоличествоУпаковок > КоличествоКОтбору Тогда	
					НайденнаяСтрока.КоличествоУпаковок = НайденнаяСтрока.КоличествоУпаковок - КоличествоКОтбору;
					НайденнаяСтрока.Количество = НайденнаяСтрока.Количество - КоличествоКОтбору;
					НоваяСтрока = ТаблицаДляДобавления.Добавить();
					НоваяСтрока.СтрокаДляДобавления = НайденнаяСтрока;
					НоваяСтрока.Количество = КоличествоКОтбору;
				ИначеЕсли НайденнаяСтрока.КоличествоУпаковок = ВыборкаДляОбеспеченияДетальныеЗаписи.КоличествоКОтбору Тогда
					НайденнаяСтрока.ВариантОбеспечения = ПолучитьВариантОбеспеченияДляОбеспечения(НайденнаяСтрока.ВариантОбеспечения);
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЦикла;
		
		Для Каждого СтрокаДляДобавления Из ТаблицаДляДобавления Цикл
			НоваяСтрока = ТЧОбъекта.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаДляДобавления.СтрокаДляДобавления);
			НоваяСтрока.Количество = СтрокаДляДобавления.Количество; 
			НоваяСтрока.КоличествоУпаковок = СтрокаДляДобавления.Количество;
			НоваяСтрока.ВариантОбеспечения = ПолучитьВариантОбеспеченияДляОбеспечения(НоваяСтрока.ВариантОбеспечения);
		КонецЦикла;
		ДокЭтап.Записать(РежимЗаписиДокумента.Проведение);
	КонецЦикла;
	
	//поставим в резерв материалы 
	Пока ВыборкаДляРезервирования.Следующий() Цикл
		ДокЭтап = ВыборкаДляРезервирования.Этап.ПолучитьОбъект();
		ТЧОбъекта = ДокЭтап.ОбеспечениеМатериаламиИРаботами;
		ВыборкаДляРезервированияДетальныеЗаписи = ВыборкаДляРезервирования.Выбрать();
		ТаблицаДляДобавления.Очистить();
		КоличествоКОтборуВсего = ВыборкаДляРезервирования.КоличествоКОтбору;
		
		Пока ВыборкаДляРезервированияДетальныеЗаписи.Следующий() Цикл
			
			КоличествоКОтборуДетально = ВыборкаДляРезервированияДетальныеЗаписи.КоличествоКОтбору;
			
			//ищем строки с вариантом обеспечения "К обеспечению"
			СтруктураОтбора = Новый Структура("Номенклатура, Характеристика, ВариантОбеспечения", ВыборкаДляРезервированияДетальныеЗаписи.Материал, ВыборкаДляРезервированияДетальныеЗаписи.Характеристика, Перечисления.ВариантыОбеспечения.Требуется);
			
			НайденныеСтроки = ТЧОбъекта.НайтиСтроки(СтруктураОтбора);
			Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
				
				Если НайденнаяСтрока.КоличествоУпаковок > КоличествоКОтборуДетально Тогда
					НайденнаяСтрока.КоличествоУпаковок = НайденнаяСтрока.КоличествоУпаковок - КоличествоКОтборуДетально;
					НайденнаяСтрока.Количество = НайденнаяСтрока.Количество - КоличествоКОтборуДетально;
					НоваяСтрока = ТаблицаДляДобавления.Добавить();
					НоваяСтрока.СтрокаДляДобавления = НайденнаяСтрока;
					НоваяСтрока.ВариантОбеспечения = ВыборкаДляРезервированияДетальныеЗаписи.ВариантОбеспечения;
					НоваяСтрока.Количество = КоличествоКОтборуДетально;
					КоличествоКОтборуДетально = 0;										
				ИначеЕсли НайденнаяСтрока.КоличествоУпаковок < КоличествоКОтборуДетально Тогда
					КоличествоКОтборуДетально = КоличествоКОтборуДетально - НайденнаяСтрока.КоличествоУпаковок;
					НайденнаяСтрока.ВариантОбеспечения = ВыборкаДляРезервированияДетальныеЗаписи.ВариантОбеспечения;
				Иначе
					НайденнаяСтрока.ВариантОбеспечения = ВыборкаДляРезервированияДетальныеЗаписи.ВариантОбеспечения;
					КоличествоКОтборуДетально = 0;
				КонецЕсли;
				
				
			КонецЦикла;
			
			Если КоличествоКОтборуДетально <> 0 Тогда
				//ищем строки с вариантом обеспечения "Не требуется"
				СтруктураОтбора = Новый Структура("Номенклатура, Характеристика, ВариантОбеспечения", ВыборкаДляРезервированияДетальныеЗаписи.Материал, ВыборкаДляРезервированияДетальныеЗаписи.Характеристика, Перечисления.ВариантыОбеспечения.НеТребуется);
				
				НайденныеСтроки = ТЧОбъекта.НайтиСтроки(СтруктураОтбора);
				Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
					
					Если НайденнаяСтрока.КоличествоУпаковок > КоличествоКОтборуДетально Тогда
						НайденнаяСтрока.КоличествоУпаковок = НайденнаяСтрока.КоличествоУпаковок - КоличествоКОтборуДетально;
						НайденнаяСтрока.Количество = НайденнаяСтрока.Количество - КоличествоКОтборуДетально;
						НоваяСтрока = ТаблицаДляДобавления.Добавить();
						НоваяСтрока.СтрокаДляДобавления = НайденнаяСтрока;
						НоваяСтрока.ВариантОбеспечения = ВыборкаДляРезервированияДетальныеЗаписи.ВариантОбеспечения;
						НоваяСтрока.Количество = КоличествоКОтборуДетально;
					ИначеЕсли НайденнаяСтрока.КоличествоУпаковок < КоличествоКОтборуДетально Тогда
						КоличествоКОтборуДетально = КоличествоКОтборуДетально - НайденнаяСтрока.КоличествоУпаковок;
						НайденнаяСтрока.ВариантОбеспечения = ВыборкаДляРезервированияДетальныеЗаписи.ВариантОбеспечения;
					Иначе
						НайденнаяСтрока.ВариантОбеспечения = ВыборкаДляРезервированияДетальныеЗаписи.ВариантОбеспечения;
					КонецЕсли;
					
				КонецЦикла;
			КонецЕсли;
			
			Для Каждого СтрокаДляДобавления Из ТаблицаДляДобавления Цикл
				НоваяСтрока = ТЧОбъекта.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаДляДобавления.СтрокаДляДобавления);
				НоваяСтрока.Количество = СтрокаДляДобавления.Количество; 
				НоваяСтрока.КоличествоУпаковок = СтрокаДляДобавления.Количество;
				НоваяСтрока.ВариантОбеспечения = СтрокаДляДобавления.ВариантОбеспечения;
				
			КонецЦикла;
		КонецЦикла;
		ДокЭтап.Записать(РежимЗаписиДокумента.Проведение);
	КонецЦикла;
	
	
КонецПроцедуры

&НаКлиенте
Процедура Применить(Команда)
	ИзменитьРезервированиеНаСервере();
	
	ПоказатьОповещениеПользователя("Изменение резервов завершено!",,БиблиотекаКартинок.Информация32);
	
	//ЗаполнитьПараметрыФормы();
	ОбновитьДеревоМатериалов("ВнутреннийВызов");
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОбновитьДеревоМатериалов("ПриСозданииНаСервере");
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьДеревоМатериалов(ВидОперации)
		
	ДеревоМатериаловОбработка = РеквизитФормыВЗначение("ДеревоМатериалов");
	ДеревоМатериаловОбработка.Строки.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗаказНаПроизводство2_2Продукция.Ссылка КАК Ссылка,
	               |	ВЫРАЗИТЬ(ЗаказНаПроизводство2_2Продукция.Номенклатура.Наименование + ВЫБОР
	               |			КОГДА НЕ ЗаказНаПроизводство2_2Продукция.Характеристика.Наименование ЕСТЬ NULL
	               |				ТОГДА ""("" + ЕСТЬNULL(ЗаказНаПроизводство2_2Продукция.Характеристика.Наименование, """") + "")""
	               |			ИНАЧЕ """"
	               |		КОНЕЦ КАК СТРОКА(1000)) КАК Продукция,
	               |	ЗаказНаПроизводство2_2Продукция.Спецификация КАК СпецификацияПродукции
	               |ПОМЕСТИТЬ ВТ_ЗаказыНаПроизводство
	               |ИЗ
	               |	Документ.ЗаказНаПроизводство2_2.Продукция КАК ЗаказНаПроизводство2_2Продукция
	               |ГДЕ
	               |	ЗаказНаПроизводство2_2Продукция.Ссылка.Проведен
	               |	И ЗаказНаПроизводство2_2Продукция.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовНаПроизводство2_2.КПроизводству)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Склады.Ссылка КАК СкладДляОтбора
	               |ПОМЕСТИТЬ ВТ_ОтборПоСкладам
	               |ИЗ
	               |	Справочник.Склады КАК Склады
	               |ГДЕ
	               |	Склады.Подразделение В ИЕРАРХИИ(&Подразделение)
	               |	И Склады.ПометкаУдаления = ЛОЖЬ
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	Склады.Ссылка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ЭтапПроизводства2_2ОбеспечениеМатериаламиИРаботами.Номенклатура КАК Материал,
	               |	СУММА(ЭтапПроизводства2_2ОбеспечениеМатериаламиИРаботами.КоличествоУпаковок) КАК КоличествоМатериалы,
	               |	ЭтапПроизводства2_2ОбеспечениеМатериаламиИРаботами.СтатьяКалькуляции КАК СтатьяКалькуляции,
	               |	ЭтапПроизводства2_2ОбеспечениеМатериаламиИРаботами.ВариантОбеспечения КАК ВариантОбеспечения,
	               |	ЭтапПроизводства2_2ОбеспечениеМатериаламиИРаботами.Ссылка КАК Этап,
	               |	ЭтапПроизводства2_2ОбеспечениеМатериаламиИРаботами.Характеристика КАК Характеристика,
	               |	ВТ_ЗаказыНаПроизводство.Продукция КАК Продукция,
	               |	ЭтапПроизводства2_2ОбеспечениеМатериаламиИРаботами.Ссылка.Спецификация КАК Спецификация
	               |ПОМЕСТИТЬ ВТ_Этапы
	               |ИЗ
	               |	Документ.ЭтапПроизводства2_2.ОбеспечениеМатериаламиИРаботами КАК ЭтапПроизводства2_2ОбеспечениеМатериаламиИРаботами
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЗаказыНаПроизводство КАК ВТ_ЗаказыНаПроизводство
	               |		ПО ЭтапПроизводства2_2ОбеспечениеМатериаламиИРаботами.Ссылка.Распоряжение = ВТ_ЗаказыНаПроизводство.Ссылка
	               |			И ЭтапПроизводства2_2ОбеспечениеМатериаламиИРаботами.Ссылка.Спецификация = ВТ_ЗаказыНаПроизводство.СпецификацияПродукции
	               |ГДЕ
	               |	НЕ ЭтапПроизводства2_2ОбеспечениеМатериаламиИРаботами.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовНаПроизводство2_2.Закрыт)
	               |	И ЭтапПроизводства2_2ОбеспечениеМатериаламиИРаботами.Ссылка.Распоряжение В
	               |			(ВЫБРАТЬ
	               |				ВТ_ЗаказыНаПроизводство.Ссылка КАК Ссылка
	               |			ИЗ
	               |				ВТ_ЗаказыНаПроизводство КАК ВТ_ЗаказыНаПроизводство)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ЭтапПроизводства2_2ОбеспечениеМатериаламиИРаботами.Номенклатура,
	               |	ЭтапПроизводства2_2ОбеспечениеМатериаламиИРаботами.СтатьяКалькуляции,
	               |	ЭтапПроизводства2_2ОбеспечениеМатериаламиИРаботами.ВариантОбеспечения,
	               |	ЭтапПроизводства2_2ОбеспечениеМатериаламиИРаботами.Ссылка,
	               |	ЭтапПроизводства2_2ОбеспечениеМатериаламиИРаботами.Характеристика,
	               |	ВТ_ЗаказыНаПроизводство.Продукция,
	               |	ЭтапПроизводства2_2ОбеспечениеМатериаламиИРаботами.Ссылка.Спецификация
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_Этапы.Материал КАК МатериалКРезерву,
	               |	СУММА(ВТ_Этапы.КоличествоМатериалы) КАК КоличествоМатериалыКРезерву,
	               |	ВТ_Этапы.Характеристика КАК ХарактеристикаКрезерву,
	               |	ВТ_Этапы.Этап КАК ЭтапДляРезерва,
	               |	ВТ_Этапы.Продукция КАК Продукция
	               |ПОМЕСТИТЬ ВТ_МатериалКРезерву
	               |ИЗ
	               |	ВТ_Этапы КАК ВТ_Этапы
	               |ГДЕ
	               |	ВТ_Этапы.Этап = &Этап
	               |	И ВТ_Этапы.Материал В(&Материал)
	               |	И ВТ_Этапы.Характеристика В(&Характеристика)
	               |	И ВТ_Этапы.ВариантОбеспечения В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Требуется), ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.НеТребуется))
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВТ_Этапы.Материал,
	               |	ВТ_Этапы.Характеристика,
	               |	ВТ_Этапы.Этап,
	               |	ВТ_Этапы.Продукция
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_Этапы.Этап КАК ЭтапДляОбеспечения,
	               |	ВТ_Этапы.Материал КАК МатериалДляОбеспечения,
	               |	СУММА(ВТ_Этапы.КоличествоМатериалы) КАК КоличествоМатериалыДляОбеспечения,
	               |	ВТ_Этапы.СтатьяКалькуляции КАК СтатьяКалькуляцииДляОбеспечения,
	               |	ВТ_Этапы.ВариантОбеспечения КАК ВариантОбеспеченияДляОбеспечения,
	               |	ВТ_Этапы.Характеристика КАК ХарактеристикаКОбеспечению
	               |ПОМЕСТИТЬ ВТ_МатериалыКОбеспечению
	               |ИЗ
	               |	ВТ_Этапы КАК ВТ_Этапы
	               |ГДЕ
	               |	ВТ_Этапы.ВариантОбеспечения В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Отгрузить), ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ИзЗаказов), ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ОтгрузитьОбособленно), ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.СоСклада))
	               |	И ВТ_Этапы.Этап <> &Этап
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВТ_Этапы.Этап,
	               |	ВТ_Этапы.Материал,
	               |	ВТ_Этапы.СтатьяКалькуляции,
	               |	ВТ_Этапы.ВариантОбеспечения,
	               |	ВТ_Этапы.Характеристика
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	СвободныеОстаткиОстатки.Номенклатура КАК Номенклатура,
	               |	ЕСТЬNULL(СвободныеОстаткиОстатки.ВНаличииОстаток, 0) - ЕСТЬNULL(СвободныеОстаткиОстатки.ВРезервеСоСкладаОстаток, 0) - ЕСТЬNULL(СвободныеОстаткиОстатки.ВРезервеПодЗаказОстаток, 0) КАК СвободныйОстаток,
	               |	СвободныеОстаткиОстатки.Склад КАК Склад,
	               |	СвободныеОстаткиОстатки.Характеристика КАК Характеристика
	               |ПОМЕСТИТЬ ВТ_СвободныйОстаток
	               |ИЗ
	               |	РегистрНакопления.СвободныеОстатки.Остатки(
	               |			,
	               |			Номенклатура В
	               |				(ВЫБРАТЬ
	               |					ВТ_Этапы.Материал КАК Материал
	               |				ИЗ
	               |					ВТ_Этапы КАК ВТ_Этапы
	               |				СГРУППИРОВАТЬ ПО
	               |					ВТ_Этапы.Материал)) КАК СвободныеОстаткиОстатки
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ДоступныеОстаткиПланируемыхПоступлений.Номенклатура,
	               |	ДоступныеОстаткиПланируемыхПоступлений.Количество,
	               |	ДоступныеОстаткиПланируемыхПоступлений.Склад,
	               |	ДоступныеОстаткиПланируемыхПоступлений.Характеристика
	               |ИЗ
	               |	РегистрСведений.ДоступныеОстаткиПланируемыхПоступлений КАК ДоступныеОстаткиПланируемыхПоступлений
	               |ГДЕ
	               |	ДоступныеОстаткиПланируемыхПоступлений.Номенклатура В
	               |			(ВЫБРАТЬ
	               |				ВТ_Этапы.Материал КАК Материал
	               |			ИЗ
	               |				ВТ_Этапы КАК ВТ_Этапы
	               |			СГРУППИРОВАТЬ ПО
	               |				ВТ_Этапы.Материал)
	               |	И ДоступныеОстаткиПланируемыхПоступлений.ДатаДоступности = ДАТАВРЕМЯ(1, 1, 1)
	               |	И ДоступныеОстаткиПланируемыхПоступлений.Количество < 0
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_СвободныйОстаток.Номенклатура КАК Номенклатура,
	               |	СУММА(ВТ_СвободныйОстаток.СвободныйОстаток) КАК СвободныйОстаток,
	               |	ВТ_СвободныйОстаток.Склад КАК Склад,
	               |	ВТ_СвободныйОстаток.Характеристика КАК Характеристика,
	               |	ВТ_МатериалКРезерву.ЭтапДляРезерва КАК ЭтапДляРезерва,
	               |	ВТ_МатериалКРезерву.Продукция КАК Продукция
	               |ИЗ
	               |	ВТ_МатериалКРезерву КАК ВТ_МатериалКРезерву
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СвободныйОстаток КАК ВТ_СвободныйОстаток
	               |		ПО ВТ_МатериалКРезерву.МатериалКРезерву = ВТ_СвободныйОстаток.Номенклатура
	               |			И ВТ_МатериалКРезерву.ХарактеристикаКрезерву = ВТ_СвободныйОстаток.Характеристика
	               |ГДЕ
	               |	ВТ_СвободныйОстаток.Склад В
	               |			(ВЫБРАТЬ
	               |				ВТ_ОтборПоСкладам.СкладДляОтбора КАК СкладДляОтбора
	               |			ИЗ
	               |				ВТ_ОтборПоСкладам КАК ВТ_ОтборПоСкладам)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВТ_СвободныйОстаток.Номенклатура,
	               |	ВТ_СвободныйОстаток.Склад,
	               |	ВТ_СвободныйОстаток.Характеристика,
	               |	ВТ_МатериалКРезерву.ЭтапДляРезерва,
	               |	ВТ_МатериалКРезерву.Продукция
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ДоступныеОстаткиПланируемыхПоступлений.Номенклатура КАК Номенклатура,
	               |	ДоступныеОстаткиПланируемыхПоступлений.Количество КАК Количество,
	               |	ДоступныеОстаткиПланируемыхПоступлений.ДатаДоступности КАК ДатаДоступности,
	               |	ДоступныеОстаткиПланируемыхПоступлений.Характеристика КАК Характеристика
	               |ПОМЕСТИТЬ ВТ_ДоступностьТоваров
	               |ИЗ
	               |	РегистрСведений.ДоступныеОстаткиПланируемыхПоступлений КАК ДоступныеОстаткиПланируемыхПоступлений
	               |ГДЕ
	               |	ДоступныеОстаткиПланируемыхПоступлений.Номенклатура В
	               |			(ВЫБРАТЬ
	               |				ВТ_Этапы.Материал КАК Материал
	               |			ИЗ
	               |				ВТ_Этапы КАК ВТ_Этапы
	               |			СГРУППИРОВАТЬ ПО
	               |				ВТ_Этапы.Материал)
	               |	И ДоступныеОстаткиПланируемыхПоступлений.ДатаДоступности > ДАТАВРЕМЯ(1, 1, 1)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТоварыНаСкладахОстатки.Номенклатура КАК Номенклатура,
	               |	СУММА(ТоварыНаСкладахОстатки.ВНаличииОстаток) КАК ВНаличииОстаток,
	               |	ТоварыНаСкладахОстатки.Склад КАК Склад,
	               |	ТоварыНаСкладахОстатки.Характеристика КАК Характеристика
	               |ПОМЕСТИТЬ ВТ_ОстаткиНаСкладе
	               |ИЗ
	               |	РегистрНакопления.ТоварыНаСкладах.Остатки(
	               |			,
	               |			Номенклатура В
	               |				(ВЫБРАТЬ
	               |					ВТ_Этапы.Материал КАК Материал
	               |				ИЗ
	               |					ВТ_Этапы КАК ВТ_Этапы
	               |				СГРУППИРОВАТЬ ПО
	               |					ВТ_Этапы.Материал)) КАК ТоварыНаСкладахОстатки
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ТоварыНаСкладахОстатки.Номенклатура,
	               |	ТоварыНаСкладахОстатки.Склад,
	               |	ТоварыНаСкладахОстатки.Характеристика
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_МатериалКРезерву.МатериалКРезерву КАК МатериалКРезерву,
	               |	ВТ_МатериалКРезерву.КоличествоМатериалыКРезерву КАК КоличествоМатериалыКРезерву,
	               |	ВТ_МатериалыКОбеспечению.ЭтапДляОбеспечения КАК ЭтапДляОбеспечения,
	               |	ВТ_МатериалыКОбеспечению.МатериалДляОбеспечения КАК МатериалДляОбеспечения,
	               |	ВТ_МатериалыКОбеспечению.КоличествоМатериалыДляОбеспечения КАК КоличествоМатериалыДляОбеспечения,
	               |	ВТ_МатериалыКОбеспечению.СтатьяКалькуляцииДляОбеспечения КАК СтатьяКалькуляцииДляОбеспечения,
	               |	ВТ_МатериалыКОбеспечению.ВариантОбеспеченияДляОбеспечения КАК ВариантОбеспеченияДляОбеспечения,
	               |	ВТ_МатериалКРезерву.ХарактеристикаКрезерву КАК ХарактеристикаКрезерву,
	               |	ВТ_МатериалыКОбеспечению.ХарактеристикаКОбеспечению КАК ХарактеристикаКОбеспечению,
	               |	ВТ_МатериалКРезерву.ЭтапДляРезерва КАК ЭтапДляРезерва,
	               |	ВТ_МатериалКРезерву.Продукция КАК Продукция
	               |ИЗ
	               |	ВТ_МатериалКРезерву КАК ВТ_МатериалКРезерву
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_МатериалыКОбеспечению КАК ВТ_МатериалыКОбеспечению
	               |		ПО ВТ_МатериалКРезерву.МатериалКРезерву = ВТ_МатериалыКОбеспечению.МатериалДляОбеспечения
	               |			И ВТ_МатериалКРезерву.ХарактеристикаКрезерву = ВТ_МатериалыКОбеспечению.ХарактеристикаКОбеспечению
	               |ГДЕ
	               |	ВТ_МатериалыКОбеспечению.СтатьяКалькуляцииДляОбеспечения = &СтатьяКалькуляцииДляОбеспечения
	               |ИТОГИ
	               |	МАКСИМУМ(КоличествоМатериалыКРезерву),
	               |	СУММА(КоличествоМатериалыДляОбеспечения),
	               |	МАКСИМУМ(ХарактеристикаКрезерву),
	               |	МАКСИМУМ(ЭтапДляРезерва)
	               |ПО
	               |	Продукция,
	               |	МатериалКРезерву";
	
	 Если ВидОперации = "ПриСозданииНаСервере" Тогда
		Если Параметры.Свойство("ПоВсемуЭтапу") И Параметры.ПоВсемуЭтапу Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТ_Этапы.Материал В(&Материал)", "ИСТИНА");
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТ_Этапы.Характеристика В(&Характеристика)", "ИСТИНА");
			Запрос.УстановитьПараметр("Этап", Параметры.Этап);
			ПоВсемуЭтапуДляПараметра = Истина;
			ЭтапДляПараметра = Параметры.Этап;
			Подразделение = Параметры.Этап.Подразделение;
		ИначеЕсли Параметры.Свойство("Материал") И Параметры.Свойство("Этап") Тогда
			Запрос.УстановитьПараметр("Этап", Параметры.Этап);
			Запрос.УстановитьПараметр("Материал", Параметры.Материал);
			Запрос.УстановитьПараметр("Характеристика", Параметры.Характеристика);
			ПоВсемуЭтапуДляПараметра = Ложь;
			ЭтапДляПараметра = Параметры.Этап;
			Если ТипЗнч(Параметры.Материал) = Тип("Массив") Тогда
				Для Каждого СтрокаМассива Из Параметры.Материал Цикл
					МатериалДляПараметра.Добавить(СтрокаМассива);
				КонецЦикла;
			Иначе
				
				МатериалДляПараметра.Добавить(Параметры.Материал);
			КонецЕсли;
			
			Если ТипЗнч(Параметры.Характеристика) = Тип("Массив") Тогда
				Для Каждого СтрокаМассива Из Параметры.Характеристика Цикл
					ХарактеристикаДляПараметра.Добавить(СтрокаМассива);
				КонецЦикла;
			Иначе
				
				ХарактеристикаДляПараметра.Добавить(Параметры.Характеристика);
			КонецЕсли;
						
			Подразделение = Параметры.Этап.Подразделение;
		Иначе
			Запрос.УстановитьПараметр("Этап", Документы.ЭтапПроизводства2_2.ПустаяСсылка());
			Запрос.УстановитьПараметр("Материал", Справочники.Номенклатура.ПустаяСсылка());
			Запрос.УстановитьПараметр("Характеристика", Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка());
			ПоВсемуЭтапуДляПараметра = Ложь;
			ЭтапДляПараметра = Документы.ЭтапПроизводства2_2.ПустаяСсылка();
			МатериалДляПараметра.Добавить(Справочники.Номенклатура.ПустаяСсылка());
			ХарактеристикаДляПараметра.Добавить(Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка());
			Подразделение = Справочники.СтруктураПредприятия.ПустаяСсылка();
		КонецЕсли;
	Иначе
		Если ПоВсемуЭтапуДляПараметра Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТ_Этапы.Материал В(&Материал)", "ИСТИНА");
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТ_Этапы.Характеристика В(&Характеристика)", "ИСТИНА");
			Запрос.УстановитьПараметр("Этап", ЭтапДляПараметра);
			
		ИначеЕсли МатериалДляПараметра <> Справочники.Номенклатура.ПустаяСсылка() Тогда
			Запрос.УстановитьПараметр("Этап", ЭтапДляПараметра);
			Запрос.УстановитьПараметр("Материал", МатериалДляПараметра);
			Запрос.УстановитьПараметр("Характеристика", ХарактеристикаДляПараметра);
			
		Иначе
			Запрос.УстановитьПараметр("Этап", Документы.ЭтапПроизводства2_2.ПустаяСсылка());
			Запрос.УстановитьПараметр("Материал", Справочники.Номенклатура.ПустаяСсылка());
			Запрос.УстановитьПараметр("Характеристика", Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка());
			
		КонецЕсли;
	КонецЕсли;
	
	//Если ЗначениеЗаполнено(СтатьяКалькуляции) Тогда
	//	Запрос.УстановитьПараметр("СтатьяКалькуляцииДляОбеспечения", СтатьяКалькуляции);
	//Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТ_МатериалыКОбеспечению.СтатьяКалькуляцииДляОбеспечения = &СтатьяКалькуляцииДляОбеспечения", "Истина");
	//КонецЕсли;
	
	Если ЗначениеЗаполнено(Подразделение) Тогда
		ЗапросПоПодразделениям = Новый Запрос;
		ЗапросПоПодразделениям.Текст = "ВЫБРАТЬ
		                               |	СтруктураПредприятия.Ссылка КАК Ссылка
		                               |ИЗ
		                               |	Справочник.СтруктураПредприятия КАК СтруктураПредприятия
		                               |ГДЕ
		                               |	СтруктураПредприятия.Ссылка В ИЕРАРХИИ(&Подразделение)";
		
		ПодразделениеДляОтбора = Подразделение.Родитель;
		
		Если Подразделение.Родитель = Справочники.СтруктураПредприятия.ПустаяСсылка() Тогда
			Запрос.УстановитьПараметр("Подразделение", Подразделение);
		Иначе
			Пока НЕ ПодразделениеДляОтбора = Справочники.СтруктураПредприятия.ПустаяСсылка() Цикл
				ЗапросПоПодразделениям.УстановитьПараметр("Подразделение", ПодразделениеДляОтбора);
				Запрос.УстановитьПараметр("Подразделение", ПодразделениеДляОтбора);
				ПодразделениеДляОтбора = ПодразделениеДляОтбора.Родитель;
			КонецЦикла;
			ЗапросПоПодразделениямВыборка = ЗапросПоПодразделениям.Выполнить().Выгрузить();
			Запрос.УстановитьПараметр("Подразделение", ЗапросПоПодразделениямВыборка);
		КонецЕсли;
		
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "Склады.Подразделение В ИЕРАРХИИ(&Подразделение)", "Истина");
	КонецЕсли;
		
	ЗапросВыборкаПакет = Запрос.ВыполнитьПакет();
	ТаблицаОстатков = ЗапросВыборкаПакет[ЗапросВыборкаПакет.Количество() - 4].Выгрузить();
	ЗапросВыборкаПродукция = ЗапросВыборкаПакет[ЗапросВыборкаПакет.Количество() - 1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ЗапросВыборкаПродукция.Следующий() Цикл
		СтрокаПродукции = ДеревоМатериаловОбработка.Строки.Добавить();
		СтрокаПродукции.Представление = ЗапросВыборкаПродукция.Продукция;
		СтрокаПродукции.ЭтапДляРезерва = Документы.ЭтапПроизводства2_2.ПустаяСсылка();
		СтрокаПродукции.Продукция = ЗапросВыборкаПродукция.Продукция;
		СтрокаПродукции.Материал = Справочники.Номенклатура.ПустаяСсылка();
		СтрокаПродукции.КоличествоНеобходимо = 0;
		СтрокаПродукции.МатериалДляОбеспечения = Справочники.Номенклатура.ПустаяСсылка();
		СтрокаПродукции.ВариантОбеспечения = Перечисления.ВариантыОбеспечения.ПустаяСсылка();
		СтрокаПродукции.Характеристика = Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка();
		СтрокаПродукции.СтатьяКалькуляции = Справочники.СтатьиКалькуляции.ПустаяСсылка();
		СтрокаПродукции.Склад = Справочники.Склады.ПустаяСсылка();
		СтрокаПродукции.Количество = 0;
		СтрокаПродукции.КоличествоНаСкладе = 0;
		СтрокаПродукции.КоличествоКОтбору = 0;
		
		ЗапросВыборкаМатериал   = ЗапросВыборкаПродукция.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ЗапросВыборкаМатериал.Следующий() Цикл
				
			СтрокаМатериала = СтрокаПродукции.Строки.Добавить();
							
			СтрокаМатериала.Представление = ЗапросВыборкаМатериал.МатериалКРезерву;
			СтрокаМатериала.Продукция = ЗапросВыборкаМатериал.Продукция;
			СтрокаМатериала.ЭтапДляРезерва = ЗапросВыборкаМатериал.ЭтапДляРезерва;
			СтрокаМатериала.Материал = ЗапросВыборкаМатериал.МатериалКРезерву;
			СтрокаМатериала.КоличествоНеобходимо = ЗапросВыборкаМатериал.КоличествоМатериалыКРезерву;
							
			ЗапросВыборкаЭтап = ЗапросВыборкаМатериал.Выбрать();
			
			СтруктураОтбора = Новый Структура("Номенклатура, Характеристика", ЗапросВыборкаМатериал.МатериалКРезерву, ЗапросВыборкаМатериал.ХарактеристикаКрезерву);
			
			НайденныеСтроки = ТаблицаОстатков.НайтиСтроки(СтруктураОтбора);
			
			Для Каждого СтрокаОстатков Из НайденныеСтроки Цикл
				
				Если СтрокаОстатков.СвободныйОстаток = 0 Тогда
					Продолжить;
				КонецЕсли;
				
				
				СтрокаЭтапа = СтрокаМатериала.Строки.Добавить();
									
				СтрокаЭтапа.Представление = СтрокаОстатков.Склад;
				СтрокаЭтапа.ЭтапДляРезерва = СтрокаОстатков.ЭтапДляРезерва;
				СтрокаЭтапа.МатериалДляОбеспечения = СтрокаОстатков.Номенклатура;
				СтрокаЭтапа.ВариантОбеспечения = Перечисления.ВариантыОбеспечения.СоСклада;
				СтрокаЭтапа.Характеристика = СтрокаОстатков.Характеристика;
				СтрокаЭтапа.СтатьяКалькуляции = Справочники.СтатьиКалькуляции.ПустаяСсылка();
				СтрокаЭтапа.Склад = СтрокаОстатков.Склад;
				СтрокаЭтапа.Количество = СтрокаОстатков.СвободныйОстаток;
				СтрокаЭтапа.КоличествоНаСкладе = СтрокаОстатков.СвободныйОстаток;
				СтрокаЭтапа.КоличествоКОтбору = 0;

			КонецЦикла;
			
			Пока ЗапросВыборкаЭтап.Следующий() Цикл
				СтрокаЭтапа = СтрокаМатериала.Строки.Добавить();
									
				СтрокаЭтапа.Представление = ЗапросВыборкаЭтап.ЭтапДляОбеспечения;
				СтрокаЭтапа.ЭтапДляОбеспечения = ЗапросВыборкаЭтап.ЭтапДляОбеспечения;
				СтрокаЭтапа.ЭтапДляРезерва = ЗапросВыборкаМатериал.ЭтапДляРезерва;
				СтрокаЭтапа.МатериалДляОбеспечения = ЗапросВыборкаЭтап.МатериалДляОбеспечения;
				СтрокаЭтапа.ВариантОбеспечения = ЗапросВыборкаЭтап.ВариантОбеспеченияДляОбеспечения;
				СтрокаЭтапа.Характеристика = ЗапросВыборкаЭтап.ХарактеристикаКОбеспечению;
				СтрокаЭтапа.СтатьяКалькуляции = ЗапросВыборкаЭтап.СтатьяКалькуляцииДляОбеспечения;
				СтрокаЭтапа.Склад = Справочники.Склады.ПустаяСсылка();
				СтрокаЭтапа.Количество = ЗапросВыборкаЭтап.КоличествоМатериалыДляОбеспечения;
				СтрокаЭтапа.КоличествоНаСкладе = 0;
				СтрокаЭтапа.КоличествоКОтбору = 0;
					
			КонецЦикла;
				
		КонецЦикла;
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(ДеревоМатериаловОбработка, "ДеревоМатериалов");
	УстановитьУсловноеОформление();
	Если ВидОперации = "ПриСозданииНаСервере" Тогда
		ЭтаФорма.Заголовок = ЭтаФорма.Заголовок + ?(ЗначениеЗаполнено(ЭтапДляПараметра), " по этапу производства: " + ЭтапДляПараметра, "");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СвернутьДеревоМатериалов(Команда)
	ЗаказыМатериалов = ДеревоМатериалов.ПолучитьЭлементы();
	Для каждого ТекущаяСтрока Из ЗаказыМатериалов Цикл
		ИдентификаторСтроки = ТекущаяСтрока.ПолучитьИдентификатор();
		Элементы.ДеревоМатериалов.Свернуть(ИдентификаторСтроки);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура РазвернутьДеревоМатериалов(Команда)
	ЗаказыМатериалов = ДеревоМатериалов.ПолучитьЭлементы();
	Для каждого ТекущаяСтрока Из ЗаказыМатериалов Цикл
		ИдентификаторСтроки = ТекущаяСтрока.ПолучитьИдентификатор();
		Элементы.ДеревоМатериалов.Развернуть(ИдентификаторСтроки, Истина);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ДеревоМатериаловКоличествоКОтборуПриИзменении(Элемент)
	
	ТекДанные = Элементы.ДеревоМатериалов.ТекущиеДанные;
	ТекДанные.СтрокаИзменена = Истина;
	ПолучитьКоличествоКОтбору(ТекДанные, "ПоСтроке");
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьКоличествоКОтбору(ТекДанные, ВидОперации)
	
	Если ВидОперации = "ПоСтроке" Тогда
		РодительДанных = ТекДанные.ПолучитьРодителя();
		Материал = ТекДанные.МатериалДляОбеспечения;
		ХарактеристикаМатериала = ТекДанные.Характеристика;
		
		КоличествоНеобходимо = РодительДанных["КоличествоНеобходимо"];
		
		ДеревоПодчиненныеЭлементы = РодительДанных.ПолучитьЭлементы();
		
		ИдентификаторТекСтроки = ТекДанные.ПолучитьИдентификатор();
		КоличествоОтобрано = 0;
		Для Каждого Эл Из ДеревоПодчиненныеЭлементы Цикл
			
			Если Эл.МатериалДляОбеспечения <> Материал И Эл.Характеристика <> ХарактеристикаМатериала Тогда
				Продолжить;
			КонецЕсли;
			ИдентификаторЭл = Эл.ПолучитьИдентификатор();
			
			Если ИдентификаторТекСтроки = ИдентификаторЭл Тогда
				Продолжить;
			КонецЕсли;
			
			КоличествоНеобходимо = КоличествоНеобходимо - Эл.КоличествоКОтбору;
		КонецЦикла;
		
		ТекДанные.КоличествоКОтбору = Мин(КоличествоНеобходимо, ТекДанные.КоличествоКОтбору);
	Иначе
				
		ДеревоПодчиненныеЭлементыМатериал = ТекДанные.ПолучитьЭлементы();
		
		Для Каждого СтрокаЭл Из ДеревоПодчиненныеЭлементыМатериал Цикл
			
			ИдентификаторТекСтроки = СтрокаЭл.ПолучитьИдентификатор();
			КоличествоНеобходимо = СтрокаЭл["КоличествоНеобходимо"];
			
			ДеревоПодчиненныеЭлементы = СтрокаЭл.ПолучитьЭлементы();
			
			Для Каждого Эл Из ДеревоПодчиненныеЭлементы Цикл
				
				ИдентификаторЭл = Эл.ПолучитьИдентификатор();
				
				Если ИдентификаторТекСтроки = ИдентификаторЭл Тогда
					Продолжить;
				КонецЕсли;
							
				Эл.КоличествоКОтбору = Мин(КоличествоНеобходимо, Эл.Количество);
				КоличествоНеобходимо = КоличествоНеобходимо - Эл.КоличествоКОтбору;
			КонецЦикла;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура СтатьяКалькуляцииПриИзменении(Элемент)
	//ЗаполнитьПараметрыФормы();
	ОбновитьДеревоМатериалов("ВнутреннийВызов");
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПараметрыФормы()
	Параметры.Вставить("ПоВсемуЭтапу", ПоВсемуЭтапуДляПараметра); 
	Параметры.Вставить("Этап", ЭтапДляПараметра);
	Параметры.Вставить("Материал", МатериалДляПараметра);
	Параметры.Вставить("Характеристика", ХарактеристикаДляПараметра);
КонецПроцедуры


&НаКлиенте
Процедура ДеревоМатериаловВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Элемент.ТекущийЭлемент = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	
	Если Элемент.ТекущийЭлемент.Имя = "ДеревоМатериаловДействиеПеренестиДоступно" Тогда
		СтандартнаяОбработка = Ложь;
		
		ТекущиеДанные = Элементы.ДеревоМатериалов.ТекущиеДанные;
		Если ТекущиеДанные = Неопределено Тогда
			Возврат;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ТекущиеДанные.Материал) Тогда   //строка первого уровня
			Возврат;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ТекущиеДанные.Продукция)  И Не ЗначениеЗаполнено(ТекущиеДанные.Материал) Тогда
			ПолучитьКоличествоКОтбору(ТекущиеДанные, "ПоГруппе");
		Иначе
			ТекущиеДанные.СтрокаИзменена = Истина;
			ТекущиеДанные.КоличествоКОтбору = ТекущиеДанные.Количество;
			ПолучитьКоличествоКОтбору(ТекущиеДанные, "ПоСтроке");
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ПодразделениеПриИзменении(Элемент)
	ОбновитьДеревоМатериалов("ВнутреннийВызов");
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	ЕстьОформление = Ложь;
	ЭлУсловногоОформления = Неопределено;
	Для Каждого ЭлементУсловноеОформление Из УсловноеОформление.Элементы Цикл
		
		Если ЭлементУсловноеОформление.Представление = "Статья калькуляции" Тогда
			ЕстьОформление = Истина;
			ЭлУсловногоОформления = ЭлементУсловноеОформление;
		КонецЕсли;
		
	КонецЦикла;
	
	Если ЕстьОформление Тогда
		УсловноеОформление.Элементы.Удалить(ЭлУсловногоОформления);
	КонецЕсли;
	
	Элемент = УсловноеОформление.Элементы.Добавить();

	Элемент.Представление = "Статья калькуляции";
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ДеревоМатериалов.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ДеревоМатериалов.СтатьяКалькуляции");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = СтатьяКалькуляции;

	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветФона", WebЦвета.Лазурный);
КонецПроцедуры


