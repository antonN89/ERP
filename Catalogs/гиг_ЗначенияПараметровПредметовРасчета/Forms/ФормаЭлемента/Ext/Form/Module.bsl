
&НаКлиенте
Процедура Файлы(Команда)
	
	ПараметрыПереходаПоГиперссылке = ПараметрыПереходаПоГиперссылке(ИмяГиперссылкиПоИмениКоманды(Команда.Имя));
	ГиперссылкаПерейтиСформироватьПараметрыИВопрос(ПараметрыПереходаПоГиперссылке);
	
КонецПроцедуры

&НаКлиенте
Функция ИмяГиперссылкиПоИмениКоманды(ИмяКоманды)
	
	ИмяГиперссылки = ИмяКоманды;
	ИмяГиперссылки = СтрЗаменить(ИмяГиперссылки, "Команда", "Гиперссылка");
	
	Возврат ИмяГиперссылки;
	
КонецФункции

&НаКлиенте
Функция ПараметрыПереходаПоГиперссылке(ИмяЭлемента, Гиперссылка = "")
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ВладелецФайла",  Объект.Ссылка);
	ПараметрыФормы.Вставить("ТолькоПросмотр", ЭтаФорма.ТолькоПросмотр);
	
	ПараметрыПереходаПоГиперссылке = Новый Структура;
	ПараметрыПереходаПоГиперссылке.Вставить("ИмяФормы", "Обработка.РаботаСФайлами.Форма.ПрисоединенныеФайлы");
	ПараметрыПереходаПоГиперссылке.Вставить("ПараметрыФормы",ПараметрыФормы);
	
	ПараметрыПереходаПоГиперссылке.Вставить("РежимОткрытияОкнаФормы", РежимОткрытияОкнаФормы.Независимый);
	ПараметрыПереходаПоГиперссылке.Вставить("ИмяЭлемента", ИмяЭлемента);
	ПараметрыПереходаПоГиперссылке.Вставить("Гиперссылка", Гиперссылка);
	
	Возврат ПараметрыПереходаПоГиперссылке
КонецФункции

&НаКлиенте
Процедура ГиперссылкаПерейтиСформироватьПараметрыИВопрос(ПараметрыПереходаПоГиперссылке)
	
	ОчиститьСообщения();
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		ТекстВопроса = Нстр("ru = 'Данные еще не записаны.
		|Переход к дополнительной информции возможен только после записи элемента.
		|Записать элемент?'");
		
		ПоказатьВопрос(Новый ОписаниеОповещения("ГиперссылкаПерейтиВопросЗавершение", ЭтотОбъект, ПараметрыПереходаПоГиперссылке), ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		Возврат;
		
	КонецЕсли;
	
	ГиперссылкаПерейти(ПараметрыПереходаПоГиперссылке);
КонецПроцедуры

&НаКлиенте
Процедура ГиперссылкаПерейтиВопросЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	Если РезультатВопроса <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	Попытка
		ЭлементЗаписан = Записать();
	Исключение
		Возврат;
	КонецПопытки;
	
	Если Не ЭлементЗаписан Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыПереходаПоГиперссылке = ПараметрыПереходаПоГиперссылке(ДополнительныеПараметры.ИмяЭлемента,
																		ДополнительныеПараметры.Гиперссылка);
	ГиперссылкаПерейти(ПараметрыПереходаПоГиперссылке);
КонецПроцедуры

&НаКлиенте
Процедура ГиперссылкаПерейти(ПараметрыПереходаПоГиперссылке)
	
	Если ПараметрыПереходаПоГиперссылке.Свойство("ИмяФормы") Тогда
		Если ПараметрыПереходаПоГиперссылке.ИмяФормы = "Справочник.Номенклатура.Форма.ФормаСписка" Тогда
			Оповестить("ФильтрПоАналогичнымСвойствам_Номенклатура", Объект.Ссылка, Объект.Ссылка);
		КонецЕсли;
		
		ОткрытьФорму(ПараметрыПереходаПоГиперссылке.ИмяФормы,
			ПараметрыПереходаПоГиперссылке.ПараметрыФормы, , ЭтаФорма.УникальныйИдентификатор, , , ,
			ПараметрыПереходаПоГиперссылке.РежимОткрытияОкнаФормы);
	ИначеЕсли ПараметрыПереходаПоГиперссылке.Свойство("НавигационнаяСсылка") Тогда
		ПерейтиПоНавигационнойСсылке(ПараметрыПереходаПоГиперссылке.НавигационнаяСсылка);		
	Иначе
		ТекстИсключения = НСтр("ru = 'Не определено действие по гиперссылке.'");
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	//гиг
	//Если Не ЗначениеЗаполнено(Объект.Владелец) Тогда
	//	Оповестить("СозданиеНовогоЗначенияПараметраПредметаРасчета");
	//	//ПоказатьПредупреждение(, "Перед добавлением значения параметра предмета расчета необходимо записать параметр предмета расчета!",, "Ошибка при создании нового элемента!");
	//	Отказ = Истина;
	//КонецЕсли;	
	//
	
	//Файл = Новый ЧтениеТекста("C:\ImageArchive\as.txt");
	//СтрокаФайла = Файл.Прочитать();	
	//Файл.Закрыть();
	//Элементы.ПолеHTMLОписание.Документ.Body.innerHTML = СтрокаФайла;
    Элементы.ПолеHTMLОписание.Документ.Body.innerHTML = Объект.ОписаниеТовара;
	//КаталогКартинок = "C:\АрхивКартинок\";  //локальный доступ
	//КаталогКартинок = "\\Rinecosw019\ImageArchive\"; //сетевой доступ
	
	//перенос строки - вставка пустой строки
	//<div class="col-md-12" style="box-sizing: border-box; position: relative; min-height: 1px; padding-right: 15px; padding-left: 15px; float: left; width: 487.5px;"><br></div>
	
КонецПроцедуры

&НаКлиенте
Процедура ПолеHTMLОписаниеДокументСформирован(Элемент)
		
	//Файл = Новый ЧтениеТекста("C:\ImageArchive\as.txt");
	//СтрокаФайла = Файл.Прочитать();	
	//Файл.Закрыть();
	//Элемент.Документ.Body.innerHTML = СтрокаФайла;
	Элемент.Документ.Body.innerHTML = Объект.ОписаниеТовара;

КонецПроцедуры

&НаКлиенте
Процедура КомандаРедактироватьОписание(Команда)
	
	Если Объект.Ссылка.Пустая() Тогда
		
		Режим = РежимДиалогаВопрос.ДаНет;
		Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопроса", ЭтотОбъект, Параметры);
		ПоказатьВопрос(Оповещение, НСтр("ru = 'Для редактирования описания необходимо записать справочник. Продолжить выполнение операции?';"
		+ " en = 'Do you want to continue?'"), Режим, 0);	
		
	Иначе 
		
		Документ = Элементы.ПолеHTMLОписание.Документ;
		ТекстДляРедактирования = Документ.body.innerHTML;
		Параметр = Новый Структура("HTML", ТекстДляРедактирования);
		
		ИмяОткрываемойФормы = "Обработка.Рин1_РедакторHTML.Форма.Форма";
		ОткрытьФорму(ИмяОткрываемойФормы,Параметр,ЭтаФорма,,,,Новый ОписаниеОповещения("ОбработкаКомандыЗавершение",ЭтотОбъект),РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаКомандыЗавершение(Результат, ДополнительныеПараметры) Экспорт 
	
	Если Результат <> Неопределено Тогда
		//Результат = "<table border=""0"" style=""border-collapse: collapse; width: 650px;""><tbody>" + Результат + "</tbody></table>"; 
		Элементы.ПолеHTMLОписание.Документ.body.innerHTML = Результат;
		//Объект.ОписаниеТовара = Результат;
		ЗаписатьОписание(Результат);
		ЭтаФорма.Модифицированность = Истина;
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Процедура ЗаписатьОписание(Результат)
	Объект.ОписаниеТовара = Результат;
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	//Парсим HTML
	
	//<img width="560" height="549" src="file:///C:/Users/A74D8~1.BER/AppData/Local/Temp/msohtmlclip1/01/clip_image003.gif" v:shapes="_x0000_s1026 Рисунок_x0020_1 Рисунок_x0020_1">
	//<img width="374" height="595" src="file:///C:/Users/A74D8~1.BER/AppData/Local/Temp/msohtmlclip1/01/clip_image005.jpg" v:shapes="Рисунок_x0020_1">
	//<img class="img-responsive center-block max300" src="https://www.dkc.ru/upload/iblock/502/502c1460140b0abc32a14554a8c945c1.jpg" alt="" title="" style="box-sizing: border-box; border: 0px; vertical-align: middle; max-height: 300px; display: block; max-width: 100%; height: auto; margin-right: auto; margin-left: auto;">
	
	Если не Объект.Ссылка.Пустая() Тогда
		
		УИД = Объект.Ссылка.УникальныйИдентификатор();
		
		СтрокаHTML = Элементы.ПолеHTMLОписание.Документ.body.innerHTML;
		
		ЧислоВхождений = СтрЧислоВхождений(СтрокаHTML,"<img");
		
		Начало = 1;
		
		Для А = 1 По ЧислоВхождений Цикл
			
			Начало = СтрНайти(СтрокаHTML,"<img",,Начало,);
			СтрокаНачало = Сред(СтрокаHTML,Начало);
			КоличествоНачало = СтрДлина(СтрокаНачало);
			
			Конец = СтрНайти(СтрокаHTML,">",,Начало,) + 1;
			СтрокаКонец = Сред(СтрокаHTML,Конец);
			КоличествоКонец = СтрДлина(СтрокаКонец);
			
			КоличествоВыбираемыхСимволов = КоличествоНачало - КоличествоКонец;
			
			ИтоговаяСтрока = Сред(СтрокаHTML,Начало,КоличествоВыбираемыхСимволов);
			
			Если СтрНайти(ИтоговаяСтрока,УИД) = 0 и СтрНайти(ИтоговаяСтрока,"//download") = 0 Тогда
				
				Расширение = "";
				ВременныйФайл = "";
				
				Если СтрНайти(ИтоговаяСтрока,"src=""https") > 0 или СтрНайти(ИтоговаяСтрока,"src=""http") > 0 Тогда
					
					ВременныйФайл = ?(СтрНайти(ИтоговаяСтрока,"https:") > 0,Сред(ИтоговаяСтрока,СтрНайти(ИтоговаяСтрока,"https:")),Сред(ИтоговаяСтрока,СтрНайти(ИтоговаяСтрока,"http:")));
					
					Если СтрНайти(ИтоговаяСтрока,".gif") > 0 Тогда
						
						ВременныйФайл = Сред(ВременныйФайл,1,СтрНайти(ВременныйФайл,".gif") + 3); //добавим число что бы получить расширение	
						Расширение = ".gif";
						
					ИначеЕсли СтрНайти(ИтоговаяСтрока,".jpg") > 0  Тогда
						
						ВременныйФайл = Сред(ВременныйФайл,1,СтрНайти(ВременныйФайл,".jpg") + 3); 
						Расширение = ".jpg";
						
					ИначеЕсли СтрНайти(ИтоговаяСтрока,".jpeg") > 0 Тогда
						
						ВременныйФайл = Сред(ВременныйФайл,1,СтрНайти(ВременныйФайл,".jpeg") + 4); 
						Расширение = ".jpg";
						
					ИначеЕсли СтрНайти(ИтоговаяСтрока,".png") > 0 Тогда 
						
						ВременныйФайл = Сред(ВременныйФайл,1,СтрНайти(ВременныйФайл,".png") + 3);
						Расширение = ".png";
						
					ИначеЕсли СтрНайти(ИтоговаяСтрока,".svg") > 0 Тогда 
						
						ВременныйФайл = Сред(ВременныйФайл,1,СтрНайти(ВременныйФайл,".svg") + 3);
						Расширение = ".svg";
						
					КонецЕсли;	
					
				ИначеЕсли СтрНайти(ИтоговаяСтрока,"src=""file") > 0 или СтрНайти(ИтоговаяСтрока,"src=") > 0 Тогда 
					
					ВременныйФайл = Сред(ИтоговаяСтрока,СтрНайти(ИтоговаяСтрока,"src="));
					
					Если СтрНайти(ИтоговаяСтрока,".gif") > 0 Тогда
						
						ВременныйФайл = Сред(ВременныйФайл,1,СтрНайти(ВременныйФайл,".gif") + 3); //добавим число что бы получить расширение
						Расширение = ".gif";
						
					ИначеЕсли СтрНайти(ИтоговаяСтрока,".jpg") > 0 Тогда
						
						ВременныйФайл = Сред(ВременныйФайл,1,СтрНайти(ВременныйФайл,".jpg") + 3); 
						Расширение = ".jpg";
						
					ИначеЕсли СтрНайти(ИтоговаяСтрока,".png") > 0 Тогда 
						
						ВременныйФайл = Сред(ВременныйФайл,1,СтрНайти(ВременныйФайл,".png") + 3);
						ВременныйФайл = Сред(ВременныйФайл,6);
						Расширение = ".png";
						
					ИначеЕсли СтрНайти(ИтоговаяСтрока,".svg") > 0 Тогда 
						
						ВременныйФайл = Сред(ВременныйФайл,1,СтрНайти(ВременныйФайл,".svg") + 3);
						Расширение = ".svg";
						
					КонецЕсли;
					
					ВременныйФайл = СтрЗаменить(ВременныйФайл,"src=","");
					ВременныйФайл = СтрЗаменить(ВременныйФайл,"""","");
					
				КонецЕсли;
				
				Если не Расширение = "" Тогда
					
					ДатаВФайл = СтрЗаменить(Строка(ТекущаяДата()),":","");//нужна уникальность картинок
					ДатаВФайл = СтрЗаменить(ДатаВФайл," ","-");
					
					КаталогКартинокСУИД = КаталогКартинок+"\"+Строка(УИД);
					Файл = Новый Файл(КаталогКартинокСУИД);
					Если не Файл.Существует() Тогда
						Попытка
							СоздатьКаталог(КаталогКартинокСУИД);
						Исключение
							Сообщить("Возможность создать каталог отсутствует. Обратитесь в поддержку! " + ОписаниеОшибки());
							Отказ = Истина;
						КонецПопытки;
					КонецЕсли;
					
					//НовыйФайл = КаталогКартинок + Строка(УИД) + "\" + ДатаВФайл + "_" + А + Расширение;
					НовыйФайл = КаталогКартинокСУИД + "\" + ДатаВФайл + "_" + А + Расширение;
					
					КопироватьФайл(ВременныйФайл,НовыйФайл); //из временного хранилища пользователя перепишим файл в общее хранилище
					
					//поменяем в HTML ссылку на файл
					Если СтрНайти(Лев(КаталогКартинок,2),"\\") > 0 Тогда 
						ЗаписатьОписание(СтрЗаменить(Объект.ОписаниеТовара,ВременныйФайл,"file:\\" + НовыйФайл));
						//Объект.ОписаниеТовара = СтрЗаменить(Объект.ОписаниеТовара,ВременныйФайл,"file:\\" + НовыйФайл); 	
					Иначе
						ЗаписатьОписание(СтрЗаменить(Объект.ОписаниеТовара,ВременныйФайл,"file:" + НовыйФайл));
						//Объект.ОписаниеТовара = СтрЗаменить(Объект.ОписаниеТовара,ВременныйФайл,"file:" + НовыйФайл); 
					КонецЕсли;
					
					//Почистим каталог картинок от устаревших файлов
					УдалитьНенужныеКартинки(КаталогКартинокСУИД,НовыйФайл,СтрокаHTML)
					
				Иначе 
					
					Сообщить("Ошибка создания файла описания - обратитесь к разработчику!");
					
				КонецЕсли;		
				
			КонецЕсли;
			
			Начало = Конец;
			
		КонецЦикла;
		
	КонецЕсли;	
	//
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьНенужныеКартинки(КаталогКартинокСУИД,НовыйФайл,СтрокаHTMLОбщая)
	
	МассивФайлов = НайтиФайлы(КаталогКартинокСУИД,"*");
	Если не МассивФайлов.Количество() = 0 Тогда
		Для каждого Файл Из МассивФайлов Цикл
			Если СтрНайти(СтрокаHTMLОбщая,Файл.ИмяБезРасширения) = 0 Тогда
				Если не НовыйФайл = Файл.ПолноеИмя Тогда
					УдалитьФайлы(Файл.ПолноеИмя);
				КонецЕсли; 
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
		
КонецПроцедуры // УдалитьНенужныеКартинки()

&НаКлиенте
Процедура ГруппаСтраницыПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	Если Объект.Ссылка.Пустая() и ТекущаяСтраница.Имя = "ГруппаОписание"  Тогда
		
		Режим = РежимДиалогаВопрос.ДаНет;
		Оповещение = Новый ОписаниеОповещения("Рин1_ПослеЗакрытияВопроса", ЭтотОбъект, Параметры);
		ПоказатьВопрос(Оповещение, НСтр("ru = 'Для создания описания необходимо записать справочник. Продолжить выполнение операции?';"
		+ " en = 'Do you want to continue?'"), Режим, 0);	
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Рин1_ПослеЗакрытияВопроса(Результат, Параметры) Экспорт
	
    Если Результат = КодВозвратаДиалога.Нет Тогда
        Возврат;
	Иначе 
		ЭтотОбъект.Записать();
    КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	КаталогХраненияКартинок = Константы.Рин1_ПутьДляХраненияКартинок.Получить();
	
	Если не Прав(КаталогХраненияКартинок,1) = "\" Тогда
		КаталогХраненияКартинок = КаталогХраненияКартинок + "\";
	КонецЕсли;
	
	КаталогКартинок = КаталогХраненияКартинок + Объект.Ссылка.Метаданные().Имя;
	Файл = Новый Файл(КаталогКартинок);
	Если не Файл.Существует() Тогда
		Попытка
			СоздатьКаталог(КаталогКартинок);
		Исключение
			ОбщегоНазначения.СообщитьПользователю("Возможность создать каталог отсутствует. Обратитесь в поддержку! " + ОписаниеОшибки());			
		КонецПопытки;
	КонецЕсли;
	
КонецПроцедуры
