
&Вместо("ЗаполнитьВариантОбеспечения")
Функция Рин1_ЗаполнитьВариантОбеспечения(Объект, Форма, Операция, ДанныеЗаполнения, ПараметрыУказанияСерий)
	
	ЭтоВыборОбеспеченияСУчетомСерий = Операция = "СтрокаТовары"
		И ПолучитьФункциональнуюОпцию("ИспользоватьРасширеннуюФормуПодбораКоличестваИВариантовОбеспечения");
	СтруктураДействий = Новый Структура;
	Если Форма <> Неопределено Тогда
		СтруктураДействий.Вставить("ПриИзмененииТипаНоменклатурыИлиВариантаОбеспечения",
			Новый Структура("ЕстьРаботы, ЕстьОтменено, ЭтоПроизводство", Ложь, Истина));
	КонецЕсли;
	КэшированныеЗначения = ОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруКэшируемыеЗначения();
	СтруктураПересчетаСуммы = ОбработкаТабличнойЧастиКлиентСервер.СтруктураПересчетаСуммы("КоличествоУпаковок");

	ДатаПоУмолчанию = Макс(НачалоДня(ТекущаяДатаСеанса()), Объект.ЖелаемаяДатаОтгрузки);

	ЗаполнитьДатыОтгрузки = Ложь;
	ТекСтрокаТовары = Неопределено;
	Идентификатор   = Неопределено;
	СтарыеЗначения = ОбеспечениеКлиентСервер.КлючОбеспечения();
	НовыеЗначения  = ОбеспечениеКлиентСервер.КлючОбеспечения();
	Счетчик = 0;
	Добавлено = 0;
	
	ПараметрыОбновленияДатыОтгрузки = ОбеспечениеСервер.ПараметрыОбновленияДатыОтгрузкиВДокументе();
	ПараметрыОбновленияДатыОтгрузки.ОтгружатьОднойДатой    = Не Объект.УправлениеПроизводством2_2 И Объект.НеОтгружатьЧастями;
	ПараметрыОбновленияДатыОтгрузки.ЖелаемаяДатаОтгрузки   = Объект.ЖелаемаяДатаОтгрузки;
	ПараметрыОбновленияДатыОтгрузки.ДатаОтгрузкиВДокументе = Объект.ДатаОтгрузки;
	
	ОбеспечениеСервер.СдвинутьДатыИСвернутьДублиСтрок(ДанныеЗаполнения, Операция, ПараметрыОбновленияДатыОтгрузки);
	
	Для Каждого СтрокаОбеспечения Из ДанныеЗаполнения Цикл
		
		// Выбор существующей, либо добавление новой строки.
		Если Идентификатор <> СтрокаОбеспечения.Идентификатор Тогда
			
			Идентификатор = СтрокаОбеспечения.Идентификатор;
			Если Операция = "СтрокаТовары" Или Операция = "СтрокиТовары" Или Операция = "Заказ" Тогда
				СтрокаТовары = Объект.Товары.НайтиПоИдентификатору(Идентификатор);
			ИначеЕсли Операция = "ИндексыСтрок" Тогда
				СтрокаТовары = Объект.Товары[Идентификатор + Добавлено];
			КонецЕсли;
			ТекСтрокаТовары = СтрокаТовары;
			ОбработкаТабличнойЧастиКлиентСервер.ПересчитатьСуммы(СтруктураПересчетаСуммы);
			ОбработкаТабличнойЧастиКлиентСервер.ЗаполнитьСтруктуруПересчетаСуммы(СтруктураПересчетаСуммы, ТекСтрокаТовары);
			
		Иначе
			ТекСтрокаТовары = Объект.Товары.Вставить(Объект.Товары.Индекс(ТекСтрокаТовары) + 1);
			ЗаполнитьЗначенияСвойств(ТекСтрокаТовары, СтрокаТовары);
			ТекСтрокаТовары.КодСтроки = 0;
			Добавлено = Добавлено + 1;
		КонецЕсли;
		
		// Заполнение полей обеспечения.
		ЗаполнитьЗначенияСвойств(СтарыеЗначения, ТекСтрокаТовары);
		
		ЗаполнитьЗначенияСвойств(ТекСтрокаТовары, СтрокаОбеспечения, "Количество, ВариантОбеспечения");
		ТекСтрокаТовары.НачалоОтгрузки = СтрокаОбеспечения.ДатаОтгрузки;
		ТекСтрокаТовары.ОкончаниеПоступления = ТекСтрокаТовары.НачалоОтгрузки + Объект.ДлительностьПеремещения * 86400; //86400 - длительность суток
		//{Гига suv 11.01.2018 СхемыОбеспеченияДляЗаказов
		ДанныеСхемыОбеспечения = Новый Структура("ГИГ_СхемаОбеспечения, ГИГ_СрокПоставки");
		ЗаполнитьЗначенияСвойств(ДанныеСхемыОбеспечения, СтрокаОбеспечения);
		ЗаполнитьЗначенияСвойств(ТекСтрокаТовары, ДанныеСхемыОбеспечения);
		//Гига suv 11.01.2018}
		Если ЭтоВыборОбеспеченияСУчетомСерий Тогда
			ТекСтрокаТовары.Серия = СтрокаОбеспечения.Серия;
		КонецЕсли;
		
		Если Не Объект.УправлениеПроизводством2_2 И Объект.НеОтгружатьЧастями Тогда
			ДатаПоУмолчанию = Макс(СтрокаОбеспечения.ДатаОтгрузки, ДатаПоУмолчанию);
			Если Операция = "Заказ" Или Операция = "ИндексыСтрок"
				Или ДатаПоУмолчанию > Объект.ДатаОтгрузки И СтрокаОбеспечения.Отгружено = 0 Тогда
				Объект.ДатаОтгрузки = ДатаПоУмолчанию;
				ЗаполнитьДатыОтгрузки = Истина;
			КонецЕсли;
		КонецЕсли;
		ЗаполнитьЗначенияСвойств(НовыеЗначения, ТекСтрокаТовары);
		ОбеспечениеКлиентСервер.СчетИзменений(Счетчик, СтарыеЗначения, НовыеЗначения);
		
		ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(ТекСтрокаТовары, СтруктураДействий, КэшированныеЗначения);
		ОбработкаТабличнойЧастиКлиентСервер.ДобавитьСтрокуДляПересчетаСуммы(СтруктураПересчетаСуммы, ТекСтрокаТовары);
		
	КонецЦикла;
	
	ОбработкаТабличнойЧастиКлиентСервер.ПересчитатьСуммы(СтруктураПересчетаСуммы);
	Если ЗаполнитьДатыОтгрузки Тогда
		ОбеспечениеСервер.ЗаполнитьРеквизитВКоллекции(Объект.Товары, "НачалоОтгрузки", Объект.ДатаОтгрузки);
		ОбеспечениеСервер.ЗаполнитьРеквизитВКоллекции(Объект.Товары, "ОкончаниеПоступления", Объект.ДатаОтгрузки +  Объект.ДлительностьПеремещения * 86400);
	КонецЕсли;
	
	Если ПараметрыУказанияСерий = Неопределено Тогда
		ПараметрыУказанияСерий = НоменклатураСервер.ПараметрыУказанияСерий(Объект, Документы.ЗаказМатериаловВПроизводство);
		ПараметрыУказанияСерий = Новый ФиксированнаяСтруктура(ПараметрыУказанияСерий);
	КонецЕсли;
	НоменклатураСервер.ЗаполнитьСтатусыУказанияСерий(Объект, ПараметрыУказанияСерий);
	
	Если Операция = "СтрокаТовары" Или Операция = "СтрокиТовары" Или Операция = "Заказ" Тогда
		Форма.Модифицированность = Истина;
	КонецЕсли;
	
	Возврат ОбеспечениеКлиентСервер.ТекстОбработаноСтрок(Счетчик);
	
КонецФункции


&Вместо("ТекстЗапросаТаблицаГрафикОтгрузкиТоваров")
Функция Рин1_ТекстЗапросаТаблицаГрафикОтгрузкиТоваров(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ГрафикОтгрузкиТоваров";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки            КАК НомерСтроки,
	|	ТаблицаТовары.НачалоОтгрузки         КАК Период,
	|	ТаблицаТовары.НачалоОтгрузки         КАК ДатаОтгрузки,
	|	
	//{Гига suv 11.01.2018 СхемыОбеспеченияДляЗаказов
	|	ТаблицаТовары.ГИГ_СхемаОбеспечения   КАК ГИГ_СхемаОбеспечения,
	//Гига suv 11.01.2018}
	|	ТаблицаТовары.Номенклатура           КАК Номенклатура,
	|	ТаблицаТовары.Характеристика         КАК Характеристика,
	|	&Склад                               КАК Склад,
	|	
	|	ВЫБОР КОГДА ТаблицаТовары.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Обособленно) ТОГДА
	|			ВЫБОР КОГДА ТаблицаТовары.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|				ИЛИ (&ОбосабливатьПоНазначениюЗаказа
	|					И ТаблицаТовары.Назначение.ТипНазначения = ЗНАЧЕНИЕ(Перечисление.ТипыНазначений.Собственное)) ТОГДА
	|						&Назначение
	|					ИНАЧЕ
	|						ТаблицаТовары.Назначение
	|				КОНЕЦ
	|	КОНЕЦ КАК Назначение,
	|	
	|	ВЫБОР КОГДА ТаблицаТовары.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ИзЗаказов) ТОГДА
	|			ТаблицаТовары.Количество
	|	КОНЕЦ КАК КоличествоИзЗаказов,
	|	
	|	ВЫБОР КОГДА ТаблицаТовары.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Обособленно) ТОГДА
	|				ТаблицаТовары.Количество
	|	КОНЕЦ КАК КоличествоПодЗаказ,
	|	
	|	ВЫБОР КОГДА ТаблицаТовары.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Требуется) ТОГДА
	|			ТаблицаТовары.Количество
	|	КОНЕЦ КАК КоличествоНеобеспечено
	|	
	|ИЗ
	|	Документ.ЗаказМатериаловВПроизводство.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И НЕ ТаблицаТовары.Отменено
	|
	|	И ТаблицаТовары.ВариантОбеспечения В(
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Требуется),
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ИзЗаказов),
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Обособленно))
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

&Вместо("ВременныеТаблицыТоваровЗаказа")
Процедура Рин1_ВременныеТаблицыТоваровЗаказа(МенеджерВременныхТаблиц, Заказ)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Заказы.Номенклатура            КАК Номенклатура,
	|	Заказы.Характеристика          КАК Характеристика,
	|	Заказы.Склад                   КАК Склад,
	|	Заказы.Подразделение           КАК Подразделение,
	|	Заказы.НазначениеОтправителя   КАК Назначение,
	|	СУММА(Заказы.ЗаказаноОстаток)  КАК Заказано,
	|	МАКСИМУМ(Товары.Упаковка)      КАК Упаковка1,
	|	МИНИМУМ(Товары.Упаковка)       КАК Упаковка2,
	//{Гига suv 12.01.2018 СхемыОбеспеченияДляЗаказов
	|	Товары.ГИГ_СхемаОбеспечения,
	|	Товары.ГИГ_СрокПоставки,
	//Гига suv 12.01.2018}
	|	МАКСИМУМ(Товары.НомерСтроки)   КАК НомерСтроки
	|ПОМЕСТИТЬ ВТНоменклатураЗаказаОбособленная
	|ИЗ
	|	РегистрНакопления.ЗаказыМатериаловВПроизводство.Остатки(, Распоряжение = &Заказ) КАК Заказы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказМатериаловВПроизводство.Товары КАК Товары
	|		ПО Заказы.Распоряжение = Товары.Ссылка
	|			И Заказы.КодСтроки = Товары.КодСтроки
	|ГДЕ
	|	Товары.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Обособленно)
	|
	|СГРУППИРОВАТЬ ПО
	|	Заказы.Номенклатура,
	|	Заказы.Характеристика,
	|	Заказы.Склад,
	|	Заказы.Подразделение,
	//{Гига suv 12.01.2018 СхемыОбеспеченияДляЗаказов
	|	Товары.ГИГ_СхемаОбеспечения,
	|	Товары.ГИГ_СрокПоставки,
	//Гига suv 12.01.2018}
	|	Заказы.НазначениеОтправителя
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура    КАК Номенклатура,
	|	Товары.Характеристика  КАК Характеристика,
	|	Товары.Склад           КАК Склад,
	|	Товары.Подразделение   КАК Подразделение,
	|	Товары.Назначение      КАК Назначение,
	|	Товары.Заказано        КАК Заказано,
	|	ВЫБОР
	|		КОГДА Товары.Упаковка1 <> Товары.Упаковка2
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|		ИНАЧЕ Товары.Упаковка1
	|	КОНЕЦ КАК Упаковка,
	//{Гига suv 12.01.2018 СхемыОбеспеченияДляЗаказов
	|	Товары.ГИГ_СхемаОбеспечения,
	|	Товары.ГИГ_СрокПоставки,
	//Гига suv 12.01.2018}
	|	Товары.НомерСтроки     КАК НомерСтроки
	|ПОМЕСТИТЬ НоменклатураЗаказаОбособленная
	|ИЗ
	|	ВТНоменклатураЗаказаОбособленная КАК Товары
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика,
	|	Склад,
	|	Назначение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура          КАК Номенклатура,
	|	Товары.Характеристика        КАК Характеристика,
	|	Товары.Ссылка.Склад          КАК Склад,
	|	Товары.Ссылка.Подразделение  КАК Подразделение,
	|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
	|	СУММА(Товары.Количество)     КАК Заказано,
	|	Товары.Упаковка              КАК Упаковка,
	|	МАКСИМУМ(Товары.НомерСтроки) КАК НомерСтроки,
	//{Гига suv 12.01.2018 СхемыОбеспеченияДляЗаказов
	|	Товары.ГИГ_СхемаОбеспечения,
	|	Товары.ГИГ_СрокПоставки,
	//Гига suv 12.01.2018}
	|	Товары.Серия                 КАК Серия
	|ПОМЕСТИТЬ НоменклатураЗаказаНеОбособленная
	|ИЗ
	|	Документ.ЗаказМатериаловВПроизводство.Товары КАК Товары
	|ГДЕ
	|	Товары.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Требуется)
	|	И Товары.Ссылка = &Заказ
	|	И НЕ Товары.Отменено
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Ссылка.Склад,
	|	Товары.Ссылка.Подразделение,
	|	Товары.Серия,
	//{Гига suv 12.01.2018 СхемыОбеспеченияДляЗаказов
	|	Товары.ГИГ_СхемаОбеспечения,
	|	Товары.ГИГ_СрокПоставки,
	//Гига suv 12.01.2018}
	|	Товары.Упаковка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика,
	|	Склад";
	
	Запрос.УстановитьПараметр("Заказ", Заказ);
	Запрос.Выполнить();
	
КонецПроцедуры



