// + [Rineco], [Киселев А.] [14.12.2021] [Log_Diff][№ 21317], [#ТиповойНаборМатериалов] 
&НаКлиенте
Процедура ТиповойНаборМатериалаПриИзменении(Элемент)
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(СопоставленнаяНоменклатура,"ТиповойНаборМатериалов",ТиповойНаборМатериала,ВидСравненияКомпоновкиДанных.Равно,,Истина);
КонецПроцедуры


// + [Rineco], [Киселев А.] [14.12.2021] [Log_Diff][№ 21317], [#ТиповойНаборМатериалов] 
&НаКлиенте
Процедура СопоставитьНоменклатуру(Команда)
	
	Если Не ЗначениеЗаполнено(Объект.ТаблицаСопоставленных) ИЛИ Не ЗначениеЗаполнено(ТиповойНаборМатериала) Тогда
		ОчиститьСообщения();
		Сообщить("Для продолжения необходимо заполнить список номенклатуры и выбрать типовой набор материалов");
		Возврат;
		
	КонецЕсли;
	
	УбратьДублиНаСервере();
	СопоставитьНоменклатуруНаСервере();
	
КонецПроцедуры

// + [Rineco], [Киселев А.] [14.12.2021] [Log_Diff][№ 21317], [#ТиповойНаборМатериалов] 
&НаСервере
Процедура УбратьДублиНаСервере()
	Отказ = Ложь;
	ОбъектФормы = РеквизитФормыВЗначение("Объект");
	МассивСпискаНоменклатуры = ОбъектФормы.ТаблицаСопоставленных.ВыгрузитьКолонку("Номенклатура");
	ОбщегоНазначенияУТКлиентСервер.ПроверитьНаличиеДублейЗначенийМассива(МассивСпискаНоменклатуры,Отказ);
	Если Отказ Тогда
		Объект.ТаблицаСопоставленных.Очистить();
		ОбщегоНазначенияКлиентСервер.СвернутьМассив(МассивСпискаНоменклатуры);
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицуИзМассива(Объект.ТаблицаСопоставленных,МассивСпискаНоменклатуры,"Номенклатура");
	КонецЕсли;
	
КонецПроцедуры

// + [Rineco], [Киселев А.] [14.12.2021] [Log_Diff][№ 21317], [#ТиповойНаборМатериалов] 
&НаСервере
Процедура СопоставитьНоменклатуруНаСервере()
	
	НаборЗаписей = РегистрыСведений.Рин1_СопоставлениеТиповыхНаборовМатериалов.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ТиповойНаборМатериалов.Установить(ТиповойНаборМатериала);
	
	МаксимальныйПорядок = ПолучитьМаксимальныйПорядок(ТиповойНаборМатериала);
	
	Для Каждого ЭлементСписка Из Объект.ТаблицаСопоставленных Цикл 
		
		НоваяЗапись = НаборЗаписей.Добавить();
		НоваяЗапись.ТиповойНаборМатериалов = ТиповойНаборМатериала;
		НоваяЗапись.Номенклатура = ЭлементСписка.Номенклатура;
		
		Если МаксимальныйПорядок = Неопределено Тогда
			НоваяЗапись.Порядок = ЭлементСписка.Порядок;	
		Иначе 
			Если МаксимальныйПорядок >= ЭлементСписка.Порядок Тогда
				НоваяЗапись.Порядок = МаксимальныйПорядок + 1;
			Иначе 
				НоваяЗапись.Порядок = ЭлементСписка.Порядок;
			КонецЕсли;
			МаксимальныйПорядок = МаксимальныйПорядок + 1;
		КонецЕсли;
		
	КонецЦикла;
	
	НаборЗаписей.Записать(Ложь);
	
	Объект.ТаблицаСопоставленных.Очистить();
	Элементы.СопоставленнаяНоменклатура.Обновить();
	Сообщить("Записи успешно сопоставлены !");
	
КонецПроцедуры

// + [Rineco], [Киселев А.] [14.12.2021] [Log_Diff][№ 21317], [#ТиповойНаборМатериалов] 
&НаСервере
Функция ПолучитьМаксимальныйПорядок(ТиповойНаборМатериаловПараметр)
	
	ПараметрыЗапроса = Новый Структура;
	ПараметрыЗапроса.Вставить("ТиповойНаборМатериалов",ТиповойНаборМатериаловПараметр);
	
	ТаблицаМаксимального = ОбщегоНазначенияУТ.ЗапросВыполнитьВыгрузить(ТекстЗапросаМаксимальныйПорядок(),ПараметрыЗапроса);
	
	Если Не ЗначениеЗаполнено(ТаблицаМаксимального) ИЛИ ТаблицаМаксимального[0].Порядок = NULL Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Возврат ТаблицаМаксимального[0].Порядок;
	
КонецФункции

// + [Rineco], [Киселев А.] [14.12.2021] [Log_Diff][№ 21317], [#ТиповойНаборМатериалов] 
&НаСервере
Функция ТекстЗапросаМаксимальныйПорядок()
	
	Возврат "ВЫБРАТЬ
	        |	МАКСИМУМ(Рин1_СопоставлениеТиповыхНаборовМатериалов.Порядок) КАК Порядок
	        |ИЗ
	        |	РегистрСведений.Рин1_СопоставлениеТиповыхНаборовМатериалов КАК Рин1_СопоставлениеТиповыхНаборовМатериалов
	        |ГДЕ
	        |	Рин1_СопоставлениеТиповыхНаборовМатериалов.ТиповойНаборМатериалов = &ТиповойНаборМатериалов";
	
КонецФункции

// + [Rineco], [Киселев А.] [14.12.2021] [Log_Diff][№ 21317], [#ТиповойНаборМатериалов] 
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(СопоставленнаяНоменклатура,"ТиповойНаборМатериалов",ТиповойНаборМатериала,ВидСравненияКомпоновкиДанных.Равно,,Истина);
КонецПроцедуры

// + [Rineco], [Киселев А.] [14.12.2021] [Log_Diff][№ 21317], [#ТиповойНаборМатериалов] 
&НаКлиенте
Процедура УбратьСопоставление(Команда)
	
	Если Элементы.СопоставленнаяНоменклатура.ВыделенныеСтроки.Количество() = 0 Тогда
		ОчиститьСообщения();
		Сообщить("Необходимо выделить хотя бы одну строку списка");
		Возврат;
	КонецЕсли;
	
	ОповещениеОтветНаВопрос = Новый ОписаниеОповещения("ОтветНаВопросЗавершение",ЭтотОбъект);
	ПоказатьВопрос(ОповещениеОтветНаВопрос,"Удалить выделенные строки сопоставления",РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

// + [Rineco], [Киселев А.] [14.12.2021] [Log_Diff][№ 21317], [#ТиповойНаборМатериалов]
&НаКлиенте
Процедура ОтветНаВопросЗавершение(Результат,Параметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		
		СтрокиРегистра = ОбщегоНазначенияУТКлиент.ПроверитьПолучитьВыделенныеВСпискеСсылки(Элементы.СопоставленнаяНоменклатура);
		УбратьСопоставлениеСервер(СтрокиРегистра);
		Элементы.СопоставленнаяНоменклатура.Обновить();
		
	КонецЕсли;
	
КонецПроцедуры

// + [Rineco], [Киселев А.] [14.12.2021] [Log_Diff][№ 21317], [#ТиповойНаборМатериалов] 
&НаСервере
Процедура УбратьСопоставлениеСервер(СтрокиРегистра)
	
	Для Каждого СтрокаРегистра Из СтрокиРегистра Цикл 
		МенеджерЗаписи = РегистрыСведений.Рин1_СопоставлениеТиповыхНаборовМатериалов.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(МенеджерЗаписи, СтрокаРегистра);
		МенеджерЗаписи.Удалить();
	КонецЦикла;
	
	Сообщить("Очищено сопоставление по выделенным строкам");

КонецПроцедуры

// + [Rineco], [Киселев А.] [14.12.2021] [Log_Diff][№ 21317], [#ТиповойНаборМатериалов] 
&НаКлиенте
Процедура ПодборНоменклатуры(Команда)
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Пропустить");
	ПараметрыФормы.Вставить("РежимПодбораБезСуммовыхПараметров",Истина);
	
	ОткрытьФорму("Обработка.ГИГ_ПодборТоваровВДокументПродажи.Форма", ПараметрыФормы, ЭтаФорма, УникальныйИдентификатор);
КонецПроцедуры

// + [Rineco], [Киселев А.] [14.12.2021] [Log_Diff][№ 21317], [#ТиповойНаборМатериалов] 
&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ИсточникВыбора.ИмяФормы = "Обработка.ГИГ_ПодборТоваровВДокументПродажи.Форма.Форма" Тогда
		ОбработкаВыбораПодборНаСервере(ВыбранноеЗначение);
	КонецЕсли;
	
КонецПроцедуры

// + [Rineco], [Киселев А.] [14.12.2021] [Log_Diff][№ 21317], [#ТиповойНаборМатериалов] 
&НаСервере
Процедура ОбработкаВыбораПодборНаСервере(ВыбранноеЗначение)
	
	ТаблицаТоваров = ПолучитьИзВременногоХранилища(ВыбранноеЗначение.АдресТоваровВХранилище);
	
	Для Каждого ЭлементТоваров Из ТаблицаТоваров Цикл 
		НоваяСтрока = Объект.ТаблицаСопоставленных.Добавить();
		НоваяСтрока.Номенклатура = ЭлементТоваров.Номенклатура;
		НоваяСтрока.Порядок = НоваяСтрока.НомерСтроки;
	КонецЦикла;
	
	//ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ТаблицаТоваров,Объект.ТаблицаСопоставленных);
	
КонецПроцедуры

// + [Rineco], [Киселев А.] [14.12.2021] [Log_Diff][№ 21317], [#ТиповойНаборМатериалов] 
&НаКлиенте
Процедура ИзменитьПорядок(Команда)
	
	Если Не ЗначениеЗаполнено(ТиповойНаборМатериала) Тогда
		ОчиститьСообщения();
		Сообщить("Для продолжения необходимо заполнить типовой набор материалов");
		Возврат;
		
	КонецЕсли;
	
	ИзменитьПорядокНаСервере();
	
	Объект.ТаблицаСопоставленных.Сортировать("Порядок");
	
КонецПроцедуры

// + [Rineco], [Киселев А.] [14.12.2021] [Log_Diff][№ 21317], [#ТиповойНаборМатериалов] 
&НаСервере
Процедура ИзменитьПорядокНаСервере()
	
	НаборЗаписей = РегистрыСведений.Рин1_СопоставлениеТиповыхНаборовМатериалов.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ТиповойНаборМатериалов.Установить(ТиповойНаборМатериала);
	НаборЗаписей.Прочитать();
	Объект.ТаблицаСопоставленных.Очистить();
	Для Каждого ЭлементСписка Из НаборЗаписей Цикл 
		НоваяЗапись = Объект.ТаблицаСопоставленных.Добавить();
		НоваяЗапись.Номенклатура = ЭлементСписка.Номенклатура;
		НоваяЗапись.Порядок = ЭлементСписка.Порядок;
	КонецЦикла;
	
	НаборЗаписей = РегистрыСведений.Рин1_СопоставлениеТиповыхНаборовМатериалов.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ТиповойНаборМатериалов.Установить(ТиповойНаборМатериала);
	НаборЗаписей.Записать();
	
	Элементы.СопоставленнаяНоменклатура.Обновить();
	
КонецПроцедуры

// + [Rineco], [Киселев А.] [14.12.2021] [Log_Diff][№ 21317], [#ТиповойНаборМатериалов] 
&НаКлиенте
Процедура ТаблицаСопоставленныхПриИзменении(Элемент)
	Для Каждого ЭлементТаблицы Из Объект.ТаблицаСопоставленных Цикл 	
		ЭлементТаблицы.Порядок = ЭлементТаблицы.НомерСтроки;
	КонецЦикла;
	
	Объект.ТаблицаСопоставленных.Сортировать("Порядок");
КонецПроцедуры

// + [Rineco], [Киселев А.] [14.12.2021] [Log_Diff][№ 21317], [#ТиповойНаборМатериалов] 
&НаКлиенте
Процедура Печать(Команда)
	ОткрытьФорму("Обработка.Рин1_РаботаСТиповымНаборомМатериалов.Форма.ФормаВыборТиповыхНаборовПередПечатью",,ЭтаФорма,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры
