#Область СлужебныйПрограммныйИнтерфейс

// Настройки общей формы отчета подсистемы "Варианты отчетов".
//
// Параметры:
//   Форма - УправляемаяФорма - Форма отчета.
//   КлючВарианта - Строка - Имя предопределенного варианта отчета или уникальный идентификатор пользовательского.
//   Настройки - Структура - см. возвращаемое значение ОтчетыКлиентСервер.ПолучитьНастройкиОтчетаПоУмолчанию().
//
Процедура ОпределитьНастройкиФормы(Форма, КлючВарианта, Настройки) Экспорт
	
	Настройки.События.ПриСозданииНаСервере = Истина;
	Настройки.События.ПередЗагрузкойВариантаНаСервере = Истина;
	Настройки.События.ПослеЗаполненияПанелиБыстрыхНастроек = Истина;
	Настройки.События.ПриЗагрузкеВариантаНаСервере = Истина;
КонецПроцедуры

// Вызывается в обработчике одноименного события формы отчета после выполнения кода формы.
//
// Параметры:
//   Форма - УправляемаяФорма - Форма отчета.
//   Отказ - Передается из параметров обработчика "как есть".
//   СтандартнаяОбработка - Передается из параметров обработчика "как есть".
//
// См. также:
//   "УправляемаяФорма.ПриСозданииНаСервере" в синтакс-помощнике.
//
Процедура ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка) Экспорт
	
	КомпоновщикНастроекФормы = ЭтаФорма.Отчет.КомпоновщикНастроек;
	Параметры = ЭтаФорма.Параметры;
	Элементы = ЭтаФорма.Элементы;
	////добавим команды
	//НоваяКоманда = ЭтаФорма.Команды.Добавить("УстановитьПоМинимальнойДате"); // Имя нашей команды
	//НоваяКоманда.Заголовок  = "Установить по дате min"; // заголовок
	//НоваяКоманда.Подсказка  = "Начать не ранее даты min";
	//НоваяКоманда.Действие   = "гиг_ВыполнитьИзменениеДатыНачалаПроизводства"; // Имя функции/процедуры
	//// создадим кнопку
	//Попытка
	//	НовыйЭлемент        = Элементы.Добавить("ОтчетТабличныйДокументКонтекстноеМенюУстановитьПоМинимальнойДате", Тип("КнопкаФормы"), Элементы.ОтчетТабличныйДокумент.КонтекстноеМеню);// Третий параметр - место расположения на форме
	//	НовыйЭлемент.Вид    = ВидКнопкиФормы.КнопкаКоманднойПанели; // вид кнопки
	//	НовыйЭлемент.Заголовок  = "Установить по дате min";
	//	НовыйЭлемент.ИмяКоманды = "УстановитьПоМинимальнойДате";
	//	НовыйЭлемент.Видимость = Истина;
	//	НовыйЭлемент.Доступность = Истина;
	//Исключение
	//КонецПопытки;
		
КонецПроцедуры

// Вызывается в одноименном обработчике формы отчета после выполнения кода формы.
//
// Подробнее - см. ОтчетыПереопределяемый.ПередЗагрузкойВариантаНаСервере
//
Процедура ПередЗагрузкойВариантаНаСервере(ЭтаФорма, НовыеНастройкиКД) Экспорт
	
	Отчет = ЭтаФорма.Отчет;
	КомпоновщикНастроекФормы = Отчет.КомпоновщикНастроек;
		
	
	НовыеНастройкиКД = КомпоновщикНастроекФормы.Настройки;

	ЭлементНачалоПериода = НовыеНастройкиКД.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ДатаСреза")); 
	Если НЕ ЭлементНачалоПериода = Неопределено Тогда
		ЭлементНачалоПериода.Значение = КонецДня(ТекущаяДатаСеанса());
		ЭлементНачалоПериода.Использование = Истина;
	КонецЕсли;
	
	Если ЭтаФорма.Параметры.Свойство("ТаблицаМатериалов") Тогда
		
		ТаблицаМатериалов = ЭтаФорма.Параметры.ТаблицаМатериалов;
		
		СписокЭтапов = Новый СписокЗначений;
		
		Если  ЭтаФорма.Параметры.Свойство("ПоВсемуЗаказу") И ЭтаФорма.Параметры.ПоВсемуЗаказу Тогда
			ЗаказСсылка = ТаблицаМатериалов[0].Заказ;
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ
			               |	ЭтапПроизводства2_2.Ссылка КАК Ссылка
			               |ИЗ
			               |	Документ.ЭтапПроизводства2_2 КАК ЭтапПроизводства2_2
			               |ГДЕ
			               |	ЭтапПроизводства2_2.Проведен = Истина
			               |	И ЭтапПроизводства2_2.Распоряжение = &Распоряжение";
			Запрос.УстановитьПараметр("Распоряжение", ЗаказСсылка);
			
			ЗапросВыборка = Запрос.Выполнить().Выбрать();
			Пока ЗапросВыборка.Следующий() Цикл
				СписокЭтапов.Добавить(ЗапросВыборка.Ссылка);
			КонецЦикла;
			
		Иначе
			Для Каждого СтрокаЭтапа Из ТаблицаМатериалов Цикл
				СписокЭтапов.Добавить(СтрокаЭтапа.Этап);
			КонецЦикла;
			
		КонецЕсли;
		
		ЭлементСписокЗаказов = НовыеНастройкиКД.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("СписокЗаказов")); 
		Если НЕ ЭлементСписокЗаказов = Неопределено Тогда
			ЭлементСписокЗаказов.Значение = СписокЭтапов;
			ЭлементСписокЗаказов.Использование = Истина;
		КонецЕсли;
	КонецЕсли; 	
	
КонецПроцедуры

Процедура ПриЗагрузкеВариантаНаСервере(ЭтаФорма, НовыеНастройкиКД) Экспорт
	
	Отчет = ЭтаФорма.Отчет;
	КомпоновщикНастроекФормы = Отчет.КомпоновщикНастроек;
		
	
	НовыеНастройкиКД = КомпоновщикНастроекФормы.Настройки;

	ЭлементНачалоПериода = НовыеНастройкиКД.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ДатаСреза")); 
	Если НЕ ЭлементНачалоПериода = Неопределено Тогда
		ЭлементНачалоПериода.Значение = КонецДня(ТекущаяДатаСеанса());
		ЭлементНачалоПериода.Использование = Истина;
	КонецЕсли;
	
	Если ЭтаФорма.Параметры.Свойство("ТаблицаМатериалов") Тогда
		
		ТаблицаМатериалов = ЭтаФорма.Параметры.ТаблицаМатериалов;
		
		СписокЭтапов = Новый СписокЗначений;
		
		Если  ЭтаФорма.Параметры.Свойство("ПоВсемуЗаказу") И ЭтаФорма.Параметры.ПоВсемуЗаказу Тогда
			ЗаказСсылка = ТаблицаМатериалов[0].Заказ;
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ
			               |	ЭтапПроизводства2_2.Ссылка КАК Ссылка
			               |ИЗ
			               |	Документ.ЭтапПроизводства2_2 КАК ЭтапПроизводства2_2
			               |ГДЕ
			               |	ЭтапПроизводства2_2.Проведен = Истина
			               |	И ЭтапПроизводства2_2.Распоряжение = &Распоряжение";
			Запрос.УстановитьПараметр("Распоряжение", ЗаказСсылка);
			
			ЗапросВыборка = Запрос.Выполнить().Выбрать();
			Пока ЗапросВыборка.Следующий() Цикл
				СписокЭтапов.Добавить(ЗапросВыборка.Ссылка);
			КонецЦикла;
			
		Иначе
			Для Каждого СтрокаЭтапа Из ТаблицаМатериалов Цикл
				СписокЭтапов.Добавить(СтрокаЭтапа.Этап);
			КонецЦикла;
			
		КонецЕсли;
		
		ЭлементСписокЗаказов = НовыеНастройкиКД.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("СписокЗаказов")); 
		Если НЕ ЭлементСписокЗаказов = Неопределено Тогда
			ЭлементСписокЗаказов.Значение = СписокЭтапов;
			ЭлементСписокЗаказов.Использование = Истина;
		КонецЕсли;
	КонецЕсли; 	
	
КонецПроцедуры


Процедура ПослеЗаполненияПанелиБыстрыхНастроек(ЭтаФорма, ПараметрыЗаполнения) Экспорт
	
	
	// Оптимизация взаимного расположения отбора и параметров периода истечения срока годности.
	ЭлементыФормы = ЭтаФорма.Элементы;

	Отчет = ЭтаФорма.Отчет;
	КомпоновщикНастроекФормы = Отчет.КомпоновщикНастроек;
	
	НовыеНастройкиКД = КомпоновщикНастроекФормы.Настройки;

	ЭлементНачалоПериода = НовыеНастройкиКД.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ДатаСреза")); 
	Если НЕ ЭлементНачалоПериода = Неопределено Тогда
		ЭлементНачалоПериода.Значение = КонецДня(ТекущаяДатаСеанса());
		ЭлементНачалоПериода.Использование = Истина;
	КонецЕсли;
	
	Если ЭтаФорма.Параметры.Свойство("ТаблицаМатериалов") Тогда
		
		ТаблицаМатериалов = ЭтаФорма.Параметры.ТаблицаМатериалов;
		
		СписокЭтапов = Новый СписокЗначений;
		
		Если  ЭтаФорма.Параметры.Свойство("ПоВсемуЗаказу") И ЭтаФорма.Параметры.ПоВсемуЗаказу Тогда
			ЗаказСсылка = ТаблицаМатериалов[0].Заказ;
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ
			               |	ЭтапПроизводства2_2.Ссылка КАК Ссылка
			               |ИЗ
			               |	Документ.ЭтапПроизводства2_2 КАК ЭтапПроизводства2_2
			               |ГДЕ
			               |	ЭтапПроизводства2_2.Проведен = Истина
			               |	И ЭтапПроизводства2_2.Распоряжение = &Распоряжение";
			Запрос.УстановитьПараметр("Распоряжение", ЗаказСсылка);
			
			ЗапросВыборка = Запрос.Выполнить().Выбрать();
			Пока ЗапросВыборка.Следующий() Цикл
				СписокЭтапов.Добавить(ЗапросВыборка.Ссылка);
			КонецЦикла;
			
		Иначе
			Для Каждого СтрокаЭтапа Из ТаблицаМатериалов Цикл
				СписокЭтапов.Добавить(СтрокаЭтапа.Этап);
			КонецЦикла;
			
		КонецЕсли;
		
		ЭлементСписокЗаказов = НовыеНастройкиКД.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("СписокЗаказов")); 
		Если НЕ ЭлементСписокЗаказов = Неопределено Тогда
			ЭлементСписокЗаказов.Значение = СписокЭтапов;
			ЭлементСписокЗаказов.Использование = Истина;
		КонецЕсли;
	КонецЕсли;

	ЭлементНачалоПериода = КомпоновщикНастроекФормы.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ДатаСреза")); 
	Если НЕ ЭлементНачалоПериода = Неопределено Тогда
	ЭлементДатаСрезаПользовательские = КомпоновщикНастроекФормы.ПользовательскиеНастройки.Элементы.Найти(ЭлементНачалоПериода.ИдентификаторПользовательскойНастройки); 
		Если НЕ ЭлементДатаСрезаПользовательские = Неопределено Тогда
			ЭлементДатаСрезаПользовательские.Значение = ЭлементНачалоПериода.Значение;
		КонецЕсли;
		
	КонецЕсли;
	
	ЭлементСписокЭтапов = КомпоновщикНастроекФормы.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("СписокЗаказов")); 
	Если НЕ ЭлементСписокЭтапов = Неопределено Тогда
	ЭлементЭлементСписокЭтаповПользовательские = КомпоновщикНастроекФормы.ПользовательскиеНастройки.Элементы.Найти(ЭлементСписокЭтапов.ИдентификаторПользовательскойНастройки); 
		Если НЕ ЭлементЭлементСписокЭтаповПользовательские = Неопределено Тогда
			ЭлементЭлементСписокЭтаповПользовательские.Значение = ЭлементСписокЭтапов.Значение;
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры
#КонецОбласти

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	КомпНастроек = ЭтотОбъект.КомпоновщикНастроек;
	
	
КонецПроцедуры
