
&НаСервере
Процедура УстановитьУсловноеОформление()
	
	// Оформим строку руппировки "ОЕМ потребность"
	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ТаблицаПотребности.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТаблицаПотребности.Номенклатура");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;

	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветФона", WebЦвета.Роса);
	НовыйШрифт = Новый Шрифт(Элементы.ТаблицаПотребности.Шрифт, , , Истина);
	Элемент.Оформление.УстановитьЗначениеПараметра("Шрифт", НовыйШрифт);
	
	// Только просмотр колонки "Подобрано" для группировки по "ОЕМ потребности"
	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ТаблицаПотребностиКоличествоПодобрано.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТаблицаПотребности.Номенклатура");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;

	Элемент.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьТаблицуПотребностей(ПоказатьОбщуюПотребность,ОтобратьПоЗаказу = Ложь)
	
	ДеревоПотребности = ТаблицаПотребности.ПолучитьЭлементы();
	
	ТЗПодобрано = Новый ТаблицаЗначений;
	ТЗПодобрано.Колонки.Добавить("Назначение");
	ТЗПодобрано.Колонки.Добавить("Номенклатура");
	ТЗПодобрано.Колонки.Добавить("КоличествоПодобрано");
	Для каждого ТекущееНазначение Из ДеревоПотребности Цикл
		Для каждого ТекущаяНоменклатура Из ТекущееНазначение.ПолучитьЭлементы() Цикл
			Если ТекущаяНоменклатура.КоличествоПодобрано = 0 Тогда
				Продолжить;
			КонецЕсли; 
			НоваяСтрока = ТЗПодобрано.Добавить();
			НоваяСтрока.Назначение          = ТекущаяНоменклатура.ОЕМПотребность;
			НоваяСтрока.Номенклатура        = ТекущаяНоменклатура.Номенклатура;
			НоваяСтрока.КоличествоПодобрано = ТекущаяНоменклатура.КоличествоПодобрано;
		КонецЦикла;
	КонецЦикла;
	
	ДеревоПотребности.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТЧТовары.ГИГ_Назначение КАК Назначение,
	|	ТЧТовары.Номенклатура КАК Номенклатура,
	|	ТЧТовары.Количество КАК Количество,
//{{20201223 ГлазуновДВ	
	|	ТЧТовары.Упаковка КАК УпаковкаЗаказ,
	|	ТЧТовары.КоличествоУпаковок КАК КоличествоУпаковок,
//}}20201223 ГлазуновДВ	
	|	ТЧТовары.Характеристика КАК Характеристика,
	|	ТЧТовары.Склад КАК Склад
	|ПОМЕСТИТЬ ВТ_ТЧТовары
	|ИЗ
	|	&ТЧТовары КАК ТЧТовары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КлючиАналитикиУчетаНоменклатуры.Ссылка КАК Ссылка,
	|	КлючиАналитикиУчетаНоменклатуры.Назначение КАК Назначение,
	|	КлючиАналитикиУчетаНоменклатуры.Номенклатура КАК Номенклатура,
	|	КлючиАналитикиУчетаНоменклатуры.Характеристика КАК Характеристика,
	|	КлючиАналитикиУчетаНоменклатуры.МестоХранения КАК МестоХранения
	|ПОМЕСТИТЬ ВтКлючиАналитики
	|ИЗ
	|	ВТ_ТЧТовары КАК ВТ_ТЧТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК КлючиАналитикиУчетаНоменклатуры
	|		ПО ВТ_ТЧТовары.Назначение = КлючиАналитикиУчетаНоменклатуры.Назначение
	|			И ВТ_ТЧТовары.Номенклатура = КлючиАналитикиУчетаНоменклатуры.Номенклатура
	|			И ВТ_ТЧТовары.Характеристика = КлючиАналитикиУчетаНоменклатуры.Характеристика
	|			И ВТ_ТЧТовары.Склад = КлючиАналитикиУчетаНоменклатуры.МестоХранения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОбеспечениеЗаказовОстатки.Назначение КАК ОЕМПотребность,
	|	ОбеспечениеЗаказовОстатки.Номенклатура КАК Номенклатура,
	|	ОбеспечениеЗаказовОстатки.Номенклатура.ЕдиницаИзмерения КАК Упаковка,
//{{20201223 ГлазуновДВ	
	|	ТЧТовары.УпаковкаЗаказ КАК УпаковкаЗаказ,
	|	ЕСТЬNULL(ТЧТовары.КоличествоУпаковок, 0) КАК КоличествоУпаковокВЗаказе,
//}}20201223 ГлазуновДВ	
	|	ОбеспечениеЗаказовОстатки.ПотребностьОстаток КАК КоличествоПотребность,
	|	ЕСТЬNULL(ТЧТовары.Количество, 0) КАК КоличествоВЗаказе,
	|	ПРЕДСТАВЛЕНИЕ(ОбеспечениеЗаказовОстатки.Назначение) КАК НазначениеПредставление,
	|	ПРЕДСТАВЛЕНИЕ(ОбеспечениеЗаказовОстатки.Номенклатура) КАК НоменклатураПредставление,
	// 140520 нужно брать только количество заказанное, не зависимо от того есть ли поступление на этот товар в текущий день (даже без ордера)
	//|	ТоварыОрганизацийОстатки.КоличествоОстаток КАК КоличествоДоступно
	|ОбеспечениеЗаказовОстатки.НаличиеПодЗаказОстаток КАК КоличествоДоступно
	|ИЗ
	|	РегистрНакопления.ОбеспечениеЗаказов.Остатки(
	|			,
	|			Склад = &Склад
	|				И Назначение.ГИГ_Партнер = &Партнер
	|				И Назначение.ГИГ_ОЕМПотребность) КАК ОбеспечениеЗаказовОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ВТ_ТЧТовары.Назначение КАК Назначение,
	|			ВТ_ТЧТовары.Номенклатура КАК Номенклатура,
	|			СУММА(ВТ_ТЧТовары.Количество) КАК Количество,
//{{20201223 ГлазуновДВ	
	|			ВТ_ТЧТовары.УпаковкаЗаказ КАК УпаковкаЗаказ,
	|			СУММА(ВТ_ТЧТовары.КоличествоУпаковок) КАК КоличествоУпаковок,
//}}20201223 ГлазуновДВ	
	|			ВТ_ТЧТовары.Характеристика КАК Характеристика,
	|			ВТ_ТЧТовары.Склад КАК Склад
	|		ИЗ
	|			ВТ_ТЧТовары КАК ВТ_ТЧТовары
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ВТ_ТЧТовары.Назначение,
	|			ВТ_ТЧТовары.Номенклатура,
	|			ВТ_ТЧТовары.Характеристика,
//{{20201223 ГлазуновДВ	
	|			ВТ_ТЧТовары.УпаковкаЗаказ,
//}}20201223 ГлазуновДВ	
	|			ВТ_ТЧТовары.Склад) КАК ТЧТовары
	|		ПО ОбеспечениеЗаказовОстатки.Номенклатура = ТЧТовары.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыОрганизаций.Остатки КАК ТоварыОрганизацийОстатки
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВтКлючиАналитики КАК ВтКлючиАналитики
	|			ПО ТоварыОрганизацийОстатки.АналитикаУчетаНоменклатуры = ВтКлючиАналитики.Ссылка
	|		ПО ОбеспечениеЗаказовОстатки.Номенклатура = ТоварыОрганизацийОстатки.АналитикаУчетаНоменклатуры.Номенклатура
	|			И ОбеспечениеЗаказовОстатки.Назначение = ТоварыОрганизацийОстатки.АналитикаУчетаНоменклатуры.Назначение
	|			И ОбеспечениеЗаказовОстатки.Склад = ТоварыОрганизацийОстатки.АналитикаУчетаНоменклатуры.МестоХранения
	|
	|//УСЛОВИЕ
	|
	|УПОРЯДОЧИТЬ ПО
//Исходное	|	ОбеспечениеЗаказовОстатки.Назначение.Представление,
//{{20201228 ГлазуновДВ	
	|	ОбеспечениеЗаказовОстатки.Назначение.Заказ,
//}}20201228 ГлазуновДВ	
	|	ОбеспечениеЗаказовОстатки.Номенклатура.Представление
	|ИТОГИ ПО
	|	ОЕМПотребность";
	
	
	Если ОтобратьПоЗаказу Тогда
		ПоказатьОбщуюПотребность = Ложь;
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "//УСЛОВИЕ", "
		|ГДЕ
		|	ОбеспечениеЗаказовОстатки.НаличиеПодЗаказОстаток > 0
		|	И ОбеспечениеЗаказовОстатки.Назначение.Партнер = ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)
		|	И ЕСТЬNULL(ТЧТовары.Количество, 0) > 0");	
	Иначе 
		Если Не ПоказатьОбщуюПотребность Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "//УСЛОВИЕ", "
			|ГДЕ
			|	ОбеспечениеЗаказовОстатки.НаличиеПодЗаказОстаток > 0
			|	И ОбеспечениеЗаказовОстатки.Назначение.Партнер = ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)
			|	И ОбеспечениеЗаказовОстатки.НаличиеПодЗаказОстаток - ЕСТЬNULL(ТЧТовары.Количество, 0) > 0");
		КонецЕсли;	
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Склад",    Склад);
	Запрос.УстановитьПараметр("Партнер",  Партнер);
	Запрос.УстановитьПараметр("ТЧТовары", ТЧТовары.Выгрузить());
	
	ВыборкаНазначение = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаНазначение.Следующий() Цикл
		
		ТекущееНазначение = ДеревоПотребности.Добавить();
		ТекущееНазначение.Представление     = ВыборкаНазначение.НазначениеПредставление;
		ТекущееНазначение.ОЕМПотребность    = ВыборкаНазначение.ОЕМПотребность;
		ТекущееНазначение.ДействиеПодобрать = 0;
		
		Выборка = ВыборкаНазначение.Выбрать();
	//{{20201223 ГлазуновДВ	
		ТекущаяНоменклатураСравнения = Справочники.Номенклатура.ПустаяСсылка();
	//}}20201223 ГлазуновДВ	
		Пока Выборка.Следующий() Цикл
			
//Исходное			ТекущаяНоменклатура = ТекущееНазначение.ПолучитьЭлементы().Добавить();
//Исходное			ТекущаяНоменклатура.Представление         = Выборка.НоменклатураПредставление;
//Исходное			ТекущаяНоменклатура.ОЕМПотребность        = Выборка.ОЕМПотребность;
//Исходное			ТекущаяНоменклатура.Номенклатура          = Выборка.Номенклатура;
//Исходное			ТекущаяНоменклатура.Упаковка              = Выборка.Упаковка;
//Исходное			ТекущаяНоменклатура.КоличествоВЗаказе     = Выборка.КоличествоВЗаказе;
//Исходное			ТекущаяНоменклатура.КоличествоДоступно    = Выборка.КоличествоДоступно;
//Исходное			ТекущаяНоменклатура.КоличествоПотребность = Выборка.КоличествоПотребность;
//Исходное			ТекущаяНоменклатура.ДействиеПодобрать     = 0;

		//{{20201223 ГлазуновДВ
		//ТЗ для Кратности по упаковкам
			СтрокаКратность = ВыборкаНазначениеКратность.Добавить();
			СтрокаКратность.ОЕМПотребность        = Выборка.ОЕМПотребность;
			СтрокаКратность.Номенклатура          = Выборка.Номенклатура;
			СтрокаКратность.Упаковка              = Выборка.Упаковка;
			СтрокаКратность.КоличествоВЗаказе     = Выборка.КоличествоВЗаказе;
			Если Выборка.УпаковкаЗаказ <> NULL И Выборка.УпаковкаЗаказ <> Справочники.УпаковкиЕдиницыИзмерения.ПустаяСсылка() Тогда
				Если Выборка.УпаковкаЗаказ.Числитель > 1 Тогда
					СтрокаКратность.КоличествоУпаковокВЗаказе 	= Выборка.КоличествоУпаковокВЗаказе;
					СтрокаКратность.УпаковкаЗаказ 				= Выборка.УпаковкаЗаказ;
				КонецЕсли;
			Иначе
				СтрокаКратность.КоличествоУпаковокВЗаказе 	= Выборка.КоличествоВЗаказе;
				СтрокаКратность.УпаковкаЗаказ 				= Выборка.Упаковка;
			КонецЕсли;
		
		//Дерево для вывода на форму
			Если Выборка.Номенклатура = ТекущаяНоменклатураСравнения Тогда
				ТекущаяНоменклатура.КоличествоВЗаказе 			= ТекущаяНоменклатура.КоличествоВЗаказе + Выборка.КоличествоВЗаказе;
				Если Выборка.УпаковкаЗаказ <> NULL И Выборка.УпаковкаЗаказ <> Справочники.УпаковкиЕдиницыИзмерения.ПустаяСсылка() Тогда
					Если Выборка.УпаковкаЗаказ.Числитель > 1 Тогда
						ТекущаяНоменклатура.КоличествоУпаковокВЗаказе 	= ТекущаяНоменклатура.КоличествоУпаковокВЗаказе + Выборка.КоличествоУпаковокВЗаказе;
						ТекущаяНоменклатура.УпаковкаЗаказ 				= Выборка.УпаковкаЗаказ;
					КонецЕсли;
				//Иначе
				//	ТекущаяНоменклатура.КратноУпаковке = Ложь;
				КонецЕсли;
				ТекущаяНоменклатураСравнения = Выборка.Номенклатура;
			Иначе
				ТекущаяНоменклатура = ТекущееНазначение.ПолучитьЭлементы().Добавить();
				ТекущаяНоменклатура.Представление         = Выборка.НоменклатураПредставление;
				ТекущаяНоменклатура.ОЕМПотребность        = Выборка.ОЕМПотребность;
				ТекущаяНоменклатура.Номенклатура          = Выборка.Номенклатура;
				ТекущаяНоменклатура.Упаковка              = Выборка.Упаковка;
				ТекущаяНоменклатура.КоличествоВЗаказе     = Выборка.КоличествоВЗаказе;
				ТекущаяНоменклатура.КоличествоДоступно    = Выборка.КоличествоДоступно;
				ТекущаяНоменклатура.КоличествоПотребность = Выборка.КоличествоПотребность;
				//ТекущаяНоменклатура.КратноУпаковке = Ложь;
				ТекущаяНоменклатураСравнения = Выборка.Номенклатура;
				Если Выборка.УпаковкаЗаказ <> NULL И Выборка.УпаковкаЗаказ <> Справочники.УпаковкиЕдиницыИзмерения.ПустаяСсылка() Тогда
					Если Выборка.УпаковкаЗаказ.Числитель > 1 Тогда
						ТекущаяНоменклатура.КоличествоУпаковокВЗаказе 	= Выборка.КоличествоУпаковокВЗаказе;
						ТекущаяНоменклатура.УпаковкаЗаказ 				= Выборка.УпаковкаЗаказ;
						//ТекущаяНоменклатура.КратноУпаковке = Истина;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли; 
		//}}20201223 ГлазуновДВ	
				
			Отбор = Новый Структура;
			Отбор.Вставить("Назначение",   Выборка.ОЕМПотребность);
			Отбор.Вставить("Номенклатура", Выборка.Номенклатура);
			НайденныеСтроки = ТЗПодобрано.НайтиСтроки(Отбор);
			Если НайденныеСтроки.Количество() <> 0 Тогда
				ТекущаяНоменклатура.КоличествоПодобрано = НайденныеСтроки[0].КоличествоПодобрано;
			КонецЕсли; 
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры 

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьЗначенияСвойств(ЭтаФорма, Параметры, "Валюта, Соглашение, Организация, Склад, Дата, Партнер");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТЗ.Номенклатура КАК Номенклатура,
		|	ТЗ.ГИГ_Назначение КАК ГИГ_Назначение,
		|	ТЗ.Количество КАК Количество,
	//{{20201223 ГлазуновДВ	
		|	ТЗ.Упаковка КАК Упаковка,
		|	ТЗ.КоличествоУпаковок КАК КоличествоУпаковок,
	//}}20201223 ГлазуновДВ	
		|	ТЗ.ВариантОбеспечения КАК ВариантОбеспечения,
		|	ТЗ.ГИГ_НазначениеУстановлено КАК ГИГ_НазначениеУстановлено,
		|	ТЗ.Характеристика КАК Характеристика,
		|	ТЗ.Склад КАК Склад
		|ПОМЕСТИТЬ ВТ_ТЗ
		|ИЗ
		|	&ТЗ КАК ТЗ
		|ГДЕ
		|	НЕ ТЗ.ГИГ_НазначениеУстановлено
		|	И ТЗ.ВариантОбеспечения В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.НеТребуется), ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Требуется), ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ИзЗаказов), ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Обособленно))
		|	И ТЗ.ГИГ_Назначение = ЗНАЧЕНИЕ(справочник.назначения.пустаяссылка)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ТЗ.Номенклатура КАК Номенклатура,
		|	ВТ_ТЗ.ГИГ_Назначение КАК ГИГ_Назначение,
		|	ВТ_ТЗ.Количество КАК Количество,
	//{{20201223 ГлазуновДВ	
		|	ВТ_ТЗ.Упаковка КАК Упаковка,
		|	ВТ_ТЗ.КоличествоУпаковок КАК КоличествоУпаковок,
	//}}20201223 ГлазуновДВ	
		|	ВТ_ТЗ.Характеристика КАК Характеристика,
		|	ВТ_ТЗ.Склад КАК Склад
		|ИЗ
		|	ВТ_ТЗ КАК ВТ_ТЗ";
	
//Исходное	Запрос.УстановитьПараметр("ТЗ",Параметры.Товары.Выгрузить(Новый Структура("Отменено",Ложь), "ГИГ_Назначение, Номенклатура, Количество, ВариантОбеспечения,ГИГ_НазначениеУстановлено,Характеристика,Склад"));
	//{{20201223 ГлазуновДВ	
	Запрос.УстановитьПараметр("ТЗ", Параметры.Товары.Выгрузить(Новый Структура("Отменено", Ложь), "ГИГ_Назначение, Номенклатура, Количество, Упаковка, КоличествоУпаковок, ВариантОбеспечения, ГИГ_НазначениеУстановлено, Характеристика, Склад"));
	//}}20201223 ГлазуновДВ	
	
	РезультатЗапроса = Запрос.Выполнить();
	ТЧТовары.Загрузить(РезультатЗапроса.Выгрузить());
		
	//++Гольм А.А. (Гигабайт) 20.11.2018 12:28:34
	МаксимальнаяДатаОтгрузки = Параметры.МаксимальнаяДатаОтгрузки;
	//--Гольм А.А. (Гигабайт) 20.11.2018 12:28:37
	
	УстановитьУсловноеОформление();
	
	ТолькоПоЗаказу = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаПотребностиПриАктивизацииЯчейки(Элемент)
	
	Если Элемент.ТекущийЭлемент = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
//{{20201228 ГлазуновДВ
	Элемент.Подсказка = "";
//}}20201228 ГлазуновДВ
		
	Если Элемент.ТекущийЭлемент.Имя = "ТаблицаПотребностиДействиеПодобрать" Тогда
		
		СтандартнаяОбработка = Ложь;
		
		ТекущиеДанные = Элементы.ТаблицаПотребности.ТекущиеДанные;
		Если ТекущиеДанные = Неопределено Тогда
			Возврат;
		КонецЕсли;
		
		СтрокаПотребности = ТаблицаПотребности.НайтиПоИдентификатору(ТекущиеДанные.ПолучитьИдентификатор());
		Если ЗначениеЗаполнено(СтрокаПотребности.Номенклатура) Тогда
			СтрокаПотребности.КоличествоПодобрано = ?(СтрокаПотребности.КоличествоДоступно > СтрокаПотребности.КоличествоВЗаказе,СтрокаПотребности.КоличествоВЗаказе,СтрокаПотребности.КоличествоДоступно);
		//{{20201224 ГлазуновДВ
			Если ТолькоПоЗаказу Тогда
				
				МассивКратность = ВыборкаНазначениеКратность.НайтиСтроки(Новый Структура("ОЕМПотребность, Номенклатура", СтрокаПотребности.ОЕМПотребность, СтрокаПотребности.Номенклатура));
			    Для Просмотр = 0 По МассивКратность.Количество()-1 Цикл

					ПросмотрУпаковкаЗаказЧислитель = ПолучитьЧислительУпаковки(МассивКратность[Просмотр].УпаковкаЗаказ);
					ПросмотрУпаковкаЗаказЗнаменатель = ПолучитьЗнаменательУпаковки(МассивКратность[Просмотр].УпаковкаЗаказ);
					
			        Для Индекс = 0 По МассивКратность.Количество()-1 Цикл
			            Если Индекс = МассивКратность.Количество()-1 Тогда
			                Прервать;
						КонецЕсли;
						
						ИндексУпаковкаЗаказЧислитель = ПолучитьЧислительУпаковки(МассивКратность[Индекс].УпаковкаЗаказ);
						ИндексУпаковкаЗаказЗнаменатель = ПолучитьЗнаменательУпаковки(МассивКратность[Индекс].УпаковкаЗаказ);
						
			            Если ПросмотрУпаковкаЗаказЧислитель / ПросмотрУпаковкаЗаказЗнаменатель > ИндексУпаковкаЗаказЧислитель / ИндексУпаковкаЗаказЗнаменатель Тогда
			                СтаршийЭлемент = МассивКратность[Просмотр];
			                МладшийЭлемент = МассивКратность[Индекс];
			                МассивКратность[Просмотр] = МладшийЭлемент;
			                МассивКратность[Индекс] = СтаршийЭлемент;
			            КонецЕсли;
			        КонецЦикла;
				КонецЦикла;
				
				КоличествоПодобраноВсего = СтрокаПотребности.КоличествоПодобрано;
				КоличествоПодобраноОсталось = СтрокаПотребности.КоличествоПодобрано;
				КоличествоПодобрано = 0;
				
				Для Каждого СтрокаМассива Из МассивКратность Цикл 
					УпаковкаЗаказЧислитель = ПолучитьЧислительУпаковки(СтрокаМассива.УпаковкаЗаказ);
					УпаковкаЗаказЗнаменатель = ПолучитьЗнаменательУпаковки(СтрокаМассива.УпаковкаЗаказ);
					//Если СтрокаМассива.КоличествоУпаковокВЗаказе > 0 И УпаковкаЗаказЧислитель > 1 Тогда
					Если СтрокаМассива.КоличествоУпаковокВЗаказе > 0 Тогда
					//Отработаем кратность по Упаковкам
						КоличествоДляПодбора = Цел(КоличествоПодобраноОсталось / УпаковкаЗаказЧислитель * УпаковкаЗаказЗнаменатель) * УпаковкаЗаказЧислитель / УпаковкаЗаказЗнаменатель;
						КоличествоПодобрано = КоличествоПодобрано + ?(СтрокаМассива.КоличествоВЗаказе > КоличествоДляПодбора, КоличествоДляПодбора, СтрокаМассива.КоличествоВЗаказе);
						КоличествоПодобраноОсталось = КоличествоПодобраноВсего - КоличествоПодобрано;
						Если КоличествоПодобраноОсталось <= 0 Тогда
							Прервать;
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
				СтрокаПотребности.КоличествоПодобрано = КоличествоПодобрано;
				
				ИтогоКоличествоПодобрано = 0;
				ИтогоКоличествоДоступно = 0;
				Для Каждого СтрокаПотребности1 Из ТаблицаПотребности.ПолучитьЭлементы() Цикл
					Для Каждого ТекущаяСтрока Из СтрокаПотребности1.ПолучитьЭлементы() Цикл
						Если ТекущаяСтрока.Номенклатура <> СтрокаПотребности.Номенклатура Тогда
							Продолжить;
						КонецЕсли; 
						ИтогоКоличествоПодобрано = ИтогоКоличествоПодобрано + ТекущаяСтрока.КоличествоПодобрано;
						ИтогоКоличествоДоступно = ИтогоКоличествоДоступно + ТекущаяСтрока.КоличествоДоступно;
					КонецЦикла; 
				КонецЦикла;
				
				КоличествоВЗаказеИлиДоступно = Мин(СтрокаПотребности.КоличествоВЗаказе, ИтогоКоличествоДоступно);
				//КоличествоВЗаказеИлиДоступно = Мин(ТекущиеДанные.КоличествоВЗаказе, ТекущиеДанные.КоличествоДоступно);
				
				Если ИтогоКоличествоПодобрано > КоличествоВЗаказеИлиДоступно Тогда
					
					КоличествоРаспределить = КоличествоВЗаказеИлиДоступно - СтрокаПотребности.КоличествоПодобрано;
					
					Для Каждого СтрокаПотребности1 Из ТаблицаПотребности.ПолучитьЭлементы() Цикл
						Для Каждого ТекущаяСтрока Из СтрокаПотребности1.ПолучитьЭлементы() Цикл
							Если ТекущаяСтрока.ПолучитьИдентификатор() = СтрокаПотребности.ПолучитьИдентификатор()
								Или ТекущаяСтрока.Номенклатура <> СтрокаПотребности.Номенклатура Тогда
								Продолжить;
							КонецЕсли;
							
							КоличествоРаспределитьВСтроке = Мин(КоличествоРаспределить, ТекущаяСтрока.КоличествоДоступно);
							
							МассивКратность = ВыборкаНазначениеКратность.НайтиСтроки(Новый Структура("ОЕМПотребность, Номенклатура", ТекущаяСтрока.ОЕМПотребность, ТекущаяСтрока.Номенклатура));
						    Для Просмотр = 0 По МассивКратность.Количество()-1 Цикл

								ПросмотрУпаковкаЗаказЧислитель = ПолучитьЧислительУпаковки(МассивКратность[Просмотр].УпаковкаЗаказ);
								ПросмотрУпаковкаЗаказЗнаменатель = ПолучитьЗнаменательУпаковки(МассивКратность[Просмотр].УпаковкаЗаказ);
								
						        Для Индекс = 0 По МассивКратность.Количество()-1 Цикл
						            Если Индекс = МассивКратность.Количество()-1 Тогда
						                Прервать;
									КонецЕсли;
									
									ИндексУпаковкаЗаказЧислитель = ПолучитьЧислительУпаковки(МассивКратность[Индекс].УпаковкаЗаказ);
									ИндексУпаковкаЗаказЗнаменатель = ПолучитьЗнаменательУпаковки(МассивКратность[Индекс].УпаковкаЗаказ);
									
						            Если ПросмотрУпаковкаЗаказЧислитель / ПросмотрУпаковкаЗаказЗнаменатель > ИндексУпаковкаЗаказЧислитель / ИндексУпаковкаЗаказЗнаменатель Тогда
						                СтаршийЭлемент = МассивКратность[Просмотр];
						                МладшийЭлемент = МассивКратность[Индекс];
						                МассивКратность[Просмотр] = МладшийЭлемент;
						                МассивКратность[Индекс] = СтаршийЭлемент;
						            КонецЕсли;
						        КонецЦикла;
							КонецЦикла;
							
							КоличествоПодобраноВсего = КоличествоРаспределитьВСтроке;
							КоличествоПодобраноОсталось = КоличествоРаспределитьВСтроке;
							КоличествоПодобрано = 0;
							
							Для Каждого СтрокаМассива Из МассивКратность Цикл 
								УпаковкаЗаказЧислитель = ПолучитьЧислительУпаковки(СтрокаМассива.УпаковкаЗаказ);
								УпаковкаЗаказЗнаменатель = ПолучитьЗнаменательУпаковки(СтрокаМассива.УпаковкаЗаказ);
								Если СтрокаМассива.КоличествоУпаковокВЗаказе > 0 Тогда
								//Отработаем кратность по Упаковкам
									КоличествоДляПодбора = Цел(КоличествоПодобраноОсталось / УпаковкаЗаказЧислитель * УпаковкаЗаказЗнаменатель) * УпаковкаЗаказЧислитель / УпаковкаЗаказЗнаменатель;
									КоличествоПодобрано = КоличествоПодобрано + ?(СтрокаМассива.КоличествоВЗаказе > КоличествоДляПодбора, КоличествоДляПодбора, СтрокаМассива.КоличествоВЗаказе);
									КоличествоПодобраноОсталось = КоличествоПодобраноВсего - КоличествоПодобрано;
									Если КоличествоПодобраноОсталось < 0 Тогда
										КоличествоПодобрано = 0;
									КонецЕсли;
								КонецЕсли;
							КонецЦикла;
							ТекущаяСтрока.КоличествоПодобрано = КоличествоПодобрано;
							КоличествоРаспределить = КоличествоРаспределить - КоличествоПодобрано;
						КонецЦикла; 
					КонецЦикла;
				КонецЕсли;
			КонецЕсли;
		//}}20201224 ГлазуновДВ	
		Иначе
			Для каждого ТекущаяСтрока Из СтрокаПотребности.ПолучитьЭлементы() Цикл
				ТекущаяСтрока.КоличествоПодобрано = ?(ТекущаяСтрока.КоличествоДоступно > ТекущаяСтрока.КоличествоВЗаказе,ТекущаяСтрока.КоличествоВЗаказе,ТекущаяСтрока.КоличествоДоступно);
			//{{20201224 ГлазуновДВ
				Если ТолькоПоЗаказу Тогда
					
					МассивКратность = ВыборкаНазначениеКратность.НайтиСтроки(Новый Структура("ОЕМПотребность, Номенклатура", ТекущаяСтрока.ОЕМПотребность, ТекущаяСтрока.Номенклатура));
				    Для Просмотр = 0 По МассивКратность.Количество()-1 Цикл

						ПросмотрУпаковкаЗаказЧислитель = ПолучитьЧислительУпаковки(МассивКратность[Просмотр].УпаковкаЗаказ);
						ПросмотрУпаковкаЗаказЗнаменатель = ПолучитьЗнаменательУпаковки(МассивКратность[Просмотр].УпаковкаЗаказ);
						
				        Для Индекс = 0 По МассивКратность.Количество()-1 Цикл
				            Если Индекс = МассивКратность.Количество()-1 Тогда
				                Прервать;
							КонецЕсли;
							
							ИндексУпаковкаЗаказЧислитель = ПолучитьЧислительУпаковки(МассивКратность[Индекс].УпаковкаЗаказ);
							ИндексУпаковкаЗаказЗнаменатель = ПолучитьЗнаменательУпаковки(МассивКратность[Индекс].УпаковкаЗаказ);
							
				            Если ПросмотрУпаковкаЗаказЧислитель / ПросмотрУпаковкаЗаказЗнаменатель > ИндексУпаковкаЗаказЧислитель / ИндексУпаковкаЗаказЗнаменатель Тогда
				                СтаршийЭлемент = МассивКратность[Просмотр];
				                МладшийЭлемент = МассивКратность[Индекс];
				                МассивКратность[Просмотр] = МладшийЭлемент;
				                МассивКратность[Индекс] = СтаршийЭлемент;
				            КонецЕсли;
				        КонецЦикла;
					КонецЦикла;
					
					КоличествоПодобраноВсего = ТекущаяСтрока.КоличествоПодобрано;
					КоличествоПодобраноОсталось = ТекущаяСтрока.КоличествоПодобрано;
					КоличествоПодобрано = 0;
					
					Для Каждого СтрокаМассива Из МассивКратность Цикл 
						УпаковкаЗаказЧислитель = ПолучитьЧислительУпаковки(СтрокаМассива.УпаковкаЗаказ);
						УпаковкаЗаказЗнаменатель = ПолучитьЗнаменательУпаковки(СтрокаМассива.УпаковкаЗаказ);
						//Если СтрокаМассива.КоличествоУпаковокВЗаказе > 0 И УпаковкаЗаказЧислитель > 1 Тогда
						Если СтрокаМассива.КоличествоУпаковокВЗаказе > 0 Тогда
						//Отработаем кратность по Упаковкам
							КоличествоДляПодбора = Цел(КоличествоПодобраноОсталось / УпаковкаЗаказЧислитель * УпаковкаЗаказЗнаменатель) * УпаковкаЗаказЧислитель / УпаковкаЗаказЗнаменатель;
							КоличествоПодобрано = КоличествоПодобрано + ?(СтрокаМассива.КоличествоВЗаказе > КоличествоДляПодбора, КоличествоДляПодбора, СтрокаМассива.КоличествоВЗаказе);
							КоличествоПодобраноОсталось = КоличествоПодобраноВсего - КоличествоПодобрано;
							Если КоличествоПодобраноОсталось <= 0 Тогда
								Прервать;
							КонецЕсли;
						КонецЕсли;
					КонецЦикла;
					ТекущаяСтрока.КоличествоПодобрано = КоличествоПодобрано;
					
					
					ИтогоКоличествоПодобрано = 0;
					ИтогоКоличествоДоступно = 0;
					Для Каждого СтрокаПотребности Из ТаблицаПотребности.ПолучитьЭлементы() Цикл
						Для Каждого ТекущаяСтрока1 Из СтрокаПотребности.ПолучитьЭлементы() Цикл
							Если ТекущаяСтрока1.Номенклатура <> ТекущаяСтрока.Номенклатура Тогда
								Продолжить;
							КонецЕсли; 
							ИтогоКоличествоПодобрано = ИтогоКоличествоПодобрано + ТекущаяСтрока1.КоличествоПодобрано;
							ИтогоКоличествоДоступно = ИтогоКоличествоДоступно + ТекущаяСтрока1.КоличествоДоступно;
						КонецЦикла; 
					КонецЦикла;
					
					КоличествоВЗаказеИлиДоступно = Мин(ТекущаяСтрока.КоличествоВЗаказе, ИтогоКоличествоДоступно);
					
					Если ИтогоКоличествоПодобрано > КоличествоВЗаказеИлиДоступно Тогда
						
						КоличествоРаспределить = КоличествоВЗаказеИлиДоступно - ТекущаяСтрока.КоличествоПодобрано;
						
						Для Каждого СтрокаПотребности Из ТаблицаПотребности.ПолучитьЭлементы() Цикл
							Для Каждого ТекущаяСтрока1 Из СтрокаПотребности.ПолучитьЭлементы() Цикл
								Если ТекущаяСтрока1.ПолучитьИдентификатор() = ТекущаяСтрока.ПолучитьИдентификатор()
									Или ТекущаяСтрока1.Номенклатура <> ТекущаяСтрока.Номенклатура Тогда
									Продолжить;
								КонецЕсли;
							
								КоличествоРаспределитьВСтроке = Мин(КоличествоРаспределить, ТекущаяСтрока1.КоличествоДоступно);
							
								МассивКратность = ВыборкаНазначениеКратность.НайтиСтроки(Новый Структура("ОЕМПотребность, Номенклатура", ТекущаяСтрока1.ОЕМПотребность, ТекущаяСтрока1.Номенклатура));
							    Для Просмотр = 0 По МассивКратность.Количество()-1 Цикл

									ПросмотрУпаковкаЗаказЧислитель = ПолучитьЧислительУпаковки(МассивКратность[Просмотр].УпаковкаЗаказ);
									ПросмотрУпаковкаЗаказЗнаменатель = ПолучитьЗнаменательУпаковки(МассивКратность[Просмотр].УпаковкаЗаказ);
									
							        Для Индекс = 0 По МассивКратность.Количество()-1 Цикл
							            Если Индекс = МассивКратность.Количество()-1 Тогда
							                Прервать;
										КонецЕсли;
										
										ИндексУпаковкаЗаказЧислитель = ПолучитьЧислительУпаковки(МассивКратность[Индекс].УпаковкаЗаказ);
										ИндексУпаковкаЗаказЗнаменатель = ПолучитьЗнаменательУпаковки(МассивКратность[Индекс].УпаковкаЗаказ);
										
							            Если ПросмотрУпаковкаЗаказЧислитель / ПросмотрУпаковкаЗаказЗнаменатель > ИндексУпаковкаЗаказЧислитель / ИндексУпаковкаЗаказЗнаменатель Тогда
							                СтаршийЭлемент = МассивКратность[Просмотр];
							                МладшийЭлемент = МассивКратность[Индекс];
							                МассивКратность[Просмотр] = МладшийЭлемент;
							                МассивКратность[Индекс] = СтаршийЭлемент;
							            КонецЕсли;
							        КонецЦикла;
								КонецЦикла;
								
								КоличествоПодобраноВсего = КоличествоРаспределитьВСтроке;
								КоличествоПодобраноОсталось = КоличествоРаспределитьВСтроке;
								КоличествоПодобрано = 0;
								
								Для Каждого СтрокаМассива Из МассивКратность Цикл 
									УпаковкаЗаказЧислитель = ПолучитьЧислительУпаковки(СтрокаМассива.УпаковкаЗаказ);
									УпаковкаЗаказЗнаменатель = ПолучитьЗнаменательУпаковки(СтрокаМассива.УпаковкаЗаказ);
									Если СтрокаМассива.КоличествоУпаковокВЗаказе > 0 Тогда
									//Отработаем кратность по Упаковкам
										КоличествоДляПодбора = Цел(КоличествоПодобраноОсталось / УпаковкаЗаказЧислитель * УпаковкаЗаказЗнаменатель) * УпаковкаЗаказЧислитель / УпаковкаЗаказЗнаменатель;
										КоличествоПодобрано = КоличествоПодобрано + ?(СтрокаМассива.КоличествоВЗаказе > КоличествоДляПодбора, КоличествоДляПодбора, СтрокаМассива.КоличествоВЗаказе);
										КоличествоПодобраноОсталось = КоличествоПодобраноВсего - КоличествоПодобрано;
										Если КоличествоПодобраноОсталось < 0 Тогда
											КоличествоПодобрано = 0;
										КонецЕсли;
									КонецЕсли;
								КонецЦикла;
								ТекущаяСтрока1.КоличествоПодобрано = КоличествоПодобрано;
								КоличествоРаспределить = КоличествоРаспределить - КоличествоПодобрано;
							КонецЦикла; 
						КонецЦикла;
					КонецЕсли;
				КонецЕсли;
			//}}20201224 ГлазуновДВ	
			КонецЦикла; 
		КонецЕсли; 
		
//{{20201225 ГлазуновДВ	
	ИначеЕсли Элемент.ТекущийЭлемент.Имя = "ТаблицаПотребностиКоличествоВЗаказе" Тогда	
		Элемент.Подсказка = "";
		Если Элемент.ТекущийЭлемент <> Неопределено Тогда
			ТекущиеДанные = Элементы.ТаблицаПотребности.ТекущиеДанные;
			МассивКратность = ВыборкаНазначениеКратность.НайтиСтроки(Новый Структура("ОЕМПотребность, Номенклатура", ТекущиеДанные.ОЕМПотребность, ТекущиеДанные.Номенклатура));
		//{{20201228 ГлазуновДВ	
		    Для Просмотр = 0 По МассивКратность.Количество()-1 Цикл

				ПросмотрУпаковкаЗаказЧислитель = ПолучитьЧислительУпаковки(МассивКратность[Просмотр].УпаковкаЗаказ);
				ПросмотрУпаковкаЗаказЗнаменатель = ПолучитьЗнаменательУпаковки(МассивКратность[Просмотр].УпаковкаЗаказ);
				
		        Для Индекс = 0 По МассивКратность.Количество()-1 Цикл
		            Если Индекс = МассивКратность.Количество()-1 Тогда
		                Прервать;
					КонецЕсли;
					
					ИндексУпаковкаЗаказЧислитель = ПолучитьЧислительУпаковки(МассивКратность[Индекс].УпаковкаЗаказ);
					ИндексУпаковкаЗаказЗнаменатель = ПолучитьЗнаменательУпаковки(МассивКратность[Индекс].УпаковкаЗаказ);
					
		            Если ПросмотрУпаковкаЗаказЧислитель / ПросмотрУпаковкаЗаказЗнаменатель > ИндексУпаковкаЗаказЧислитель / ИндексУпаковкаЗаказЗнаменатель Тогда
		                СтаршийЭлемент = МассивКратность[Просмотр];
		                МладшийЭлемент = МассивКратность[Индекс];
		                МассивКратность[Просмотр] = МладшийЭлемент;
		                МассивКратность[Индекс] = СтаршийЭлемент;
		            КонецЕсли;
		        КонецЦикла;
			КонецЦикла;
		//}}20201228 ГлазуновДВ	
			Для Каждого СтрокаМассива Из МассивКратность Цикл 
				//Элемент.Подсказка = Элемент.Подсказка + СтрокаМассива.КоличествоВЗаказе + " - " + СтрокаМассива.УпаковкаЗаказ + Символы.ПС;
			//{{20201228 ГлазуновДВ	
				Элемент.Подсказка = Элемент.Подсказка + СтрокаМассива.КоличествоУпаковокВЗаказе + " - " + СтрокаМассива.УпаковкаЗаказ + Символы.ПС;
			//}}20201228 ГлазуновДВ	
			КонецЦикла;
		КонецЕсли;
//}}20201225 ГлазуновДВ	
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаПотребностиКоличествоПодобраноПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ТаблицаПотребности.ТекущиеДанные;
	
	Если ТекущиеДанные.КоличествоПодобрано > ТекущиеДанные.КоличествоДоступно Тогда
		ТекущиеДанные.КоличествоПодобрано = ТекущиеДанные.КоличествоДоступно;
	КонецЕсли;
	
//{{20201223-20201225 ГлазуновДВ
	Если ТолькоПоЗаказу Тогда
		
		МассивКратность = ВыборкаНазначениеКратность.НайтиСтроки(Новый Структура("ОЕМПотребность, Номенклатура", ТекущиеДанные.ОЕМПотребность, ТекущиеДанные.Номенклатура));
	    Для Просмотр = 0 По МассивКратность.Количество()-1 Цикл

			ПросмотрУпаковкаЗаказЧислитель = ПолучитьЧислительУпаковки(МассивКратность[Просмотр].УпаковкаЗаказ);
			ПросмотрУпаковкаЗаказЗнаменатель = ПолучитьЗнаменательУпаковки(МассивКратность[Просмотр].УпаковкаЗаказ);
			
	        Для Индекс = 0 По МассивКратность.Количество()-1 Цикл
	            Если Индекс = МассивКратность.Количество()-1 Тогда
	                Прервать;
				КонецЕсли;
				
				ИндексУпаковкаЗаказЧислитель = ПолучитьЧислительУпаковки(МассивКратность[Индекс].УпаковкаЗаказ);
				ИндексУпаковкаЗаказЗнаменатель = ПолучитьЗнаменательУпаковки(МассивКратность[Индекс].УпаковкаЗаказ);
				
	            Если ПросмотрУпаковкаЗаказЧислитель / ПросмотрУпаковкаЗаказЗнаменатель > ИндексУпаковкаЗаказЧислитель / ИндексУпаковкаЗаказЗнаменатель Тогда
	                СтаршийЭлемент = МассивКратность[Просмотр];
	                МладшийЭлемент = МассивКратность[Индекс];
	                МассивКратность[Просмотр] = МладшийЭлемент;
	                МассивКратность[Индекс] = СтаршийЭлемент;
	            КонецЕсли;
	        КонецЦикла;
		КонецЦикла;
		
		КоличествоПодобраноВсего = ТекущиеДанные.КоличествоПодобрано;
		КоличествоПодобраноОсталось = ТекущиеДанные.КоличествоПодобрано;
		КоличествоПодобрано = 0;
		
		Для Каждого СтрокаМассива Из МассивКратность Цикл 
			УпаковкаЗаказЧислитель = ПолучитьЧислительУпаковки(СтрокаМассива.УпаковкаЗаказ);
			УпаковкаЗаказЗнаменатель = ПолучитьЗнаменательУпаковки(СтрокаМассива.УпаковкаЗаказ);
			//Если СтрокаМассива.КоличествоУпаковокВЗаказе > 0 И УпаковкаЗаказЧислитель > 1 Тогда
			Если СтрокаМассива.КоличествоУпаковокВЗаказе > 0 Тогда
			//Отработаем кратность по Упаковкам
				КоличествоДляПодбора = Цел(КоличествоПодобраноОсталось / УпаковкаЗаказЧислитель * УпаковкаЗаказЗнаменатель) * УпаковкаЗаказЧислитель / УпаковкаЗаказЗнаменатель;
				КоличествоПодобрано = КоличествоПодобрано + ?(СтрокаМассива.КоличествоВЗаказе > КоличествоДляПодбора, КоличествоДляПодбора, СтрокаМассива.КоличествоВЗаказе);
				КоличествоПодобраноОсталось = КоличествоПодобраноВсего - КоличествоПодобрано;
				Если КоличествоПодобраноОсталось <= 0 Тогда
					Прервать;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		ТекущиеДанные.КоличествоПодобрано = КоличествоПодобрано;
		
////Пересчет подбора по всем строкам		
		//ТекущаяСтрокаПотребности = ТаблицаПотребности.НайтиПоИдентификатору(ТекущиеДанные.ПолучитьИдентификатор());
		
		//Для Каждого СтрокаПотребности Из ТаблицаПотребности.ПолучитьЭлементы() Цикл
		//	Для Каждого ТекущаяСтрока Из СтрокаПотребности.ПолучитьЭлементы() Цикл
		////ТаблицаПотребности.ПолучитьЭлементы()[0].ПолучитьЭлементы();
		////ТаблицаПотребности.ПолучитьЭлементы()[1].ПолучитьЭлементы()[2].ПолучитьИдентификатор();
		//	КонецЦикла;
		//КонецЦикла;
		
		ИтогоКоличествоПодобрано = 0;
		ИтогоКоличествоДоступно = 0;
		Для Каждого СтрокаПотребности Из ТаблицаПотребности.ПолучитьЭлементы() Цикл
			Для Каждого ТекущаяСтрока Из СтрокаПотребности.ПолучитьЭлементы() Цикл
				Если ТекущаяСтрока.Номенклатура <> ТекущиеДанные.Номенклатура Тогда
					Продолжить;
				КонецЕсли; 
				ИтогоКоличествоПодобрано = ИтогоКоличествоПодобрано + ТекущаяСтрока.КоличествоПодобрано;
				ИтогоКоличествоДоступно = ИтогоКоличествоДоступно + ТекущаяСтрока.КоличествоДоступно;
			КонецЦикла; 
		КонецЦикла;
		
		КоличествоВЗаказеИлиДоступно = Мин(ТекущиеДанные.КоличествоВЗаказе, ИтогоКоличествоДоступно);
		//КоличествоВЗаказеИлиДоступно = Мин(ТекущиеДанные.КоличествоВЗаказе, ТекущиеДанные.КоличествоДоступно);
		
		Если ИтогоКоличествоПодобрано > КоличествоВЗаказеИлиДоступно Тогда
			
			КоличествоРаспределить = КоличествоВЗаказеИлиДоступно - ТекущиеДанные.КоличествоПодобрано;
			
			Для Каждого СтрокаПотребности Из ТаблицаПотребности.ПолучитьЭлементы() Цикл
				Для Каждого ТекущаяСтрока Из СтрокаПотребности.ПолучитьЭлементы() Цикл
					Если ТекущаяСтрока.ПолучитьИдентификатор() = ТекущиеДанные.ПолучитьИдентификатор()
						Или ТекущаяСтрока.Номенклатура <> ТекущиеДанные.Номенклатура Тогда
						Продолжить;
					КонецЕсли;
							
					КоличествоРаспределитьВСтроке = Мин(КоличествоРаспределить, ТекущаяСтрока.КоличествоДоступно);
							
					МассивКратность = ВыборкаНазначениеКратность.НайтиСтроки(Новый Структура("ОЕМПотребность, Номенклатура", ТекущаяСтрока.ОЕМПотребность, ТекущаяСтрока.Номенклатура));
				    Для Просмотр = 0 По МассивКратность.Количество()-1 Цикл

						ПросмотрУпаковкаЗаказЧислитель = ПолучитьЧислительУпаковки(МассивКратность[Просмотр].УпаковкаЗаказ);
						ПросмотрУпаковкаЗаказЗнаменатель = ПолучитьЗнаменательУпаковки(МассивКратность[Просмотр].УпаковкаЗаказ);
						
				        Для Индекс = 0 По МассивКратность.Количество()-1 Цикл
				            Если Индекс = МассивКратность.Количество()-1 Тогда
				                Прервать;
							КонецЕсли;
							
							ИндексУпаковкаЗаказЧислитель = ПолучитьЧислительУпаковки(МассивКратность[Индекс].УпаковкаЗаказ);
							ИндексУпаковкаЗаказЗнаменатель = ПолучитьЗнаменательУпаковки(МассивКратность[Индекс].УпаковкаЗаказ);
							
				            Если ПросмотрУпаковкаЗаказЧислитель / ПросмотрУпаковкаЗаказЗнаменатель > ИндексУпаковкаЗаказЧислитель / ИндексУпаковкаЗаказЗнаменатель Тогда
				                СтаршийЭлемент = МассивКратность[Просмотр];
				                МладшийЭлемент = МассивКратность[Индекс];
				                МассивКратность[Просмотр] = МладшийЭлемент;
				                МассивКратность[Индекс] = СтаршийЭлемент;
				            КонецЕсли;
				        КонецЦикла;
					КонецЦикла;
					
					КоличествоПодобраноВсего = КоличествоРаспределитьВСтроке;
					КоличествоПодобраноОсталось = КоличествоРаспределитьВСтроке;
					КоличествоПодобрано = 0;
					
					Для Каждого СтрокаМассива Из МассивКратность Цикл 
						УпаковкаЗаказЧислитель = ПолучитьЧислительУпаковки(СтрокаМассива.УпаковкаЗаказ);
						УпаковкаЗаказЗнаменатель = ПолучитьЗнаменательУпаковки(СтрокаМассива.УпаковкаЗаказ);
						Если СтрокаМассива.КоличествоУпаковокВЗаказе > 0 Тогда
						//Отработаем кратность по Упаковкам
							КоличествоДляПодбора = Цел(КоличествоПодобраноОсталось / УпаковкаЗаказЧислитель * УпаковкаЗаказЗнаменатель) * УпаковкаЗаказЧислитель / УпаковкаЗаказЗнаменатель;
							КоличествоПодобрано = КоличествоПодобрано + ?(СтрокаМассива.КоличествоВЗаказе > КоличествоДляПодбора, КоличествоДляПодбора, СтрокаМассива.КоличествоВЗаказе);
							КоличествоПодобраноОсталось = КоличествоПодобраноВсего - КоличествоПодобрано;
							Если КоличествоПодобраноОсталось < 0 Тогда
								КоличествоПодобрано = 0;
							КонецЕсли;
						КонецЕсли;
					КонецЦикла;
					ТекущаяСтрока.КоличествоПодобрано = КоличествоПодобрано;
					КоличествоРаспределить = КоличествоРаспределить - КоличествоПодобрано;
				КонецЦикла; 
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
//}}20201223-20201225 ГлазуновДВ	
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаПотребностиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле = Элементы.ТаблицаПотребностиПредставление Тогда
		ТекущаяСтрока = ТаблицаПотребности.НайтиПоИдентификатору(ВыбраннаяСтрока);
		Если ЗначениеЗаполнено(ТекущаяСтрока.Номенклатура) Тогда
			ПоказатьЗначение(, ТекущаяСтрока.Номенклатура);
			СтандартнаяОбработка = Ложь;
		КонецЕсли;
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьВсе(Команда)
	
//{{20201228 ГлазуновДВ Сначала всё удалим
	Для Каждого ТекущееНазначение Из ТаблицаПотребности.ПолучитьЭлементы() Цикл
		Для Каждого ТекущаяНоменклатура Из ТекущееНазначение.ПолучитьЭлементы() Цикл
			ТекущаяНоменклатура.КоличествоПодобрано = 0;
		КонецЦикла; 
	КонецЦикла;
//}}20201228 ГлазуновДВ	
	Для каждого ТекущееНазначение Из ТаблицаПотребности.ПолучитьЭлементы() Цикл
		Для каждого ТекущаяСтрока Из ТекущееНазначение.ПолучитьЭлементы() Цикл
		//{{20201228 ГлазуновДВ уже распределено
			Если ТекущаяСтрока.КоличествоПодобрано > 0 Тогда
				Продолжить;
			КонецЕсли;
		//}}20201228 ГлазуновДВ	
			ТекущаяСтрока.КоличествоПодобрано = ?(ТекущаяСтрока.КоличествоДоступно > ТекущаяСтрока.КоличествоВЗаказе,ТекущаяСтрока.КоличествоВЗаказе,ТекущаяСтрока.КоличествоДоступно);
		//{{20201223 ГлазуновДВ
			Если ТолькоПоЗаказу Тогда
				
				МассивКратность = ВыборкаНазначениеКратность.НайтиСтроки(Новый Структура("ОЕМПотребность, Номенклатура", ТекущаяСтрока.ОЕМПотребность, ТекущаяСтрока.Номенклатура));
			    Для Просмотр = 0 По МассивКратность.Количество()-1 Цикл

					ПросмотрУпаковкаЗаказЧислитель = ПолучитьЧислительУпаковки(МассивКратность[Просмотр].УпаковкаЗаказ);
					ПросмотрУпаковкаЗаказЗнаменатель = ПолучитьЗнаменательУпаковки(МассивКратность[Просмотр].УпаковкаЗаказ);
					
			        Для Индекс = 0 По МассивКратность.Количество()-1 Цикл
			            Если Индекс = МассивКратность.Количество()-1 Тогда
			                Прервать;
						КонецЕсли;
						
						ИндексУпаковкаЗаказЧислитель = ПолучитьЧислительУпаковки(МассивКратность[Индекс].УпаковкаЗаказ);
						ИндексУпаковкаЗаказЗнаменатель = ПолучитьЗнаменательУпаковки(МассивКратность[Индекс].УпаковкаЗаказ);
						
			            Если ПросмотрУпаковкаЗаказЧислитель / ПросмотрУпаковкаЗаказЗнаменатель > ИндексУпаковкаЗаказЧислитель / ИндексУпаковкаЗаказЗнаменатель Тогда
			                СтаршийЭлемент = МассивКратность[Просмотр];
			                МладшийЭлемент = МассивКратность[Индекс];
			                МассивКратность[Просмотр] = МладшийЭлемент;
			                МассивКратность[Индекс] = СтаршийЭлемент;
			            КонецЕсли;
			        КонецЦикла;
				КонецЦикла;
				
				КоличествоПодобраноВсего = ТекущаяСтрока.КоличествоПодобрано;
				КоличествоПодобраноОсталось = ТекущаяСтрока.КоличествоПодобрано;
				КоличествоПодобрано = 0;
				
				Для Каждого СтрокаМассива Из МассивКратность Цикл 
					УпаковкаЗаказЧислитель = ПолучитьЧислительУпаковки(СтрокаМассива.УпаковкаЗаказ);
					УпаковкаЗаказЗнаменатель = ПолучитьЗнаменательУпаковки(СтрокаМассива.УпаковкаЗаказ);
					//Если СтрокаМассива.КоличествоУпаковокВЗаказе > 0 И УпаковкаЗаказЧислитель > 1 Тогда
					Если СтрокаМассива.КоличествоУпаковокВЗаказе > 0 Тогда
					//Отработаем кратность по Упаковкам
						КоличествоДляПодбора = Цел(КоличествоПодобраноОсталось / УпаковкаЗаказЧислитель * УпаковкаЗаказЗнаменатель) * УпаковкаЗаказЧислитель / УпаковкаЗаказЗнаменатель;
						КоличествоПодобрано = КоличествоПодобрано + ?(СтрокаМассива.КоличествоВЗаказе > КоличествоДляПодбора, КоличествоДляПодбора, СтрокаМассива.КоличествоВЗаказе);
						КоличествоПодобраноОсталось = КоличествоПодобраноВсего - КоличествоПодобрано;
						Если КоличествоПодобраноОсталось <= 0 Тогда
							Прервать;
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
				ТекущаяСтрока.КоличествоПодобрано = КоличествоПодобрано;
				
				
				ИтогоКоличествоПодобрано = 0;
				ИтогоКоличествоДоступно = 0;
				Для Каждого СтрокаПотребности Из ТаблицаПотребности.ПолучитьЭлементы() Цикл
					Для Каждого ТекущаяСтрока1 Из СтрокаПотребности.ПолучитьЭлементы() Цикл
						Если ТекущаяСтрока1.Номенклатура <> ТекущаяСтрока.Номенклатура Тогда
							Продолжить;
						КонецЕсли; 
						ИтогоКоличествоПодобрано = ИтогоКоличествоПодобрано + ТекущаяСтрока1.КоличествоПодобрано;
						ИтогоКоличествоДоступно = ИтогоКоличествоДоступно + ТекущаяСтрока1.КоличествоДоступно;
					КонецЦикла; 
				КонецЦикла;
				
				КоличествоВЗаказеИлиДоступно = Мин(ТекущаяСтрока.КоличествоВЗаказе, ИтогоКоличествоДоступно);
				
				Если ИтогоКоличествоПодобрано > КоличествоВЗаказеИлиДоступно Тогда
					ТекущаяСтрока.КоличествоПодобрано = 0;
					Продолжить;					
				Иначе	
					КоличествоРаспределить = КоличествоВЗаказеИлиДоступно - ТекущаяСтрока.КоличествоПодобрано;
					
					Для Каждого СтрокаПотребности Из ТаблицаПотребности.ПолучитьЭлементы() Цикл
						Для Каждого ТекущаяСтрока1 Из СтрокаПотребности.ПолучитьЭлементы() Цикл
							Если ТекущаяСтрока1.ПолучитьИдентификатор() = ТекущаяСтрока.ПолучитьИдентификатор()
								Или ТекущаяСтрока1.Номенклатура <> ТекущаяСтрока.Номенклатура Тогда
								Продолжить;
							КонецЕсли;
							МассивКратность = ВыборкаНазначениеКратность.НайтиСтроки(Новый Структура("ОЕМПотребность, Номенклатура", ТекущаяСтрока1.ОЕМПотребность, ТекущаяСтрока1.Номенклатура));
						    Для Просмотр = 0 По МассивКратность.Количество()-1 Цикл

								ПросмотрУпаковкаЗаказЧислитель = ПолучитьЧислительУпаковки(МассивКратность[Просмотр].УпаковкаЗаказ);
								ПросмотрУпаковкаЗаказЗнаменатель = ПолучитьЗнаменательУпаковки(МассивКратность[Просмотр].УпаковкаЗаказ);
								
						        Для Индекс = 0 По МассивКратность.Количество()-1 Цикл
						            Если Индекс = МассивКратность.Количество()-1 Тогда
						                Прервать;
									КонецЕсли;
									
									ИндексУпаковкаЗаказЧислитель = ПолучитьЧислительУпаковки(МассивКратность[Индекс].УпаковкаЗаказ);
									ИндексУпаковкаЗаказЗнаменатель = ПолучитьЗнаменательУпаковки(МассивКратность[Индекс].УпаковкаЗаказ);
									
						            Если ПросмотрУпаковкаЗаказЧислитель / ПросмотрУпаковкаЗаказЗнаменатель > ИндексУпаковкаЗаказЧислитель / ИндексУпаковкаЗаказЗнаменатель Тогда
						                СтаршийЭлемент = МассивКратность[Просмотр];
						                МладшийЭлемент = МассивКратность[Индекс];
						                МассивКратность[Просмотр] = МладшийЭлемент;
						                МассивКратность[Индекс] = СтаршийЭлемент;
						            КонецЕсли;
						        КонецЦикла;
							КонецЦикла;
							
							КоличествоПодобраноВсего = КоличествоРаспределить;
							КоличествоПодобраноОсталось = КоличествоРаспределить;
							КоличествоПодобрано = 0;
							
							Для Каждого СтрокаМассива Из МассивКратность Цикл 
								УпаковкаЗаказЧислитель = ПолучитьЧислительУпаковки(СтрокаМассива.УпаковкаЗаказ);
								УпаковкаЗаказЗнаменатель = ПолучитьЗнаменательУпаковки(СтрокаМассива.УпаковкаЗаказ);
								Если СтрокаМассива.КоличествоУпаковокВЗаказе > 0 Тогда
								//Отработаем кратность по Упаковкам
									КоличествоДляПодбора = Цел(КоличествоПодобраноОсталось / УпаковкаЗаказЧислитель * УпаковкаЗаказЗнаменатель) * УпаковкаЗаказЧислитель / УпаковкаЗаказЗнаменатель;
									КоличествоПодобрано = КоличествоПодобрано + ?(СтрокаМассива.КоличествоВЗаказе > КоличествоДляПодбора, КоличествоДляПодбора, СтрокаМассива.КоличествоВЗаказе);
									КоличествоПодобраноОсталось = КоличествоПодобраноВсего - КоличествоПодобрано;
									Если КоличествоПодобраноОсталось < 0 Тогда
										КоличествоПодобрано = 0;
									КонецЕсли;
								КонецЕсли;
							КонецЦикла;
							ТекущаяСтрока1.КоличествоПодобрано = КоличествоПодобрано;
							КоличествоРаспределить = КоличествоРаспределить - КоличествоПодобрано;
						КонецЦикла; 
					КонецЦикла;
				КонецЕсли;
			КонецЕсли;
		//}}20201223 ГлазуновДВ	
		КонецЦикла; 
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьВсе(Команда)
	
	Для каждого ТекущееНазначение Из ТаблицаПотребности.ПолучитьЭлементы() Цикл
		Для каждого ТекущаяНоменклатура Из ТекущееНазначение.ПолучитьЭлементы() Цикл
			ТекущаяНоменклатура.КоличествоПодобрано = 0;
		КонецЦикла; 
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция СформироватьРезультат(ВладелецФормыУникальныйИдентификатор)
	
	// Перенесем в таблицу для передачи в форму заказа
	Товары = Обработки.ГИГ_ПодборТоваровВДокументПродажи.Создать().Корзина.Выгрузить();
	Товары.Колонки.Добавить("ГИГ_Назначение");
	Товары.Колонки.Добавить("ГИГ_СхемаОбеспечения");
	Товары.Колонки.Добавить("ГИГ_СрокПоставки");
	
	Для каждого ТекущееНазначение Из ТаблицаПотребности.ПолучитьЭлементы() Цикл
		Для каждого ТекущаяНоменклатура Из ТекущееНазначение.ПолучитьЭлементы() Цикл
			
			Если ТекущаяНоменклатура.КоличествоПодобрано = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			НоваяСтрока = Товары.Добавить();
			НоваяСтрока.Номенклатура       = ТекущаяНоменклатура.Номенклатура;
			НоваяСтрока.ГИГ_Назначение     = ТекущаяНоменклатура.ОЕМПотребность;
			НоваяСтрока.Упаковка           = ТекущаяНоменклатура.Упаковка;
			НоваяСтрока.ВариантОбеспечения = Перечисления.ВариантыОбеспечения.Обособленно;
			НоваяСтрока.КоличествоУпаковок = ТекущаяНоменклатура.КоличествоПодобрано;
			НоваяСтрока.Склад              = Склад;
			
		КонецЦикла; 
	КонецЦикла;
	
	// Заполним цены
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ПересчитатьСумму");
	СтруктураДействий.Вставить("ПересчитатьСуммуРучнойСкидки");
	
	ПараметрыЗаполненияЦен = Новый Структура;
	ПараметрыЗаполненияЦен.Вставить("Дата",              Дата);
	ПараметрыЗаполненияЦен.Вставить("Валюта",            Валюта);
	ПараметрыЗаполненияЦен.Вставить("Соглашение",        Соглашение);
	ПараметрыЗаполненияЦен.Вставить("Организация",       Организация);
	ПараметрыЗаполненияЦен.Вставить("РасчитыватьНаборы", Истина);
	ПараметрыЗаполненияЦен.Вставить("ПоляЗаполнения",    "Цена, СтавкаНДС, ВидЦены, СрокПоставки");
	
	//ЦеныРассчитаны = ПродажиСервер.ЗаполнитьЦены(
	//	Товары,
	//	Неопределено,
	//	ПараметрыЗаполненияЦен, // Параметры заполнения
	//	СтруктураДействий);
	
	Результат = Новый Структура();
	Результат.Вставить("АдресТоваровВХранилище", ПоместитьВоВременноеХранилище(Товары, ВладелецФормыУникальныйИдентификатор));
	//++Гольм А.А. (Гигабайт) 20.11.2018 12:32:19
	Результат.Вставить("МаксимальнаяДатаОтгрузки", МаксимальнаяДатаОтгрузки);
	//--Гольм А.А. (Гигабайт) 20.11.2018 12:32:27
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ОК(Команда)
	
	ОповеститьОВыборе(СформироватьРезультат(ЭтаФорма.ВладелецФормы.УникальныйИдентификатор));
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Закрыть(Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПоказатьОбщуюПотребность = Ложь;
	ОбновитьТаблицуПотребностей(ПоказатьОбщуюПотребность,Истина);
	
	//Если ТаблицаПотребности.ПолучитьЭлементы().Количество() = 0 Тогда
	//	Предупреждение("Нет доступной к отгрузке ОЕМ потребности!", 60);
	//	Отказ = Истина;
	//	Возврат;
	//КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьПотребностьПриИзменении(Элемент)
	
	Если ПоказатьОбщуюПотребность Тогда
		ТолькоПоЗаказу = Ложь;
	КонецЕсли;
	
	ОбновитьТаблицуПотребностей(ПоказатьОбщуюПотребность,Ложь);
	
	Для каждого ТекущееНазначение Из ТаблицаПотребности.ПолучитьЭлементы() Цикл
		Элементы.ТаблицаПотребности.Развернуть(ТекущееНазначение.ПолучитьИдентификатор());
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ТолькоПоЗаказуПриИзменении(Элемент)
	
	Если ТолькоПоЗаказу Тогда
		ОбновитьТаблицуПотребностей(ПоказатьОбщуюПотребность,Истина);
	Иначе 
		ОбновитьТаблицуПотребностей(ПоказатьОбщуюПотребность,Ложь);
	КонецЕсли;
	
	Для каждого ТекущееНазначение Из ТаблицаПотребности.ПолучитьЭлементы() Цикл
		Элементы.ТаблицаПотребности.Развернуть(ТекущееНазначение.ПолучитьИдентификатор());
	КонецЦикла;
	
КонецПроцедуры

//{{20201223 ГлазуновДВ	
&НаСервере
Функция ПолучитьЧислительУпаковки(Упаковка)
	
	Возврат ?(Упаковка.Числитель = 0, 1, Упаковка.Числитель);	
	
КонецФункции // ПолучитьЧислительУпаковки()

&НаСервере
Функция ПолучитьЗнаменательУпаковки(Упаковка)
	
	Возврат ?(Упаковка.Знаменатель = 0, 1, Упаковка.Знаменатель);	
	
КонецФункции // ПолучитьЗнаменательУпаковки()
//}}20201223 ГлазуновДВ	
