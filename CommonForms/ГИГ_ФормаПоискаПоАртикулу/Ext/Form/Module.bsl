
&НаКлиенте
Процедура НайтиВСписке(Команда)
	УстановитьОформление();
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ТекущаяДатаСеанса = ТекущаяДатаСеанса();
	
	ДокументСсылка = Параметры.Документ;
	Параметры.Свойство("Организация",Организация);
	
	Параметры.Свойство("Соглашение",Соглашение);
	Параметры.Свойство("Валюта",Валюта);
	Параметры.Свойство("Заголовок",Заголовок);
	Параметры.Свойство("Дата",Дата);
	Параметры.Свойство("ВидНоменклатуры",ВидНоменклатуры);
	Параметры.Свойство("Артикул",Артикул);
	Параметры.Свойство("ВидЦены",ВидЦены);
	//Параметры.Свойство("ВидыНоменклатуры",ВидыНоменклатуры);
	Параметры.Свойство("ДокументСсылка",ДокументСсылка);
	
	ПодборТоваровКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокНоменклатура, "ЭтоГруппа", Ложь);
	ПодборТоваровКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокНоменклатура, "ДатаЗапроса", ТекущаяДата());
	
	УстановитьОформление();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	// если заполнен параметр Артикул - сразу устанавливаем отбор списка..
	УстановитьОформление();
КонецПроцедуры

&НаСервере
Процедура УстановитьОформление()
	СписокНоменклатура.Отбор.Элементы.Очистить();
	Если ЗначениеЗаполнено(Производитель) Тогда 
		ОтборЭлемента = СписокНоменклатура.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Производитель");
		ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		ОтборЭлемента.ПравоеЗначение = Производитель;
	КонецЕсли;	
	Если ЗначениеЗаполнено(Артикул) Тогда 
		ОтборЭлемента = СписокНоменклатура.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Артикул");
		ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Содержит;
		ОтборЭлемента.ПравоеЗначение = Артикул;
	КонецЕсли;	
	Элементы.СписокНоменклатура.Обновить();
КонецПроцедуры

&НаКлиенте
Процедура АртикулПриИзменении(Элемент)
	УстановитьОформление();
КонецПроцедуры

&НаКлиенте
Процедура ПроизводительПриИзменении(Элемент)
	УстановитьОформление();
КонецПроцедуры

//************************************************************************************************

&НаКлиенте
Процедура ОткрытьФормуВыбораВидаНоменклатуры()  
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыборВидаНоменклатурыЗавершение", ЭтотОбъект);
	ПараметрыФормы = Новый Структура;
	ОткрытьФорму("ОбщаяФорма.ГИГ_ФормаВыбораВидаНоменклатуры", ПараметрыФормы, ЭтаФорма, УникальныйИдентификатор,,,ОписаниеОповещения,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры	

&НаСервере
Процедура ПрочитатьВидНоменклатуры(ВыбраннаяПозиция)
	Основание = ВыбраннаяПозиция.ПолучитьОбъект();
	ВидНоменклатурыДляСоздания = Основание.ВидНоменклатуры;
КонецПроцедуры	


&НаКлиенте
Процедура СоздатьНоменклатуру(Команда)
	ВыбраннаяПозиция = Элементы.СписокНоменклатура.ТекущиеДанные;
	Если ТипЗнч(ВыбраннаяПозиция.ссылка) = Тип("СправочникСсылка.ГИГ_НоменклатураПроизводителей") Тогда 
		ПрочитатьВидНоменклатуры(ВыбраннаяПозиция.ссылка);		
		Если НЕ ЗначениеЗаполнено(ВидНоменклатурыДляСоздания) Тогда 
			ВидНоменклатурыДляСоздания = ЗаполнитьВидНоменклатурыДляСоздания();
		Иначе 
			СоздатьЭлементСправочника(ВыбраннаяПозиция.Ссылка);
		КонецЕсли;
	Иначе	
		Сообщить("Укажите позицию, которая должна являться основанием для создания Номенклатуры");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СоздатьЭлементСправочника(ВыбраннаяПозиция)
	Если ЗначениеЗаполнено(ВидНоменклатурыДляСоздания) Тогда
		Создана = ГИГ_МодульВызовСервера.СозданиеНоменклатурыНаСервере(ВыбраннаяПозиция,ВидНоменклатурыДляСоздания);
		Если ЗначениеЗаполнено(Создана) Тогда 
			ЭтаФорма.Закрыть(Создана);
		Иначе
			СтруктураПараметрФормы = Новый Структура;
			ОткрытьФорму("Справочник.Номенклатура.ФормаОбъекта",Новый Структура("Основание",СтруктураПараметрФормы),ЭтаФорма);
			Сообщить("При создании номенклатуры возникли ошибки. Автоматическое добавление элемента отменено.");
		КонецЕсли;
	КонецЕсли;	
	УстановитьОформление();
КонецПроцедуры  

&НаКлиенте
Функция  ЗаполнитьВидНоменклатурыДляСоздания()
	 ОткрытьФормуВыбораВидаНоменклатуры();
	 Возврат ВидНоменклатурыДляСоздания;
КонецФункции	

&НаКлиенте
Процедура ВыборВидаНоменклатурыЗавершение(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	ВидНоменклатурыДляСоздания = РезультатЗакрытия;
	СоздатьЭлементСправочника(Элементы.СписокНоменклатура.ТекущиеДанные.Ссылка);
КонецПроцедуры

&НаКлиенте
Процедура АртикулОчистка(Элемент, СтандартнаяОбработка)
	УстановитьОформление();
КонецПроцедуры

&НаКлиенте
Процедура СписокНоменклатураВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	// при двойном щелчке по позиции, где есть номенклатура переход в форму поистка по этой номенклатуре	
	// иначе, если номенклатуры нет - вопрос - создать номенклатуру или нет....
	
	СтандартнаяОбработка = Ложь;
	ТекущаяНоменклатураСтроки = Элемент.ТекущиеДанные.Номенклатура;
	Если ЗначениеЗаполнено(ТекущаяНоменклатураСтроки) Тогда 
		ЭтаФорма.Закрыть(ТекущаяНоменклатураСтроки);
	Иначе
		ТекстВопроса = НСтр("ru = 'Создать номенклатуру на основании выбранной позиции?'");
		
		ПоказатьВопрос(Новый ОписаниеОповещения("СоздатьИЗаписатьНоменклатуру", ЭтотОбъект,Элемент.ТекущиеДанные.Ссылка),
		ТекстВопроса, РежимДиалогаВопрос.ОКОтмена,,,НСтр("ru = 'Создание и запись номенклатуры'"));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьИЗаписатьНоменклатуру(РезультатВопроса, ТекущаяНоменклатураСтроки) Экспорт 
	
	Если РезультатВопроса = КодВозвратаДиалога.ОК Тогда
		ПрочитатьВидНоменклатуры(ТекущаяНоменклатураСтроки);		
		Если НЕ ЗначениеЗаполнено(ВидНоменклатурыДляСоздания) Тогда 
			ВидНоменклатурыДляСоздания = ЗаполнитьВидНоменклатурыДляСоздания();
		Иначе 
			СоздатьЭлементСправочника(ТекущаяНоменклатураСтроки);
		КонецЕсли;
	КонецЕсли;	
	
КонецПроцедуры
