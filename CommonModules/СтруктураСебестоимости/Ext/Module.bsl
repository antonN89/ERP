// + [Rineco], [Киселев А.Н.] [11.10.2021] 
// Задача: [№ 19719], [#Дерево себестоимости]
Процедура РИНЭКО_ПостроитьДеревоСебестоимостиВФоне(Параметры, АдресХранилища) Экспорт
	
	РИНЭКО_ПостроитьДеревоСебестоимости(Параметры.ПараметрыДерева, Параметры.ПараметрыУзла);
	
	Результат = Новый Структура("ДеревоСебестоимости, Успех");
	Результат.ДеревоСебестоимости	= Параметры.ПараметрыДерева.Результат;
	Результат.Успех					= Истина;
	
	ПоместитьВоВременноеХранилище(Результат, АдресХранилища);
	
КонецПроцедуры

// + [Rineco], [Киселев А.Н.] [11.10.2021] 
// Задача: [№ 19719], [#Дерево себестоимости]
Процедура РИНЭКО_ПостроитьДеревоСебестоимости(ПараметрыДерева, ПараметрыУзла = Неопределено) Экспорт
	
	// СтандартныеПодсистемы.ЗамерПроизводительности
	Замер = ОценкаПроизводительности.НачатьЗамерДлительнойОперации("ОбщийМодуль.СтруктураСебестоимости.ПостроитьДеревоСебестоимости");
	ПараметрыДерева.Вставить("КоличествоСтрок", 0);
	// Конец СтандартныеПодсистемы.ЗамерПроизводительности
	
	Если ПараметрыУзла = Неопределено Тогда
		ПараметрыУзла = СтруктураСебестоимости.ПараметрыУзлаДереваСебестоимости();
	КонецЕсли;
	
	Если ПараметрыДерева.Результат = Неопределено Тогда
		ПустоеДеревоСебестоимости(ПараметрыДерева, ПараметрыУзла);
	КонецЕсли;
	
	РИНЭКО_ЗаполнитьДеревоСебестоимости(ПараметрыДерева, ПараметрыУзла);
	
	// СтандартныеПодсистемы.ЗамерПроизводительности
	ОценкаПроизводительности.ЗакончитьЗамерДлительнойОперации(Замер, ПараметрыДерева.КоличествоСтрок / 1000);
	// Конец СтандартныеПодсистемы.ЗамерПроизводительности
	
КонецПроцедуры

// + [Rineco], [Киселев А.Н.] [11.10.2021] 
// Задача: [№ 19719], [#Дерево себестоимости]
Процедура РИНЭКО_ЗаполнитьДеревоСебестоимости(ПараметрыДерева, ПараметрыУзла)
	Запрос = ЗапросВыпущеннаяПродукция(ПараметрыУзла, Ложь);
	ВыпущеннаяПродукция = Запрос.Выполнить().Выгрузить();
	
	Если ПараметрыДерева.ТипРезультата = "ДеревоЗначений" Тогда
		Результат = ПараметрыДерева.Результат.Строки;
		// + [Rineco], [Киселев А.Н.] [11.10.2021] 
		// Задача: [№ 19719], [#Дерево себестоимости]
		ПараметрыДерева.Результат.Колонки.Добавить("Артикул",ОбщегоНазначения.ОписаниеТипаСтрока(50));
		// - [Rineco], [Киселев А.Н.] [11.10.2021]
	ИначеЕсли ПараметрыДерева.ТипРезультата = "ТаблицаЗначений" Тогда
		Результат = ПараметрыДерева.Результат;
	Иначе
		Результат = Новый ТаблицаЗначений;
		РИНЭКО_ИнициализироватьПоляДереваСебестоимости(Результат);
	КонецЕсли;
	
	// СтандартныеПодсистемы.ЗамерПроизводительности
	ПараметрыДерева.КоличествоСтрок = ПараметрыДерева.КоличествоСтрок + ВыпущеннаяПродукция.Количество();
	// Конец СтандартныеПодсистемы.ЗамерПроизводительности
	
	Для Каждого ТекПартия Из ВыпущеннаяПродукция Цикл
		
		Если ПараметрыДерева.ТипРезультата = "ДеревоЗначений"
			ИЛИ ПараметрыДерева.ДобавлятьПолуфабрикатыВРезультат
			ИЛИ Не ТекПартия.ТребуетсяРазузлование Тогда
			СтрокаПартия = Результат.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаПартия, ТекПартия);
			
			СтрокаПартия.Идентификатор	= Новый УникальныйИдентификатор();
			СтрокаПартия.ВидСтроки		= Перечисления.ВидыСтрокДереваСебестоимости.ПартияПродукции;
			
			СтрокаПартия.АналитикаУчетаВыходноеИзделие			= ТекПартия.АналитикаУчетаПродукции;
			СтрокаПартия.АналитикаУчетаПартийВыходноеИзделие	= ТекПартия.АналитикаУчетаПартийПродукции;
			СтрокаПартия.ПартияВыходноеИзделие					= ТекПартия.ПартияПродукции;
			
			СтрокаПартия.Номенклатура			= ТекПартия.Продукция;
			
			// + [Rineco], [Киселев А.Н.] [11.10.2021] 
			// Задача: [№ 19719], [#Дерево себестоимости]
			СтрокаПартия.Артикул				= ?(ОбщегоНазначенияБЗККлиентСервер.ЗначениеСвойства(ТекПартия.Продукция,"Артикул") = Неопределено,"",ТекПартия.Продукция.Артикул);
			// - [Rineco], [Киселев А.Н.] [11.10.2021]

			СтрокаПартия.Характеристика			= ТекПартия.ХарактеристикаПродукции;
			СтрокаПартия.Серия					= ТекПартия.СерияПродукции;
			СтрокаПартия.Назначение				= ТекПартия.НазначениеПродукции;
			СтрокаПартия.Партия					= ТекПартия.ПартияПродукции;
			СтрокаПартия.АналитикаУчетаПартий	= ТекПартия.АналитикаУчетаПартийПродукции;
			СтрокаПартия.ЕдиницаИзмерения		= ТекПартия.ЕдиницаИзмеренияПродукция;
			
			СтрокаПартия.Количество	= ТекПартия.КоличествоПродукция;
			СтрокаПартия.Сумма		= ТекПартия.СуммаПродукция;
			СтрокаПартия.СуммаЗабалансовая = ТекПартия.СуммаПродукцияЗабалансовая;
		КонецЕсли;
		
		Если ТекПартия.ТребуетсяРазузлование
			И ПараметрыДерева.ТипРезультата = "ДеревоЗначений"
			И ПараметрыДерева.ДинамическоеСчитывание Тогда
			
			СтрокаПартия.Строки.Добавить();
			
		ИначеЕсли ТекПартия.ТребуетсяРазузлование Тогда
			
			ПараметрыУзлаПартии = СтруктураСебестоимости.ПараметрыУзлаДереваСебестоимости();
			
			Отборы = ПараметрыУзлаПартии.Отборы;
			Отборы.ДанныеПоСебестоимости = ПараметрыУзла.Отборы.ДанныеПоСебестоимости;
			Отборы.Продукция.Добавить(ТекПартия.Продукция);
			Отборы.ХарактеристикиПродукции.Добавить(ТекПартия.ХарактеристикаПродукции);
			Отборы.СерииПродукции.Добавить(ТекПартия.СерияПродукции);
			Отборы.ПартииПродукции.Добавить(ТекПартия.ПартияПродукции);
			Отборы.АналитикиУчетаПартийПродукции.Добавить(ТекПартия.АналитикаУчетаПартийПродукции);
			Отборы.Числитель = ТекПартия.Числитель;
			
			ОписаниеПродукции = Новый Структура("АналитикаУчетаПродукции, ПартияПродукции, АналитикаУчетаПартийПродукции");
			ЗаполнитьЗначенияСвойств(ОписаниеПродукции, ТекПартия);
			ОписаниеПродукции.Вставить("Уровень", 0);
			
			Если ПараметрыДерева.ТипРезультата = "ДеревоЗначений" Тогда
				ТаблицаРезультата = СтрокаПартия;
			Иначе
				ТаблицаРезультата = Результат;
			КонецЕсли;
			
			РИНЭКО_РазузловатьУзелДереваСебестоимости(ПараметрыДерева, ПараметрыУзлаПартии, ТаблицаРезультата, ОписаниеПродукции);
			
		КонецЕсли;
	КонецЦикла;
	
	Если ПараметрыДерева.ТипРезультата = "МенеджерВременныхТаблиц" Тогда
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = ПараметрыДерева.Результат;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	*
		|ПОМЕСТИТЬ Результат
		|ИЗ
		|	&Результат КАК Результат";
		
		Результат.Колонки.Удалить("Идентификатор");
		Запрос.УстановитьПараметр("Результат", Результат);
		// Структуру ВТ Результат см. в СтруктураСебестоимости.СтруктураПолейДереваСебестоимости.
		Запрос.Выполнить();
	КонецЕсли;

КонецПроцедуры

// + [Rineco], [Киселев А.Н.] [11.10.2021] 
// Задача: [№ 19719], [#Дерево себестоимости]
Функция РИНЭКО_СтруктураПолейДереваСебестоимости()
	СтруктураПолей = Новый Структура;
	
	СтруктураПолей.Вставить("ВидСтроки",
		Новый ОписаниеТипов("ПеречислениеСсылка.ВидыСтрокДереваСебестоимости"));
		
	СтруктураПолей.Вставить("Идентификатор",
		Новый ОписаниеТипов("УникальныйИдентификатор"));
	
	СтруктураПолей.Вставить("АналитикаУчетаПродукции",
		Новый ОписаниеТипов("СправочникСсылка.КлючиАналитикиУчетаНоменклатуры"));
	
	СтруктураПолей.Вставить("АналитикаУчетаВыходноеИзделие",
		Новый ОписаниеТипов("СправочникСсылка.КлючиАналитикиУчетаНоменклатуры"));
	
	ТипыАналитикиЗатрат = Новый Массив;
	ТипыАналитикиЗатрат.Добавить(Тип("СправочникСсылка.КлючиАналитикиУчетаНоменклатуры"));
	ТипыАналитикиЗатрат.Добавить(Тип("СправочникСсылка.ВидыРаботСотрудников"));
	ТипыАналитикиЗатрат.Добавить(Тип("ПланВидовХарактеристикСсылка.СтатьиРасходов"));
	ТипыАналитикиЗатрат = Новый ОписаниеТипов(ТипыАналитикиЗатрат);
	СтруктураПолей.Вставить("АналитикаУчетаЗатрата", ТипыАналитикиЗатрат);
	
	ТипыАналитикиУчетаПартий = Новый ОписаниеТипов("СправочникСсылка.КлючиАналитикиУчетаПартий");
	СтруктураПолей.Вставить("АналитикаУчетаПартий",					ТипыАналитикиУчетаПартий);
	СтруктураПолей.Вставить("АналитикаУчетаПартийПродукции",		ТипыАналитикиУчетаПартий);
	СтруктураПолей.Вставить("АналитикаУчетаПартийВыходноеИзделие",	ТипыАналитикиУчетаПартий);
	СтруктураПолей.Вставить("АналитикаУчетаПартийЗатрата",			ТипыАналитикиУчетаПартий);
	
	СтруктураПолей.Вставить("Организация",
		Новый ОписаниеТипов("СправочникСсылка.Организации"));
		
	СтруктураПолей.Вставить("Подразделение",
		Новый ОписаниеТипов("СправочникСсылка.СтруктураПредприятия"));
	
	СтруктураПолей.Вставить("ТипЗатрат",
		Новый ОписаниеТипов("Строка"));
	
	СтруктураПолей.Вставить("ТребуетсяРазузлование",
		Новый ОписаниеТипов("Булево"));
	
	СтруктураПолей.Вставить("ЕдиницаИзмерения",
		Новый ОписаниеТипов("СправочникСсылка.УпаковкиЕдиницыИзмерения"));
	
	ТипыЗатраты = Новый Массив;
	ТипыЗатраты.Добавить(Тип("СправочникСсылка.Номенклатура"));
	ТипыЗатраты.Добавить(Тип("СправочникСсылка.ВидыРаботСотрудников"));
	ТипыЗатраты.Добавить(Тип("ПланВидовХарактеристикСсылка.СтатьиРасходов"));
	ТипыЗатраты = Новый ОписаниеТипов(ТипыЗатраты);
	СтруктураПолей.Вставить("Номенклатура", ТипыЗатраты);
	
	// + [Rineco], [Киселев А.Н.] [11.10.2021] 
	// Задача: [№ 19719], [#Дерево себестоимости]
	СтруктураПолей.Вставить("Артикул", ОбщегоНазначения.ОписаниеТипаСтрока(50));
	// - [Rineco], [Киселев А.Н.] [11.10.2021]
	
	
	СтруктураПолей.Вставить("Характеристика",
		Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
	
	СтруктураПолей.Вставить("Серия",
		Новый ОписаниеТипов("СправочникСсылка.СерииНоменклатуры"));
	
	СтруктураПолей.Вставить("Назначение",
		Новый ОписаниеТипов("СправочникСсылка.Назначения"));
	
	СтруктураПолей.Вставить("СтатьяКалькуляции",
		Новый ОписаниеТипов("СправочникСсылка.СтатьиКалькуляции"));
	
	СтруктураПолей.Вставить("Уровень",
		Новый ОписаниеТипов("Число"));
	
	ТипыПартий = Новый ОписаниеТипов(Метаданные.ОпределяемыеТипы.ДокументПартии.Тип.Типы());
	СтруктураПолей.Вставить("Партия",					ТипыПартий);
	СтруктураПолей.Вставить("ПартияПродукции",			ТипыПартий);
	СтруктураПолей.Вставить("ПартияВыходноеИзделие",	ТипыПартий);
	СтруктураПолей.Вставить("ПартияЗатрата",			ТипыПартий);
	
	ТипЧисла = Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(19, 6));
	СтруктураПолей.Вставить("Количество",			ТипЧисла);
	СтруктураПолей.Вставить("Числитель",			ТипЧисла);
	СтруктураПолей.Вставить("Знаменатель",			ТипЧисла);
	
	// Стоимости согласно параметру "ДанныеПоСебестоимости"
	СтруктураПолей.Вставить("Сумма",					ТипЧисла);
	СтруктураПолей.Вставить("СуммаЗабалансовая",		ТипЧисла);
	СтруктураПолей.Вставить("Материальные",				ТипЧисла);
	СтруктураПолей.Вставить("Трудозатраты",				ТипЧисла);
	СтруктураПолей.Вставить("ПостатейныеПостоянные",	ТипЧисла);
	СтруктураПолей.Вставить("ПостатейныеПеременные",	ТипЧисла);
	СтруктураПолей.Вставить("ДопРасходы",				ТипЧисла);
	
	// Стоимости с НДС
	СтруктураПолей.Вставить("МатериальныеСНДС",				ТипЧисла);
	СтруктураПолей.Вставить("ТрудозатратыСНДС",				ТипЧисла);
	СтруктураПолей.Вставить("ПостатейныеПостоянныеСНДС",	ТипЧисла);
	СтруктураПолей.Вставить("ПостатейныеПеременныеСНДС", 	ТипЧисла);
	СтруктураПолей.Вставить("ДопРасходыСНДС",				ТипЧисла);
	
	// Стоимости без НДС
	СтруктураПолей.Вставить("МатериальныеБезНДС",			ТипЧисла);
	СтруктураПолей.Вставить("ПостатейныеПостоянныеБезНДС",	ТипЧисла);
	СтруктураПолей.Вставить("ПостатейныеПеременныеБезНДС",	ТипЧисла);
	СтруктураПолей.Вставить("ДопРасходыБезНДС",				ТипЧисла);
	
	// Стоимости Регл
	СтруктураПолей.Вставить("МатериальныеРегл",				ТипЧисла);
	СтруктураПолей.Вставить("ТрудозатратыРегл",				ТипЧисла);
	СтруктураПолей.Вставить("ПостатейныеПостоянныеРегл",	ТипЧисла);
	СтруктураПолей.Вставить("ПостатейныеПеременныеРегл",	ТипЧисла);
	СтруктураПолей.Вставить("ДопРасходыРегл",				ТипЧисла);
	СтруктураПолей.Вставить("СтоимостьЗабалансоваяРегл",	ТипЧисла);
	
	Возврат СтруктураПолей;

КонецФункции
// + [Rineco], [Киселев А.Н.] [11.10.2021] 
// Задача: [№ 19719], [#Дерево себестоимости]
Функция РИНЭКО_ИнициализироватьПоляДереваСебестоимости(Результат)
	
	СтруктураПолей = РИНЭКО_СтруктураПолейДереваСебестоимости();
	
	Для Каждого ТекПоле Из СтруктураПолей Цикл
		Если ТекПоле.Значение = Неопределено Тогда
			Результат.Колонки.Добавить(ТекПоле.Ключ);
		Иначе
			Результат.Колонки.Добавить(ТекПоле.Ключ, ТекПоле.Значение);
		КонецЕсли;
	КонецЦикла;
	
КонецФункции

// + [Rineco], [Киселев А.Н.] [11.10.2021] 
// Задача: [№ 19719], [#Дерево себестоимости]
Процедура РИНЭКО_РазузловатьУзелДереваСебестоимости(ПараметрыДерева, ПараметрыУзла, ТаблицаРезультата, ОписаниеПродукции)
	
	Если ПараметрыДерева.ТипРезультата = "ДеревоЗначений" Тогда
		Результат = ТаблицаРезультата.Строки;
		Если ПараметрыДерева.ДинамическоеСчитывание Тогда
			Результат.Очистить();
		КонецЕсли;
	Иначе
		Результат = ТаблицаРезультата
	КонецЕсли;
	
	АналитикаУчетаПродукции			= ОписаниеПродукции.АналитикаУчетаПродукции;
	ПартияПродукции					= ОписаниеПродукции.ПартияПродукции;
	АналитикаУчетаПартийПродукции	= ОписаниеПродукции.АналитикаУчетаПартийПродукции;
	УровеньУзла						= ОписаниеПродукции.Уровень + 1;
	
	СебестоимостьУзла = СебестоимостьУзла(ПараметрыДерева, ПараметрыУзла);
	
	// СтандартныеПодсистемы.ЗамерПроизводительности
	ПараметрыДерева.КоличествоСтрок = ПараметрыДерева.КоличествоСтрок + СебестоимостьУзла.Количество();
	// Конец СтандартныеПодсистемы.ЗамерПроизводительности
	
	Для Каждого ТекПартия Из СебестоимостьУзла Цикл
		
		Если ПараметрыДерева.ТипРезультата = "ДеревоЗначений"
			ИЛИ ПараметрыДерева.ДобавлятьПолуфабрикатыВРезультат
			ИЛИ Не ТекПартия.ТребуетсяРазузлование Тогда
			
			СтрокаПартия = Результат.Добавить();
			
			ЗаполнитьЗначенияСвойств(СтрокаПартия, ТекПартия);
			
			СтрокаПартия.Идентификатор	= Новый УникальныйИдентификатор();
			Если ТекПартия.ТребуетсяРазузлование Тогда
				
				СтрокаПартия.ВидСтроки		= Перечисления.ВидыСтрокДереваСебестоимости.ПартияПолуфабриката;
				СтрокаПартия.Числитель 		= ТекПартия.КоличествоЗатрата;
				
			Иначе
				СтрокаПартия.ВидСтроки		= Перечисления.ВидыСтрокДереваСебестоимости.ПартияЗатраты;
			КонецЕсли;
			
			СтрокаПартия.АналитикаУчетаПродукции		= АналитикаУчетаПродукции;
			СтрокаПартия.ПартияПродукции				= ПартияПродукции;
			СтрокаПартия.АналитикаУчетаПартийПродукции	= АналитикаУчетаПартийПродукции;
			
			СтрокаПартия.Номенклатура			= ТекПартия.Затрата;
			
			// + [Rineco], [Киселев А.Н.] [11.10.2021] 
			// Задача: [№ 19719], [#Дерево себестоимости]			
			СтрокаПартия.Артикул				= ?(ОбщегоНазначенияБЗККлиентСервер.ЗначениеСвойства(ТекПартия.Затрата,"Артикул") = Неопределено,"",ТекПартия.Затрата.Артикул);
			// - [Rineco], [Киселев А.Н.] [11.10.2021]

			СтрокаПартия.Характеристика			= ТекПартия.ХарактеристикаЗатрата;
			СтрокаПартия.Серия					= ТекПартия.СерияЗатрата;
			СтрокаПартия.Назначение				= ТекПартия.НазначениеЗатрата;
			СтрокаПартия.Партия					= ТекПартия.ПартияЗатрата;
			СтрокаПартия.АналитикаУчетаПартий	= ТекПартия.АналитикаУчетаПартийЗатрата;
			СтрокаПартия.ЕдиницаИзмерения		= ТекПартия.ЕдиницаИзмеренияЗатрата;
			СтрокаПартия.Уровень				= УровеньУзла;
			
			СтрокаПартия.Количество	= ТекПартия.КоличествоЗатрата;
			СтрокаПартия.Сумма		= ТекПартия.СуммаЗатрата;
			СтрокаПартия.СуммаЗабалансовая = ТекПартия.СуммаЗатратаЗабалансовая;
		КонецЕсли;
		
		Если ТекПартия.ТребуетсяРазузлование
			И ПараметрыДерева.ТипРезультата = "ДеревоЗначений"
			И ПараметрыДерева.ДинамическоеСчитывание Тогда
			СтрокаПартия.Строки.Добавить();
		ИначеЕсли ТекПартия.ТребуетсяРазузлование
		 И ТекПартия.КоличествоЗатрата <> 0 Тогда
			ПараметрыУзлаПартии = СтруктураСебестоимости.ПараметрыУзлаДереваСебестоимости();
			
			Отборы = ПараметрыУзлаПартии.Отборы;
			Отборы.ДанныеПоСебестоимости = ПараметрыУзла.Отборы.ДанныеПоСебестоимости;
			Отборы.Продукция.Добавить(ТекПартия.Затрата);
			Отборы.ХарактеристикиПродукции.Добавить(ТекПартия.ХарактеристикаЗатрата);
			Отборы.СерииПродукции.Добавить(ТекПартия.СерияЗатрата);
			Отборы.ПартииПродукции.Добавить(ТекПартия.ПартияЗатрата);
			Отборы.АналитикиУчетаПартийПродукции.Добавить(ТекПартия.АналитикаУчетаПартийЗатрата);
			Отборы.Числитель = ТекПартия.КоличествоЗатрата;
			
			Если ПараметрыДерева.ТипРезультата = "ДеревоЗначений" Тогда
				ТаблицаРезультатаПартии = СтрокаПартия;
			Иначе
				ТаблицаРезультатаПартии = Результат;
			КонецЕсли;
			
			ОписаниеПродукции.Вставить("Уровень", УровеньУзла);
			РазузловатьУзелДереваСебестоимости(ПараметрыДерева, ПараметрыУзлаПартии, ТаблицаРезультатаПартии, ОписаниеПродукции);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры



// + [Rineco], [Киселев А.Н.] [11.10.2021] 
// Задача: [№ 19719], [#Дерево себестоимости]
Процедура РИНЭКО_ДеревоСебестоимостиПередРазворачиванием(ПараметрыДерева, ПараметрыУзла, ОписаниеПродукции) Экспорт
	
	// СтандартныеПодсистемы.ЗамерПроизводительности
	Замер = ОценкаПроизводительности.НачатьЗамерДлительнойОперации("ОбщийМодуль.СтруктураСебестоимости.ДеревоСебестоимостиПередРазворачиванием");
	ПараметрыДерева.Вставить("КоличествоСтрок", 0);
	// Конец СтандартныеПодсистемы.ЗамерПроизводительности
	
	РИНЭКО_РазузловатьУзелДереваСебестоимости(ПараметрыДерева, ПараметрыУзла, ПараметрыДерева.Результат, ОписаниеПродукции);
	
	// СтандартныеПодсистемы.ЗамерПроизводительности
	ОценкаПроизводительности.ЗакончитьЗамерДлительнойОперации(Замер, ПараметрыДерева.КоличествоСтрок / 100);
	// Конец СтандартныеПодсистемы.ЗамерПроизводительности
	
КонецПроцедуры

