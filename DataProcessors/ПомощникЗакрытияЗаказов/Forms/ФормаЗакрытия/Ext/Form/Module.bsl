
&НаКлиенте
Процедура Рин1_ГотовоВместо(Команда)
	
	ОчиститьСообщения();
	
	Если ИспользоватьПричиныОтменыЗаказов И ОтменитьНеотработанныеСтроки И НЕ ЗначениеЗаполнено(ПричинаОтмены) Тогда
		
		ТекстОшибки = НСтр("ru = 'Поле ""Причина отмены"" не заполнено';
		|en = 'The ""Reason for cancellation"" field is not filled in.'");
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
		ТекстОшибки,,"ПричинаОтмены",,);
		
		Возврат;
		
	КонецЕсли;
	
	Если ЗаказыЗакрыты ИЛИ Элементы.Навигация.ТекущаяСтраница = Элементы.НавигацияВсеЗаказыЗакрыты Тогда
		
		Готово = Истина;
		Закрыть();
		
	Иначе
		
		СтруктураДополнительныхПараметров = Новый Структура;
		СтруктураДополнительныхПараметров.Вставить("ИмяТабличнойЧасти",            "Товары");
		СтруктураДополнительныхПараметров.Вставить("ПричинаОтмены",                ПричинаОтмены);
		СтруктураДополнительныхПараметров.Вставить("ПроверятьОстатки",             Ложь);
		СтруктураДополнительныхПараметров.Вставить("ОтменитьНеотработанныеСтроки", ОтменитьНеотработанныеСтроки);
		СтруктураДополнительныхПараметров.Вставить("СкорректироватьМерныеТовары",  СкорректироватьМерныеТовары);
		СтруктураДополнительныхПараметров.Вставить("СкорректироватьМерныеТоварыПоПриемке", СкорректироватьМерныеТоварыПоПриемке);
		СтруктураДополнительныхПараметров.Вставить("СкорректироватьЦены",          СкорректироватьЦены);
		СтруктураДополнительныхПараметров.Вставить("ЗакрыватьЗаказы",              ЗакрыватьЗаказы);
		Если ОтклоненияЦен.Количество() > 0 Тогда 
			СтруктураДополнительныхПараметров.Вставить("ОтклоненияЦен", ОтклоненияЦен);
		КонецЕсли;
		
		// Если открыли помощник из заказа
		Если Заказы.Количество() = 1 И ДокументИнициатор = Заказы[0].Значение Тогда
			
			//bercut180520
			Если ТипЗнч(ДокументИнициатор) = Тип("ДокументСсылка.ЗаказПоставщику") Тогда
				
				ИмеютсяНеПолученныеТоварыПоЗаказуПоставщика = Рин1_ОбщийМодуль2.ИмеютсяНеПолученныеТоварыПоЗаказуПоставщика(ДокументИнициатор);
				
				Если ИмеютсяНеПолученныеТоварыПоЗаказуПоставщика Тогда
					
					Режим = РежимДиалогаВопрос.ДаНет;
					Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопроса", ЭтотОбъект, СтруктураДополнительныхПараметров);
					ПоказатьВопрос(Оповещение, НСтр("ru = 'По заказу поставщику не весь товар принят на остатки организации. Продолжить выполнение операции?';"
					+ " en = 'Do you want to continue?'"), Режим, 0);
					
				Иначе
					ОповеститьОВыборе(СтруктураДополнительныхПараметров);
					Возврат;
				КонецЕсли;
				
			Иначе 	
				ОповеститьОВыборе(СтруктураДополнительныхПараметров);
				Возврат;
			КонецЕсли;						
			//
		Иначе 
			
			//bercut180520
			СписокЗаказов = "";
			Для каждого Заказ Из Заказы Цикл
				Если ТипЗнч(Заказ.Значение) = Тип("ДокументСсылка.ЗаказПоставщику") Тогда
					ИмеютсяНеПолученныеТоварыПоЗаказуПоставщика = Рин1_ОбщийМодуль2.ИмеютсяНеПолученныеТоварыПоЗаказуПоставщика(Заказ.Значение);					
					Если ИмеютсяНеПолученныеТоварыПоЗаказуПоставщика Тогда
						СписокЗаказов = СписокЗаказов + Строка(Заказ) + Символы.ПС;
					КонецЕсли;
				КонецЕсли;	
			КонецЦикла;
			
			Если не СписокЗаказов = "" Тогда
				
				Режим = РежимДиалогаВопрос.ДаНет;
				Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопроса2", ЭтотОбъект, СтруктураДополнительныхПараметров);
				ПоказатьВопрос(Оповещение, НСтр("ru = 'По заказ" + ?(СтрЧислоСтрок(СписокЗаказов) = 1,"у","ам") + " поставщику не весь товар принят на остатки организации." +
				Символы.ПС + СписокЗаказов + "Продолжить выполнение операции?';"
				+ " en = 'Do you want to continue?'"), Режим, 0);
				
			Иначе
				
				ГотовоСервер(ЗакрыватьЗаказы, Заказы, СтруктураДополнительныхПараметров);
				
				Оповестить("ЗакрытиеЗаказов", ДокументИнициатор);
				
				Если НеотработанныеЗаказы.Количество() > 0 Тогда
					
					Элементы.ЗакрытиеЗаказовДекорацияНеудача.Заголовок = СформироватьТекстОбработано();
					
					Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаЗакрытиеЗаказов;
					Элементы.Навигация.ТекущаяСтраница = Элементы.НавигацияВсеЗаказыЗакрыты;
					
				Иначе
					Закрыть();
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияВопроса(Результат, СтруктураДополнительныхПараметров) Экспорт
	
	Если Результат = КодВозвратаДиалога.Нет Тогда
		Закрыть();
	Иначе 
		ОповеститьОВыборе(СтруктураДополнительныхПараметров);
		Возврат;		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияВопроса2(Результат, СтруктураДополнительныхПараметров) Экспорт
	
	Если Результат = КодВозвратаДиалога.Нет Тогда
		Закрыть();
	Иначе 
		ГотовоСервер(ЗакрыватьЗаказы, Заказы, СтруктураДополнительныхПараметров);
		
		Оповестить("ЗакрытиеЗаказов", ДокументИнициатор);
		
		Если НеотработанныеЗаказы.Количество() > 0 Тогда
			
			Элементы.ЗакрытиеЗаказовДекорацияНеудача.Заголовок = СформироватьТекстОбработано();
			
			Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаЗакрытиеЗаказов;
			Элементы.Навигация.ТекущаяСтраница = Элементы.НавигацияВсеЗаказыЗакрыты;
			
		Иначе
			Закрыть();
		КонецЕсли;		
	КонецЕсли;
	
КонецПроцедуры