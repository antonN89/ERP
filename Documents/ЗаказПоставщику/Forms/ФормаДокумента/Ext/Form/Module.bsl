
&НаКлиенте
Процедура Рин1_ЗагрузитьИзмененияУсловийПоставкиВместо(Команда)
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("ЗагружатьЦены", Истина);
	ПараметрыФормы.Вставить("ЗагружатьСуммы", Истина);
	ПараметрыФормы.Вставить("ЦенаВключаетНДС", Объект.ЦенаВключаетНДС);
	ПараметрыФормы.Вставить("Ссылка", Объект.Ссылка);
	ПараметрыФормы.Вставить("Партнер", Объект.Партнер);
	ПараметрыФормы.Вставить("ВалютаДокумента", Объект.Валюта);
	ПараметрыФормы.Вставить("СопоставлятьПоНоменклатуреПоставщиков", Истина);
	
	ТоварыДокумента = "";
	ПоместитьТоварыВХранилище(ТоварыДокумента);
	ПараметрыФормы.Вставить("ТоварыДокумента",ТоварыДокумента);
	
	ОткрытьФорму(
	"Обработка.Рин1_ЗагрузкаИзмененийУсловийПоставки.Форма.Форма",
	ПараметрыФормы,
	ЭтаФорма,
	УникальныйИдентификатор);
	
КонецПроцедуры

&НаСервере
Процедура ПоместитьТоварыВХранилище(ТоварыДокумента)
	
	ТЗ = Объект.Товары.Выгрузить();
	ТоварыДокумента = ПоместитьВоВременноеХранилище(ТЗ);
	
КонецПроцедуры

&НаКлиенте
Процедура Рин1_ОбработкаВыбораВместо(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ИсточникВыбора.ИмяФормы = "Обработка.ПодборТоваровВДокументЗакупки.Форма.Форма" Тогда
		
		ОбработкаВыбораПодборНаСервере(ВыбранноеЗначение);
		
	ИначеЕсли ИсточникВыбора.ИмяФормы = "Обработка.ПодборМногооборотнойТары.Форма.Форма" Тогда
		
		ЗаполнитьМногооборотнуюТаруИзХранилищаСервер(ВыбранноеЗначение.АдресМногооборотнойТарыВХранилище);
		МногооборотнаяТараКлиент.ОповеститьПользователяОЗаполненииМногооборотнойТарой();
		
	ИначеЕсли ИсточникВыбора.ИмяФормы = "Обработка.ЗагрузкаДанныхИзВнешнихФайлов.Форма.Форма" Тогда
		
		ПолучитьЗагруженныеТоварыИзХранилища(ВыбранноеЗначение.АдресТоваровВХранилище);
		
	ИначеЕсли ИсточникВыбора.ИмяФормы = "Обработка.ГИГ_ЗагрузкаДанныхИзВнешнихФайлов.Форма.Форма" Тогда
		
		ПолучитьЗагруженныеТоварыИзХранилища(ВыбранноеЗначение.АдресТоваровВХранилище);	
	ИначеЕсли ИсточникВыбора.ИмяФормы = "Справочник.СтруктураПредприятия.Форма.ФормаВыбора" Тогда
		
		ВыделенныеСтроки = Элементы.Товары.ВыделенныеСтроки;
		
		Для Каждого Строка Из ВыделенныеСтроки Цикл
			
			ДанныеСтроки = Объект.Товары.НайтиПоИдентификатору(Строка);
			
			Если ДанныеСтроки.ТипНоменклатуры = ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Товар") Или
				ДанныеСтроки.ТипНоменклатуры = ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.МногооборотнаяТара") Тогда
				Продолжить;
			КонецЕсли;
			
			ДанныеСтроки.Подразделение = ВыбранноеЗначение;
			
		КонецЦикла;
		
	ИначеЕсли ИсточникВыбора.ИмяФормы = "Обработка.ПомощникЗакрытияЗаказов.Форма.ФормаЗакрытия" Тогда
		
		СкорректироватьСтрокиЗаказа(ВыбранноеЗначение);
		
	ИначеЕсли ИсточникВыбора.ИмяФормы = "Обработка.Рин1_ЗагрузкаИзмененийУсловийПоставки.Форма.Форма" Тогда
		
		ОбработкаРасхожденийНаСервере(ВыбранноеЗначение);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаРасхожденийНаСервере(ВыбранноеЗначение)
	
	ТаблицаТоваров = ПолучитьИзВременногоХранилища(ВыбранноеЗначение.АдресТоваровВХранилище);
	КэшированныеЗначения = ОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруКэшируемыеЗначения();
	//++Шерстюк Ю.Ю. 12.07.2021 Задача 9171 изменяем значение только перенесенных строк, не очищаям ТЧ
	//Объект.Товары.Очистить();
	тчТовары = Объект.Товары;
	//--Шерстюк Ю.Ю.0
	Если ТаблицаТоваров.Найти(Истина,"ЦенаВключаетНДС") = Неопределено Тогда
		Объект.ЦенаВключаетНДС = Ложь;
	Иначе 
		Объект.ЦенаВключаетНДС = Истина;
	КонецЕсли;
	
	//++Шерстюк Ю.Ю. Задача 9171 ищем строку по номеру
	Для Каждого СтрТчТовары из тчТовары Цикл
		СтруктураПоиска = Новый Структура;
		СтруктураПоиска.Вставить("НомерСтроки",СтрТчТовары.НомерСтроки);
		НайденныеСтроки = ТаблицаТоваров.НайтиСтроки(СтруктураПоиска);
		пОбработанаТекущаяСтрока = Ложь;
		Для Каждого ЭлементМассива из НайденныеСтроки Цикл 
			Если Не пОбработанаТекущаяСтрока Тогда 
				ТекущаяСтрока = СтрТчТовары;
				пОбработанаТекущаяСтрока = Истина;
			Иначе
				ТекущаяСтрока = Объект.Товары.Добавить();
            КонецЕсли;
			//ЗаполнитьЗначенияСвойств(ТекущаяСтрока, ЭлементМассива, "НоменклатураПоставщика, Номенклатура, Характеристика, Упаковка, Склад, ВидЦеныПоставщика, Цена, КоличествоУпаковок, ПроцентРучнойСкидки");
			//++Шерстюк Ю.Ю. 21.05.2021 Задача 8409 если документ не в статусе Подтвержден или Закрыт, то копируем плановые даты
			//ЗаполнитьЗначенияСвойств(ТекущаяСтрока, СтрокаТовара, "НоменклатураПоставщика, Номенклатура, Упаковка, Цена, КоличествоУпаковок, Отменено, ПричинаОтмены, ВидЦеныПоставщика");
			ЗаполнитьЗначенияСвойств(ТекущаяСтрока, ЭлементМассива, "НоменклатураПартнера, Номенклатура, Упаковка, Цена, КоличествоУпаковок, Отменено, ПричинаОтмены, ВидЦеныПоставщика, Рин1_ПлановаяДатаПоступления, Рин1_ПлановаяДатаОтгрузки");
			//--Шерстюк Ю.Ю.
			ТекущаяСтрока.Склад = Объект.Склад;
			
			Если Объект.ПоступлениеОднойДатой Тогда
				ТекущаяСтрока.ДатаПоступления = Объект.ДатаПоступления;
			Иначе 
				ТекущаяСтрока.ДатаПоступления = ЭлементМассива.ДатаПоступления;
			КонецЕсли;
			
			ТекущаяСтрока.Назначение = ЭлементМассива.Назначение;
			
			СтруктураДействий = Новый Структура;
			СтруктураДействий.Вставить("ЗаполнитьПризнакТипНоменклатуры", Новый Структура("Номенклатура", "ТипНоменклатуры"));
			СтруктураДействий.Вставить("ЗаполнитьПризнакАртикул", Новый Структура("Номенклатура", "Артикул"));
			СтруктураДействий.Вставить("ЗаполнитьСтавкуНДС", Новый Структура("НалогообложениеНДС, Дата", Объект.НалогообложениеНДС, Объект.Дата));
			СтруктураДействий.Вставить("ЗаполнитьПризнакАналитикаРасходовОбязательна");
			СтруктураДействий.Вставить("ЗаполнитьСтавкуНДСВозвратнойТары", Объект.ВернутьМногооборотнуюТару);
			СтруктураДействий.Вставить("ЗаполнитьПризнакБезВозвратнойТары", Объект.ВернутьМногооборотнуюТару);
			СтруктураДействий.Вставить("ЗаполнитьПризнакОтмененоБезВозвратнойТары", Объект.ВернутьМногооборотнуюТару);
			НаправленияДеятельностиКлиентСервер.СтруктураДействийВставитьПриДобавленииСтроки(ЭтаФорма, СтруктураДействий);
			ДобавитьВСтруктуруДействияПриИзмененииКоличестваУпаковок(СтруктураДействий, ЭтаФорма);
			
			СтруктураДействий.Удалить("ПроверитьЗаполнитьНазначение");
			
			ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
            ЭлементМассива.ПеренесенаСтрокаВТЧ = Истина;
		КонецЦикла;
		
	КонецЦикла;
	
	Для Каждого СтрокаТовара Из ТаблицаТоваров Цикл
		Если Не СтрокаТовара.ПеренесенаСтрокаВТЧ Тогда 
			ТекущаяСтрока = Объект.Товары.Добавить();
			//ЗаполнитьЗначенияСвойств(ТекущаяСтрока, СтрокаТовара, "НоменклатураПоставщика, Номенклатура, Характеристика, Упаковка, Склад, ВидЦеныПоставщика, Цена, КоличествоУпаковок, ПроцентРучнойСкидки");
			//++Шерстюк Ю.Ю. 21.05.2021 Задача 8409 если документ не в статусе Подтвержден или Закрыт, то копируем плановые даты
			//ЗаполнитьЗначенияСвойств(ТекущаяСтрока, СтрокаТовара, "НоменклатураПоставщика, Номенклатура, Упаковка, Цена, КоличествоУпаковок, Отменено, ПричинаОтмены, ВидЦеныПоставщика");
			ЗаполнитьЗначенияСвойств(ТекущаяСтрока, СтрокаТовара, "НоменклатураПартнера, Номенклатура, Упаковка, Цена, КоличествоУпаковок, Отменено, ПричинаОтмены, ВидЦеныПоставщика, Рин1_ПлановаяДатаПоступления, Рин1_ПлановаяДатаОтгрузки");
			//--Шерстюк Ю.Ю.
			ТекущаяСтрока.Склад = Объект.Склад;
			
			Если Объект.ПоступлениеОднойДатой Тогда
				ТекущаяСтрока.ДатаПоступления = Объект.ДатаПоступления;
			Иначе 
				ТекущаяСтрока.ДатаПоступления = СтрокаТовара.ДатаПоступления;
			КонецЕсли;
			
			ТекущаяСтрока.Назначение = СтрокаТовара.Назначение;
			
			СтруктураДействий = Новый Структура;
			СтруктураДействий.Вставить("ЗаполнитьПризнакТипНоменклатуры", Новый Структура("Номенклатура", "ТипНоменклатуры"));
			СтруктураДействий.Вставить("ЗаполнитьПризнакАртикул", Новый Структура("Номенклатура", "Артикул"));
			СтруктураДействий.Вставить("ЗаполнитьСтавкуНДС", Новый Структура("НалогообложениеНДС, Дата", Объект.НалогообложениеНДС, Объект.Дата));
			СтруктураДействий.Вставить("ЗаполнитьПризнакАналитикаРасходовОбязательна");
			СтруктураДействий.Вставить("ЗаполнитьСтавкуНДСВозвратнойТары", Объект.ВернутьМногооборотнуюТару);
			СтруктураДействий.Вставить("ЗаполнитьПризнакБезВозвратнойТары", Объект.ВернутьМногооборотнуюТару);
			СтруктураДействий.Вставить("ЗаполнитьПризнакОтмененоБезВозвратнойТары", Объект.ВернутьМногооборотнуюТару);
			НаправленияДеятельностиКлиентСервер.СтруктураДействийВставитьПриДобавленииСтроки(ЭтаФорма, СтруктураДействий);
			ДобавитьВСтруктуруДействияПриИзмененииКоличестваУпаковок(СтруктураДействий, ЭтаФорма);
			
			СтруктураДействий.Удалить("ПроверитьЗаполнитьНазначение");
			
			ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
			СтрокаТовара.ПеренесенаСтрокаВТЧ = Истина;
		КонецЕсли;
		
	КонецЦикла;

	
	//Для каждого СтрокаТовара Из ТаблицаТоваров Цикл
	//	
	//	
	//	ТекущаяСтрока = Объект.Товары.Добавить();
	//	//ЗаполнитьЗначенияСвойств(ТекущаяСтрока, СтрокаТовара, "НоменклатураПоставщика, Номенклатура, Характеристика, Упаковка, Склад, ВидЦеныПоставщика, Цена, КоличествоУпаковок, ПроцентРучнойСкидки");
	//	//++Шерстюк Ю.Ю. 21.05.2021 Задача 8409 если документ не в статусе Подтвержден или Закрыт, то копируем плановые даты
	//	//ЗаполнитьЗначенияСвойств(ТекущаяСтрока, СтрокаТовара, "НоменклатураПоставщика, Номенклатура, Упаковка, Цена, КоличествоУпаковок, Отменено, ПричинаОтмены, ВидЦеныПоставщика");
	//	ЗаполнитьЗначенияСвойств(ТекущаяСтрока, СтрокаТовара, "НоменклатураПоставщика, Номенклатура, Упаковка, Цена, КоличествоУпаковок, Отменено, ПричинаОтмены, ВидЦеныПоставщика, Рин1_ПлановаяДатаПоступления, Рин1_ПлановаяДатаОтгрузки");
	//	//--Шерстюк Ю.Ю.
	//	ТекущаяСтрока.Склад = Объект.Склад;
	//	
	//	Если Объект.ПоступлениеОднойДатой Тогда
	//		ТекущаяСтрока.ДатаПоступления = Объект.ДатаПоступления;
	//	Иначе 
	//		ТекущаяСтрока.ДатаПоступления = СтрокаТовара.ДатаПоступления;
	//	КонецЕсли;
	//	
	//	ТекущаяСтрока.Назначение = СтрокаТовара.Назначение;
	//	
	//	СтруктураДействий = Новый Структура;
	//	СтруктураДействий.Вставить("ЗаполнитьПризнакТипНоменклатуры", Новый Структура("Номенклатура", "ТипНоменклатуры"));
	//	СтруктураДействий.Вставить("ЗаполнитьПризнакАртикул", Новый Структура("Номенклатура", "Артикул"));
	//	СтруктураДействий.Вставить("ЗаполнитьСтавкуНДС", Новый Структура("НалогообложениеНДС, Дата", Объект.НалогообложениеНДС, Объект.Дата));
	//	СтруктураДействий.Вставить("ЗаполнитьПризнакАналитикаРасходовОбязательна");
	//	СтруктураДействий.Вставить("ЗаполнитьСтавкуНДСВозвратнойТары", Объект.ВернутьМногооборотнуюТару);
	//	СтруктураДействий.Вставить("ЗаполнитьПризнакБезВозвратнойТары", Объект.ВернутьМногооборотнуюТару);
	//	СтруктураДействий.Вставить("ЗаполнитьПризнакОтмененоБезВозвратнойТары", Объект.ВернутьМногооборотнуюТару);
	//	НаправленияДеятельностиКлиентСервер.СтруктураДействийВставитьПриДобавленииСтроки(ЭтаФорма, СтруктураДействий);
	//	ДобавитьВСтруктуруДействияПриИзмененииКоличестваУпаковок(СтруктураДействий, ЭтаФорма);
	//	
	//	СтруктураДействий.Удалить("ПроверитьЗаполнитьНазначение");
	//	
	//	ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
	//	
	//КонецЦикла;
	//--Шерстюк Ю.Ю.
	
	Если КонтролироватьАссортимент Тогда
		АссортиментСервер.ПроверитьАссортиментТаблицыПодобранныхТоваров(Объект, "Склад", ТаблицаТоваров);
	КонецЕсли;
	
	
	СтруктураХарактеристикиНоменклатуры = Новый Структура;
	СтруктураХарактеристикиНоменклатуры.Вставить("ЗаполнитьПризнакХарактеристикиИспользуются", Новый Структура("Номенклатура", "ХарактеристикиИспользуются"));
	
	НоменклатураСервер.ЗаполнитьСлужебныеРеквизитыПоНоменклатуреВКоллекции(Объект.Товары, СтруктураХарактеристикиНоменклатуры);
	
	ЗаполнитьПризнакСписанияНаРасходыДляУслуг();
	РассчитатьИтоговыеПоказателиЗаказа(ЭтаФорма);
	ПриИзмененииСкладаВТабличнойЧастиСервер();
	МногооборотнаяТараСервер.ОбновитьСостояниеЗаполненияМногооборотнойТары(Объект.СостояниеЗаполненияМногооборотнойТары);
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаСервере
Процедура Рин1_ПослеЗаписиНаСервереПосле(ТекущийОбъект, ПараметрыЗаписи)
	
	////Отключил т.к. выполняться будет из регламентного
	//Запрос = Новый Запрос;
	//Запрос.Текст = 
	//	"ВЫБРАТЬ
	//	|	ЗаказПоставщикуТовары.Ссылка КАК Ссылка,
	//	|	ЗаказПоставщикуТовары.Номенклатура КАК Номенклатура,
	//	|	ВЫБОР
	//	|		КОГДА ЗаказПоставщикуТовары.Ссылка.ДатаПоступления <> ДАТАВРЕМЯ(1, 1, 1)
	//	|			ТОГДА ЗаказПоставщикуТовары.Ссылка.ДатаПоступления
	//	|		ИНАЧЕ ЗаказПоставщикуТовары.ДатаПоступления
	//	|	КОНЕЦ КАК ДатаПоступления,
	//	|	ЗаказПоставщикуТовары.КоличествоУпаковок КАК КоличествоУпаковок,
	//	|	ЗаказПоставщикуТовары.КоличествоУпаковок КАК ОстатокОбеспечения
	//	|ИЗ
	//	|	Документ.ЗаказПоставщику.Товары КАК ЗаказПоставщикуТовары
	//	|ГДЕ
	//	|	ЗаказПоставщикуТовары.Ссылка = &Ссылка";
	//Запрос.УстановитьПараметр("Ссылка",Объект.Ссылка);
	//
	//РезультатЗапроса = Запрос.Выполнить();	
	//ТЗ = РезультатЗапроса.Выгрузить();

	////перенесено 280519 в Рин1_ОбщийМодуль
	//Рин1_ОбщийМодуль.ОбработкаРезервированиеНоменклатурыКДате(ТЗ);	
	////
	
КонецПроцедуры

&НаКлиенте
Процедура ГИГ_ЗагрузитьИзВнешнегоФайла(Команда)
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("ЗагружатьЦены", Истина);
	ПараметрыФормы.Вставить("ЗагружатьСуммы", Истина);
	ПараметрыФормы.Вставить("ЦенаВключаетНДС", Объект.ЦенаВключаетНДС);
	ПараметрыФормы.Вставить("НалогообложениеНДС", Объект.НалогообложениеНДС);
	ПараметрыФормы.Вставить("ВернутьМногооборотнуюТару", Объект.ВернутьМногооборотнуюТару);
	ПараметрыФормы.Вставить("Партнер", Объект.Партнер);
	ПараметрыФормы.Вставить("СопоставлятьПоНоменклатуреПоставщиков", Истина);
	
	Если Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПриемНаКомиссию") Тогда
		
		ПараметрыФормы.Вставить("ОтборПоТипуНоменклатуры", Новый ФиксированныйМассив(НоменклатураКлиентСервер.ОтборПоТоваруМногооборотнойТаре()));
		ЗагружатьСкидки = Ложь;
		
	Иначе
		
		Если Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПриемНаХранениеСПравомПродажи")
			Или Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаТоварыВПути")
			Или Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаФактуровкаПоставки")
			Или Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСТоварыВПути")
			Или Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСФактуровкаПоставки")
			Или Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ЗакупкаПоИмпортуТоварыВПути") Тогда
			
			ПараметрыФормы.Вставить("ОтборПоТипуНоменклатуры", Новый ФиксированныйМассив(НоменклатураКлиентСервер.ОтборПоТоваруМногооборотнойТаре()));
			
		КонецЕсли;
		
		ЗагружатьСкидки = Истина;
		
	КонецЕсли;
	
	ПараметрыФормы.Вставить("ЗагружатьСкидки", ЗагружатьСкидки);
	
	ОткрытьФорму(
		"Обработка.ЗагрузкаДанныхИзВнешнихФайлов.Форма.Форма",
		ПараметрыФормы,
		ЭтаФорма,
		УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура Рин1_РассчитатьЦеныПоставщикаПосле(Команда)
	
	МассивВыделенныхСтрок = Элементы.Товары.ВыделенныеСтроки;
	Если не МассивВыделенныхСтрок.Количество() = 0 Тогда
	   УстановитьЦеныДляВыбранныхСтрок(МассивВыделенныхСтрок);
	   РассчитатьИтоговыеПоказателиЗаказа(ЭтаФорма);
	   ЭтаФорма.Модифицированность = Истина;
   КонецЕсли;
   
КонецПроцедуры

&НаСервере
Процедура УстановитьЦеныДляВыбранныхСтрок(МассивВыделенныхСтрок)
	
	Если Объект.ЦенаВключаетНДС Тогда
		ВидЦены = Константы.ГИГ_ОсновнойВидЦеныТарифаНоменклатурыСНДС.Получить();
	Иначе
		ВидЦены = Константы.ГИГ_ОсновнойВидЦеныТарифаНоменклатуры.Получить();
	КонецЕсли;
	
	КэшированныеЗначения = ОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруКэшируемыеЗначения();
	
	СтруктураПересчетаСуммы = ОбработкаТабличнойЧастиКлиентСервер.ПараметрыПересчетаСуммыНДСВСтрокеТЧ(Объект);
	
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ПересчитатьСуммуНДС", СтруктураПересчетаСуммы);
	СтруктураДействий.Вставить("ПересчитатьСуммуСНДС", СтруктураПересчетаСуммы);
	СтруктураДействий.Вставить("ПересчитатьСумму");
	СтруктураДействий.Вставить("ПересчитатьСуммуСУчетомРучнойСкидки", Новый Структура("Очищать", Ложь));
	СтруктураДействий.Вставить("ЗаполнитьДубликатыЗависимыхРеквизитов", ЗависимыеРеквизиты());
	
	ВалютаДокумента = Объект.Валюта;
	КурсДокумента = РегистрыСведений.КурсыВалют.СрезПоследних(Объект.Дата,Новый Структура("Валюта",ВалютаДокумента))[0].Курс; 
	
	Для каждого СтрокаМассива Из МассивВыделенныхСтрок Цикл
		
		СтрокаТЧ = Объект.Товары.Получить(СтрокаМассива);
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА ГИГ_ЗначенияПороговОграниченийСрезПоследних.Значение ЕСТЬ NULL
		|			ТОГДА ЦеныНоменклатурыСрезПоследних.Цена
		|		ИНАЧЕ ЦеныНоменклатурыСрезПоследних.Цена - (ЦеныНоменклатурыСрезПоследних.Цена * ГИГ_ЗначенияПороговОграниченийСрезПоследних.Значение / 100)
		|	КОНЕЦ КАК Цена,
		// + [Rineco], [Шерстюк Ю.Ю.] [02.09.2021] 
		// Задача: [№ 16543 ], [Цену нужно расчитывать с учетом единиц измерения]
		|   ЦеныНоменклатурыСрезПоследних.Упаковка КАК Упаковка,
		// - [Rineco], [Шерстюк Ю.Ю.] [02.09.2021]
		
		|	ЦеныНоменклатурыСрезПоследних.Валюта КАК Валюта
		|ИЗ
		|	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
		|			,
		|			Номенклатура = &Номенклатура
		|				И ВидЦены = &ВидЦены) КАК ЦеныНоменклатурыСрезПоследних
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГИГ_ЗначенияПороговОграничений.СрезПоследних(, ПорогОграничения = &ПорогОграничения) КАК ГИГ_ЗначенияПороговОграниченийСрезПоследних
		|		ПО (ЦеныНоменклатурыСрезПоследних.Номенклатура.ЦеноваяГруппа = ГИГ_ЗначенияПороговОграниченийСрезПоследних.ЦеноваяГруппа)";
		
		Запрос.УстановитьПараметр("ВидЦены", ВидЦены);
		Запрос.УстановитьПараметр("Номенклатура", СтрокаТЧ.Номенклатура);
		Запрос.УстановитьПараметр("ПорогОграничения", Справочники.ГИГ_ПорогиОграничений.НайтиПоНаименованию("Скидка поставщика (от тарифа),%"));
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		// + [Rineco], [Шерстюк Ю.Ю.] [02.09.2021] 
		// Задача: [№ 16543]
		пПустаяУпаковка = Справочники.УпаковкиЕдиницыИзмерения.ПустаяСсылка();
		// - [Rineco], [Шерстюк Ю.Ю.] [02.09.2021]
		
		Если Не РезультатЗапроса.Пустой() Тогда
			Если ВалютаДокумента = РезультатЗапроса.Выгрузить()[0].Валюта Тогда
				СтрокаТЧ.Цена = ?(РезультатЗапроса.Выгрузить()[0].Цена = 0,0.01,РезультатЗапроса.Выгрузить()[0].Цена);
			Иначе
				КурсЦены = РегистрыСведений.КурсыВалют.СрезПоследних(Объект.Дата,Новый Структура("Валюта",РезультатЗапроса.Выгрузить()[0].Валюта))[0].Курс;
				// + [Rineco], [Шерстюк Ю.Ю.] [02.09.2021] 
				// Задача: [№ 16543], [вычислим коэф. пересчета одной упаковки в другую]
				//СтрокаТЧ.Цена = ?(РезультатЗапроса.Выгрузить()[0].Цена = 0,0.01,РезультатЗапроса.Выгрузить()[0].Цена) * КурсЦены/КурсДокумента;
				пУпаковкаВДокументе = СтрокаТЧ.Упаковка;
				Если пУпаковкаВДокументе = пПустаяУпаковка Тогда 
					пУпаковкаВДокументе = СтрокаТЧ.Номенклатура.ЕдиницаИзмерения
				КонецЕсли;
				пУпаковкаВПрайсе = РезультатЗапроса.Выгрузить()[0].Упаковка;
				Если пУпаковкаВДокументе <> пУпаковкаВПрайсе Тогда 
					пКоэфПересчета = (?(пУпаковкаВПрайсе.Знаменатель = 0,1,пУпаковкаВПрайсе.Знаменатель)*?(пУпаковкаВДокументе.Числитель = 0,1,пУпаковкаВДокументе.Числитель))
									/(?(пУпаковкаВПрайсе.Числитель=0,1,пУпаковкаВПрайсе.Числитель)*?(пУпаковкаВДокументе.Знаменатель = 0,1,пУпаковкаВДокументе.Знаменатель));
					СтрокаТЧ.Цена = ?(РезультатЗапроса.Выгрузить()[0].Цена = 0,0.01,РезультатЗапроса.Выгрузить()[0].Цена*пКоэфПересчета) * КурсЦены/КурсДокумента;
				Иначе
					СтрокаТЧ.Цена = ?(РезультатЗапроса.Выгрузить()[0].Цена = 0,0.01,РезультатЗапроса.Выгрузить()[0].Цена) * КурсЦены/КурсДокумента;
				КонецЕсли;
				// - [Rineco], [Шерстюк Ю.Ю.] [02.09.2021]
				
			КонецЕсли;
		Иначе
			СтрокаТЧ.Цена = 0.01;
		КонецЕсли;
		
		ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(СтрокаТЧ, СтруктураДействий, КэшированныеЗначения);
		
	КонецЦикла;	
	
КонецПроцедуры

&НаКлиенте
Процедура Рин1_СтатусПриИзмененииВместо(Элемент)
	
	Если Объект.Согласован И
		Объект.Статус <> ПредопределенноеЗначение("Перечисление.СтатусыЗаказовПоставщикам.Согласован")
		И Объект.Статус <> ПредопределенноеЗначение("Перечисление.СтатусыЗаказовПоставщикам.Подтвержден")
		И Объект.Статус <> ПредопределенноеЗначение("Перечисление.СтатусыЗаказовПоставщикам.Закрыт") Тогда
		
		Объект.Согласован = Ложь;
		
	КонецЕсли;
	//++Шерстюк Ю.Ю. 19.05.2021 Задача 8409 плановые даты не должны быть доступны для редактирования в статусе Подтвержден или Закрыт
	Если Объект.Статус = ПредопределенноеЗначение("Перечисление.СтатусыЗаказовПоставщикам.Подтвержден")
		Или  Объект.Статус = ПредопределенноеЗначение("Перечисление.СтатусыЗаказовПоставщикам.Закрыт") Тогда
		Элементы.ГруппаПлановыеДаты.ТолькоПросмотр = Истина;
	Иначе 
		Элементы.ГруппаПлановыеДаты.ТолькоПросмотр = Ложь;
	КонецЕсли;
	//--Шерстюк Ю.Ю.
	Если Объект.Товары.Количество() > 0 Тогда
		
		// В статусе "Подтвержден" - поставим все неотмененные строки в ожидаемое поступление
		// И предложим пользователю заполнитью дату поступления в строках, в которых эта дата не заполнена.
		Если Объект.Статус = ПредопределенноеЗначение("Перечисление.СтатусыЗаказовПоставщикам.Подтвержден") Или
			Объект.Статус = ПредопределенноеЗначение("Перечисление.СтатусыЗаказовПоставщикам.Закрыт") Тогда
			
			Если НЕ Объект.ПоступлениеОднойДатой Тогда
				ЗаполнитьПустыеДатыПоступления();
			Иначе
				ЗаполнитьПустуюДатуПоступления();
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	//bercut180520
	Если Объект.Статус = ПредопределенноеЗначение("Перечисление.СтатусыЗаказовПоставщикам.Закрыт") Тогда
		
		ИмеютсяНеПолученныеТоварыПоЗаказуПоставщика = Рин1_ОбщийМодуль2.ИмеютсяНеПолученныеТоварыПоЗаказуПоставщика(Объект.Ссылка);
		
		Если ИмеютсяНеПолученныеТоварыПоЗаказуПоставщика Тогда
			Режим = РежимДиалогаВопрос.ДаНет;
			Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопроса", ЭтотОбъект, Параметры);
			ПоказатьВопрос(Оповещение, НСтр("ru = 'По заказу поставщику не весь товар принят на остатки организации. Продолжить выполнение операции?';"
			+ " en = 'Do you want to continue?'"), Режим, 0);
		КонецЕсли;
		
	Иначе 
		СтатусПриИзмененииСервер();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияВопроса(Результат, СтруктураДополнительныхПараметров) Экспорт
	
	Если Результат = КодВозвратаДиалога.Нет Тогда 
		Объект.Статус = СтатусДоИзменений();
		Возврат;
	Иначе 
		СтатусПриИзмененииСервер();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция СтатусДоИзменений()
	
	Возврат Объект.Ссылка.Статус;	
	
КонецФункции // СтатусДоИзменений()


&НаСервере
&Вместо("СкорректироватьЦеныПоПоступлениямСервер")
Функция Рин1_СкорректироватьЦеныПоПоступлениямСервер()
	ЦеныСкорректированы = Ложь;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТоварыЗаказа.КодСтроки  КАК КодСтроки,
	|	ТоварыЗаказа.Количество КАК Количество,
	|	ТоварыЗаказа.Цена       КАК Цена,
	|	ТоварыЗаказа.СуммаСНДС  КАК СуммаСНДС
	|ПОМЕСТИТЬ
	|	ТоварыЗаказа
	|ИЗ
	|	&ТоварыЗаказа КАК ТоварыЗаказа
	|;
	|ВЫБРАТЬ
	|	ТоварыПоступления.КодСтроки         КАК КодСтроки,
	|	СУММА(ТоварыПоступления.Количество) КАК Количество,
	//++Шерстюк Ю.Ю. 09.04.2021 Задача № 6563 если валюта документа и валюта взаиморасчетов отличается, то суммы и цены должны браться в валюте взаиморасчетов 
	//|	СРЕДНЕЕ(ТоварыПоступления.Цена)     КАК Цена,
	//|	СУММА(ТоварыПоступления.СуммаСНДС)  КАК СуммаСНДС
	|	ВЫБОР
	|		КОГДА ТоварыПоступления.Ссылка.Валюта <> ТоварыПоступления.Ссылка.ВалютаВзаиморасчетов
	|			ТОГДА ВЫБОР
	|					КОГДА ТоварыПоступления.Ссылка.ЦенаВключаетНДС
	|						ТОГДА СРЕДНЕЕ(ВЫРАЗИТЬ(ТоварыПоступления.СуммаВзаиморасчетов / ТоварыПоступления.КоличествоУпаковок КАК ЧИСЛО(15, 2)))
	|					ИНАЧЕ СРЕДНЕЕ(ВЫРАЗИТЬ((ТоварыПоступления.СуммаВзаиморасчетов - ТоварыПоступления.СуммаНДСВзаиморасчетов) / ТоварыПоступления.КоличествоУпаковок КАК ЧИСЛО(15, 2)))
	|				КОНЕЦ
	|		ИНАЧЕ СРЕДНЕЕ(ТоварыПоступления.Цена)
	|	КОНЕЦ КАК Цена,
	|	ВЫБОР
	|		КОГДА ТоварыПоступления.Ссылка.Валюта <> ТоварыПоступления.Ссылка.ВалютаВзаиморасчетов
	|			ТОГДА ВЫБОР
	|					КОГДА ТоварыПоступления.Ссылка.ЦенаВключаетНДС
	|						ТОГДА СУММА(ТоварыПоступления.СуммаВзаиморасчетов)
	|					ИНАЧЕ СУММА(ТоварыПоступления.СуммаВзаиморасчетов - ТоварыПоступления.СуммаНДСВзаиморасчетов)
	|				КОНЕЦ
	|		ИНАЧЕ СУММА(ТоварыПоступления.СуммаСНДС)
	|	КОНЕЦ КАК СуммаСНДС
	//--Шерстюк Ю.Ю.
	|ПОМЕСТИТЬ
	|	ТоварыПоступления
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг.Товары КАК ТоварыПоступления
	|ГДЕ
	|	ТоварыПоступления.ЗаказПоставщику = &ЗаказПоставщику
	|	И ТоварыПоступления.Ссылка.Проведен
	|	И ТоварыПоступления.КодСтроки В (
	|		ВЫБРАТЬ
	|			ТоварыЗаказа.КодСтроки КАК КодСтроки
	|		ИЗ
	|			ТоварыЗаказа КАК ТоварыЗаказа
	|	)
	|СГРУППИРОВАТЬ ПО
	|	КодСтроки
	//++Шерстюк Ю.Ю. 09.04.2021
	|,
	|	ТоварыПоступления.Ссылка.Валюта,
	|	ТоварыПоступления.Ссылка.ВалютаВзаиморасчетов,
	|	ТоварыПоступления.Ссылка.ЦенаВключаетНДС

	//--Шерстюк Ю.Ю.
	|;
	|ВЫБРАТЬ
	|	ТоварыЗаказа.КодСтроки КАК КодСтроки,
	|	ТоварыПоступления.Цена КАК ЦенаПоступления
	|ИЗ
	|	ТоварыЗаказа
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	ТоварыПоступления
	|ПО
	|	ТоварыЗаказа.КодСтроки = ТоварыПоступления.КодСтроки
	|ГДЕ
	|	ТоварыЗаказа.Цена <> ТоварыПоступления.Цена
	|
	|");
	
	Запрос.УстановитьПараметр("ТоварыЗаказа", Объект.Товары.Выгрузить(, "КодСтроки,Количество,Цена,СуммаСНДС"));
	Запрос.УстановитьПараметр("ЗаказПоставщику", Объект.Ссылка);
	УстановитьПривилегированныйРежим(Истина);
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	Выборка = РезультатЗапроса[2].Выбрать();
	
	СтруктураПересчетаСуммы = ОбработкаТабличнойЧастиКлиентСервер.ПараметрыПересчетаСуммыНДСВСтрокеТЧ(Объект);
	
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ПересчитатьСумму");
	СтруктураДействий.Вставить("ПересчитатьСуммуСНДС", СтруктураПересчетаСуммы);
	СтруктураДействий.Вставить("ПересчитатьСуммуНДС", СтруктураПересчетаСуммы);
	СтруктураДействий.Вставить("ПересчитатьСуммуРучнойСкидки");
	
	Пока Выборка.Следующий() Цикл
		
		НайденныеСтроки = Объект.Товары.НайтиСтроки(Новый Структура("КодСтроки", Выборка.КодСтроки));
		
		Если НайденныеСтроки.Количество() > 0 Тогда
			
			НайденныеСтроки[0].Цена = Выборка.ЦенаПоступления;
			ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(НайденныеСтроки[0], СтруктураДействий, Неопределено);
			ЦеныСкорректированы = Истина;
			
		КонецЕсли;
		
	КонецЦикла;
	
	ОбщегоНазначенияУТ.ЗаполнитьДубликатыЗависимыхРеквизитовВКоллекции(Объект.Товары, ЗависимыеРеквизиты());
	РассчитатьИтоговыеПоказателиЗаказа(ЭтаФорма);
	
	Возврат ЦеныСкорректированы;
КонецФункции


&НаКлиенте
Процедура Рин1_ПартнерПриИзмененииПосле(Элемент)
	//++Шерстюк Ю.Ю. Задача 7625 менеджер и подразделение по договору
	Если ЗначениеЗаполнено(Объект.Договор) Тогда 
		Объект.Менеджер = ОбщегоНазначенияУТВызовСервера.ЗначениеРеквизитаОбъекта(Объект.Договор,"Менеджер");
		Объект.Подразделение = ОбщегоНазначенияУТВызовСервера.ЗначениеРеквизитаОбъекта(Объект.Договор,"Подразделение"); 
	КонецЕсли;
	//--Шерстюк Ю.Ю.
КонецПроцедуры


&НаКлиенте
Процедура Рин1_ДоговорПриИзмененииПосле(Элемент)
	//++Шерстюк Ю.Ю. Задача 7625 менеджер и подразделение по договору
	Если ЗначениеЗаполнено(Объект.Договор) Тогда 
		Объект.Менеджер = ОбщегоНазначенияУТВызовСервера.ЗначениеРеквизитаОбъекта(Объект.Договор,"Менеджер");
		Объект.Подразделение = ОбщегоНазначенияУТВызовСервера.ЗначениеРеквизитаОбъекта(Объект.Договор,"Подразделение"); 
	КонецЕсли;
	//--Шерстюк Ю.Ю.
КонецПроцедуры


&НаСервере
Процедура Рин1_ПриСозданииНаСервереПосле(Отказ, СтандартнаяОбработка)
	Если Объект.Статус = Перечисления.СтатусыЗаказовПоставщикам.Подтвержден Или 
		Объект.Статус = Перечисления.СтатусыЗаказовПоставщикам.Закрыт Тогда 
		Элементы.ГруппаПлановыеДаты.ТолькоПросмотр = Истина;
	Иначе 
		Элементы.ГруппаПлановыеДаты.ТолькоПросмотр = Ложь;
	КонецЕсли;
	
	// + [Rineco], [Киселев А.] [22.07.2021] 
	// Задача: [№ 9441 ], [# Добавить кнопки на форму]
	ДоработкаФормы_ДатаПланФакт(Отказ);
	// - [Rineco], [Киселев А.] [22.07.2021]
	
	
КонецПроцедуры


// + [Rineco], [Киселев А.] [22.07.2021] 
// Задача: [№ 9441 ], [# Добавить кнопки на форму]
Процедура ДоработкаФормы_ДатаПланФакт(Отказ)
	
	КомандаДатаОтгрузкиПлан = Команды.Добавить("ДатаОтгрузкиПланКоманда");
	КомандаДатаОтгрузкиПлан.Действие = "УстановитьДатуПлан"; 
	КомандаДатаПоступленияПлан = Команды.Добавить("ДатаПоступленияПланКоманда"); 
	КомандаДатаПоступленияПлан.Действие = "УстановитьДатуПлан";  
	
	КнопкаДатаОтгрузкиПлан = Элементы.Добавить("ДатаОтгрузкиПлан",Тип("КнопкаФормы"),Элементы.ТоварыПлановыеДатыКонтекстноеМеню);
	КнопкаДатаОтгрузкиПлан.Заголовок = "Заполнить Дата отгрузки (План)";
	КнопкаДатаОтгрузкиПлан.ИмяКоманды = "ДатаОтгрузкиПланКоманда";	
	
	КнопкаДатаОтгрузкиПлан = Элементы.Добавить("ДатаПоступленияПлан",Тип("КнопкаФормы"),Элементы.ТоварыПлановыеДатыКонтекстноеМеню);
	КнопкаДатаОтгрузкиПлан.Заголовок = "Заполнить Дата поступления (План)";
	КнопкаДатаОтгрузкиПлан.ИмяКоманды = "ДатаПоступленияПланКоманда";
	
	// + [Rineco], [Киселев А.Н.] [14.10.2021] 
	// Задача: [№ 20209], [#п.3 Установка Видимости 1С доставка]
	
	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьСервис1СДоставка")
		И НЕ ПолучитьФункциональнуюОпцию("ИспользоватьСервис1СКурьер") Тогда
		Возврат;
	КонецЕсли;	
	
	Если Не ПравоРаботыССервисомДоставки() Тогда
		Возврат;
	КонецЕсли;

	ЭлементУправления = ЭтаФорма.Элементы.Найти("СтраницаДоставка");
	Если ЭлементУправления <> Неопределено Тогда
		ЭлементУправления.Видимость = Истина;
	КонецЕсли;

	// - [Rineco], [Киселев А.Н.] [14.10.2021]
	
	
КонецПроцедуры
// - [Rineco], [Киселев А.] [22.07.2021]

// + [Rineco], [Киселев А.Н.] [14.10.2021] 
// Задача: [№ 20209], [#п.3 Установка Видимости 1С доставка]
Функция ПравоРаботыССервисомДоставки(ВыводитьСообщение = Ложь) Экспорт
	
	Если Пользователи.ЭтоПолноправныйПользователь() Тогда
		Возврат Истина;
	КонецЕсли;
	
	ЕстьПраво = ПравоДоступа("Использование", Метаданные.Обработки.СервисДоставки);
	
	Если Не ЕстьПраво И ВыводитьСообщение Тогда
		СервисДоставкиСлужебный.СообщитьПользователюОНарушенииПравДоступа();
	КонецЕсли;
	
	Возврат ЕстьПраво;
	
КонецФункции

// + [Rineco], [Киселев А.] [22.07.2021] 
// Задача: [№ 9441 ], [# Команда для заполнения Дат]
&НаКлиенте
Процедура УстановитьДатуПлан(Команда)
	
	ИмяЭлемента = ?(Команда.Имя = "ДатаОтгрузкиПланКоманда","Рин1_ПлановаяДатаОтгрузки","Рин1_ПлановаяДатаПоступления");
	ПараметрыОповещения = Новый Структура;
	ПараметрыОповещения.Вставить("ИмяЭлемента",ИмяЭлемента);
	
	Оповещение = Новый ОписаниеОповещения("ПослеВводаДаты", ЭтотОбъект,ПараметрыОповещения);
	
 
    ПоказатьВводДаты(
        Оповещение,
        ,
        "Введите дату Отгрузки/Поступления для выделенных строк", 
        ЧастиДаты.Дата
    );    
	
				
КонецПроцедуры

&НаКлиенте
Процедура ПослеВводаДаты(Дата, Параметры) Экспорт
	
	Если Дата <> Неопределено Тогда		
		Для Каждого Индекс Из Элементы.ТоварыПлановыеДаты.ВыделенныеСтроки Цикл 
			Объект.Товары[Индекс][Параметры.ИмяЭлемента] = Дата;
		КонецЦикла;
		
	Модифицированность = Истина;
		
	КонецЕсли;
 
КонецПроцедуры
// - [Rineco], [Киселев А.] [22.07.2021]

&НаКлиенте
Процедура Рин1_ПередЗаписьюПеред(Отказ, ПараметрыЗаписи)
	// + [Rineco], [Шерстюк Ю.Ю.] [30.08.2021] 
	// Задача: [№ 8957], [Строки из подтвержденного заказа удалять нельзя, можно только отменять]
	Если не Объект.Ссылка.Пустая() и (ОбщегоНазначенияУТВызовСервера.ЗначениеРеквизитаОбъекта(Объект.Ссылка,"Статус") = ПредопределенноеЗначение("Перечисление.СтатусыЗаказовПоставщикам.Подтвержден") 
		                              или ОбщегоНазначенияУТВызовСервера.ЗначениеРеквизитаОбъекта(Объект.Ссылка,"Статус") = ПредопределенноеЗначение("Перечисление.СтатусыЗаказовПоставщикам.Закрыт")) Тогда
		СтруктураВозврата = ПроверитьРасхожденияВСтрокахОбхектаИФормы();
		
		Отказ = СтруктураВозврата.Отказ;
		//Откроем форму для сопоставления
		Если Отказ Тогда
			ОписаниеОповещения = Новый ОписаниеОповещения("ВыполнитьПослеОкончания", ЭтотОбъект, ПараметрыЗаписи);
			ОткрытьФорму("ОбщаяФорма.Рин1_ФормаСопоставления", СтруктураВозврата, ЭтаФорма, ,,,ОписаниеОповещения);
		КонецЕсли;	

		
	КонецЕсли;
	// - [Rineco], [Шерстюк Ю.Ю.] [30.08.2021]
	
КонецПроцедуры
&НаСервере
Процедура ВыполнитьПослеОкончания(РезультатЗакрытия,ДополнительныеПараметры) Экспорт 
	
	Если не РезультатЗакрытия = Неопределено Тогда
		
		ТЗ_ДополнительныеСтроки = ПолучитьИзВременногоХранилища(РезультатЗакрытия);
		
		СтруктураДействий = Новый Структура;
		СтруктураПересчетаСуммы = ОбработкаТабличнойЧастиКлиентСервер.ПараметрыПересчетаСуммыНДСВСтрокеТЧ(Объект);
		СтруктураДействий.Вставить("ПересчитатьКоличествоУпаковок");
		СтруктураДействий.Вставить("ПересчитатьСуммуНДС", СтруктураПересчетаСуммы);
		СтруктураДействий.Вставить("ПересчитатьСуммуСНДС", СтруктураПересчетаСуммы);
		СтруктураДействий.Вставить("ПересчитатьСумму");
		//СтруктураДействий.Вставить("ПересчитатьСуммуСУчетомРучнойСкидки", Новый Структура("Очищать", Ложь));
		//СтруктураДействий.Вставить("ПересчитатьСуммуСУчетомАвтоматическойСкидки", Новый Структура("Очищать", Ложь));
		СтруктураДействий.Вставить("ЗаполнитьДубликатыЗависимыхРеквизитов", ЗависимыеРеквизиты());
		//СтруктураДействий.Вставить("ПересчитатьСуммуАвтоматическойСкидки");
		//СтруктураДействий.Вставить("ПересчитатьСуммуРучнойСкидки");
		
		КэшированныеЗначения = ОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруКэшируемыеЗначения();
		
		Для каждого Стр Из ТЗ_ДополнительныеСтроки Цикл
			НовСтр = Объект.Товары.Добавить();
			ЗаполнитьЗначенияСвойств(НовСтр,Стр);
			//НовСтр.КоличествоУпаковок = Стр.Количество;
			
			Отбор = Новый Структура("Номенклатура",Стр.Номенклатура);
			Массив = Объект.Ссылка.Товары.НайтиСтроки(Отбор);
			Для каждого Элемент Из Массив Цикл
				Если Элемент.Цена > 0 Тогда
					ЗаполнитьЗначенияСвойств(НовСтр,Элемент,,"Количество,КоличествоУпаковок,КодСтроки,ПричинаОтмены");
					Прервать;
				КонецЕсли;
			КонецЦикла;	
			
			ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(НовСтр, СтруктураДействий, КэшированныеЗначения);
			НовСтр.Отменено = Истина;
		КонецЦикла;
	   
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПроверитьРасхожденияВСтрокахОбхектаИФормы()
	// + [Rineco], [Шерстюк Ю.Ю.] [30.08.2021] 
	// Задача: [№ 8957], [Строки из подтвержденного заказа удалять нельзя, можно только отменять]
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ТаблицаОбъекта.Номенклатура КАК Номенклатура,
	                      |	ТаблицаОбъекта.Характеристика КАК Характеристика,
	                      |	ТаблицаОбъекта.Упаковка КАК Упаковка,
	                      |	ТаблицаОбъекта.КоличествоУпаковок КАК КоличествоУпаковок,
	                      |	ТаблицаОбъекта.Количество КАК Количество
	                      |ПОМЕСТИТЬ ТаблицаОбъекта
	                      |ИЗ
	                      |	&ТаблицаОбъекта КАК ТаблицаОбъекта
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ТаблицаФормы.КоличествоУпаковок КАК КоличествоУпаковок,
	                      |	ТаблицаФормы.Количество КАК Количество,
	                      |	ТаблицаФормы.Номенклатура КАК Номенклатура,
	                      |	ТаблицаФормы.Характеристика КАК Характеристика,
	                      |	ТаблицаФормы.Упаковка КАК Упаковка
	                      |ПОМЕСТИТЬ ТаблицаФормы
	                      |ИЗ
	                      |	&ТаблицаФормы КАК ТаблицаФормы
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ТаблицаОбъекта.Номенклатура КАК Номенклатура,
	                      |	ТаблицаОбъекта.Характеристика КАК Характеристика,
	                      |	НоменклатураСправочник.ЕдиницаИзмерения КАК Упаковка,
	                      |	СУММА(ТаблицаОбъекта.КоличествоУпаковок) КАК КоличествоУпаковок,
	                      |	СУММА(ТаблицаОбъекта.Количество) КАК Количество
	                      |ПОМЕСТИТЬ ТаблицаОбъектаИтог
	                      |ИЗ
	                      |	ТаблицаОбъекта КАК ТаблицаОбъекта
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК НоменклатураСправочник
	                      |		ПО ТаблицаОбъекта.Номенклатура = НоменклатураСправочник.Ссылка
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	ТаблицаОбъекта.Номенклатура,
	                      |	ТаблицаОбъекта.Характеристика,
	                      |	НоменклатураСправочник.ЕдиницаИзмерения
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ТаблицаФормы.Номенклатура КАК Номенклатура,
	                      |	ТаблицаФормы.Характеристика КАК Характеристика,
	                      |	НоменклатураСправочник.ЕдиницаИзмерения КАК Упаковка,
	                      |	СУММА(ТаблицаФормы.КоличествоУпаковок) КАК КоличествоУпаковок,
	                      |	СУММА(ТаблицаФормы.Количество) КАК Количество
	                      |ПОМЕСТИТЬ ТаблицаФормыИтог
	                      |ИЗ
	                      |	ТаблицаФормы КАК ТаблицаФормы
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК НоменклатураСправочник
	                      |		ПО ТаблицаФормы.Номенклатура = НоменклатураСправочник.Ссылка
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	ТаблицаФормы.Номенклатура,
	                      |	ТаблицаФормы.Характеристика,
	                      |	НоменклатураСправочник.ЕдиницаИзмерения
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ТаблицаОбъектаИтог.Номенклатура КАК Номенклатура,
	                      |	ТаблицаОбъектаИтог.Характеристика КАК Характеристика,
	                      |	ТаблицаОбъектаИтог.Упаковка КАК УпаковкаОбъект,
	                      |	ТаблицаОбъектаИтог.КоличествоУпаковок КАК КоличествоУпаковок,
	                      |	ТаблицаОбъектаИтог.Количество КАК Количество,
	                      |	ВЫБОР
	                      |		КОГДА ЕСТЬNULL(ТаблицаФормыИтог.Количество, 0) < ТаблицаОбъектаИтог.Количество
	                      |			ТОГДА ТаблицаОбъектаИтог.Количество - ЕСТЬNULL(ТаблицаФормыИтог.Количество, 0)
	                      |	КОНЕЦ КАК КоличествоОтменено,
	                      |	ВЫБОР
	                      |		КОГДА ЕСТЬNULL(ТаблицаФормыИтог.КоличествоУпаковок, 0) < ТаблицаОбъектаИтог.КоличествоУпаковок
	                      |			ТОГДА ТаблицаОбъектаИтог.КоличествоУпаковок - ЕСТЬNULL(ТаблицаФормыИтог.КоличествоУпаковок, 0)
	                      |	КОНЕЦ КАК КоличествоУпаковокОтменено,
	                      |	ТаблицаОбъектаИтог.КоличествоУпаковок КАК КоличествоУпаковокОбъект,
	                      |	ТаблицаОбъектаИтог.Количество КАК КоличествоОбъект,
	                      |	ТаблицаФормыИтог.КоличествоУпаковок КАК КоличествоУпаковокФорма,
	                      |	ТаблицаФормыИтог.Количество КАК КоличествоФорма,
	                      |	ТаблицаФормыИтог.Упаковка КАК УпаковкаФорма
	                      |ПОМЕСТИТЬ ВТ_Сравнение
	                      |ИЗ
	                      |	ТаблицаОбъектаИтог КАК ТаблицаОбъектаИтог
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаФормыИтог КАК ТаблицаФормыИтог
	                      |		ПО ТаблицаОбъектаИтог.Номенклатура = ТаблицаФормыИтог.Номенклатура
	                      |			И ТаблицаОбъектаИтог.Характеристика = ТаблицаФормыИтог.Характеристика
	                      |			И ТаблицаОбъектаИтог.Упаковка = ТаблицаФормыИтог.Упаковка
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ВТ_Сравнение.Номенклатура КАК Номенклатура,
	                      |	ВТ_Сравнение.Характеристика КАК Характеристика,
	                      |	ВТ_Сравнение.КоличествоОтменено КАК Количество,
	                      |	ВТ_Сравнение.КоличествоУпаковокОтменено КАК КоличествоУпаковок,
	                      |	ВТ_Сравнение.КоличествоУпаковокОбъект КАК КоличествоУпаковокОбъект,
	                      |	ВТ_Сравнение.КоличествоОбъект КАК КоличествоОбъект,
	                      |	ВТ_Сравнение.КоличествоУпаковокФорма КАК КоличествоУпаковокФорма,
	                      |	ВТ_Сравнение.КоличествоФорма КАК КоличествоФорма,
	                      |	ВТ_Сравнение.УпаковкаОбъект КАК УпаковкаОбъект,
	                      |	ВТ_Сравнение.УпаковкаФорма КАК УпаковкаФорма
	                      |ИЗ
	                      |	ВТ_Сравнение КАК ВТ_Сравнение
	                      |ГДЕ
	                      |	ВТ_Сравнение.КоличествоОтменено > 0
	                      |	И ВТ_Сравнение.КоличествоУпаковокОтменено > 0");
	Запрос.УстановитьПараметр("ТаблицаФормы",РеквизитФормыВЗначение("Объект.Товары").Выгрузить());
	Запрос.УстановитьПараметр("ТаблицаОбъекта", Объект.Ссылка.Товары.Выгрузить());
	тзСравнение = Запрос.Выполнить().Выгрузить();
	СтруктураВозврата = Новый Структура("СравнениеТоваров",ПоместитьВоВременноеХранилище(тзСравнение));
	СтруктураВозврата.Вставить("Отказ",?(тзСравнение.Количество()=0,Ложь,Истина));
	Возврат СтруктураВозврата;
	// - [Rineco], [Шерстюк Ю.Ю.] [30.08.2021]
КонецФункции



