
&НаСервере
&Вместо("ЗаполнитьРаспоряженияНаОтгрузку")
Процедура Рин1_ЗаполнитьРаспоряженияНаОтгрузку(ПроверятьИзменениеПараметров)
	
		Если Не ЗначениеЗаполнено(Склад) Тогда
		РаспоряженияНаОтгрузку.Очистить();
		Возврат;
	КонецЕсли;
	
	Если Не Пользователи.ЭтоПолноправныйПользователь(Неопределено) Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Склады.Ссылка
		|ИЗ
		|	Справочник.Склады КАК Склады
		|ГДЕ
		|	Склады.Ссылка = &Склад";
		
		Запрос.УстановитьПараметр("Склад", Склад);
		
		Если Запрос.Выполнить().Пустой() Тогда
			РаспоряженияНаОтгрузку.Очистить();
			Возврат;
		КонецЕсли;
		
		УстановитьПривилегированныйРежим(Истина);
	КонецЕсли;
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Склад", 				Склад);
	Запрос.УстановитьПараметр("ЗаданиеНаПеревозку", ТекущееЗаданиеНаПеревозкуОтгрузка);
	Запрос.УстановитьПараметр("ДатаОтгрузки", 		?(ЗначениеЗаполнено(ДатаОтгрузки), КонецДня(ДатаОтгрузки) + 1, ДатаОтгрузки));
	ОформлятьСначалаНакладные = Константы.ПорядокОформленияНакладныхРасходныхОрдеров.Получить() = Перечисления.ПорядокОформленияНакладныхРасходныхОрдеров.СначалаНакладные;
	Запрос.УстановитьПараметр("ОформлятьСначалаНакладные", ОформлятьСначалаНакладные);
	Запрос.УстановитьПараметр("ОтображениеДеталейОтгрузка", ОтображениеДеталейОтгрузка);
	
	Состояния = Новый Массив;
	Если СостояниеОтгрузки = "ВсеВРаботе" Тогда 
		Состояния.Добавить(Перечисления.СостоянияОтбораТоваров.ВПроцессеОтбора);
		Состояния.Добавить(Перечисления.СостоянияОтбораТоваров.ОжидаетсяОтбор);
		Состояния.Добавить(Перечисления.СостоянияОтбораТоваров.ОжидаетсяОтгрузка);
	ИначеЕсли СостояниеОтгрузки = "" Тогда
		Для Каждого Значение Из Перечисления.СостоянияОтбораТоваров Цикл 
			Состояния.Добавить(Значение);
		КонецЦикла;
	Иначе
		Состояния.Добавить(Перечисления.СостоянияОтбораТоваров[СостояниеОтгрузки]);
	КонецЕсли;
	Запрос.УстановитьПараметр("Состояния", Состояния);			
		
	// Если параметры не изменились, то формировать список заново не надо
	Если ПроверятьИзменениеПараметров
	 И ТипЗнч(ПараметрыРаспоряженияНаОтгрузку) = Тип("ФиксированнаяСтруктура")
	 И ОбщегоНазначенияУТКлиентСервер.СтруктурыРавны(ПараметрыРаспоряженияНаОтгрузку, Запрос.Параметры, "") Тогда 
		Возврат;
	КонецЕсли;
	
	// Кэшируем текущие параметры
	ПараметрыРаспоряженияНаОтгрузку = Новый Структура("Склад, ЗаданиеНаПеревозку, ДатаОтгрузки");
	ЗаполнитьЗначенияСвойств(ПараметрыРаспоряженияНаОтгрузку, Запрос.Параметры);
	ПараметрыРаспоряженияНаОтгрузку.Вставить("ОтображениеДеталейОтгрузка", ОтображениеДеталейОтгрузка);
	ПараметрыРаспоряженияНаОтгрузку = Новый ФиксированнаяСтруктура(ПараметрыРаспоряженияНаОтгрузку);
	
	ТекстЗапроса = "";
	
	ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров =
		Константы.ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров.Получить();
	
	Если ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров <> 0 Тогда
		
		ТекстЗапроса = ТекстЗапроса + "
		|ВЫБРАТЬ
		|	ТоварыКОтгрузкеОбороты.ДокументОтгрузки КАК ДокументОтгрузки,
		|	ТоварыКОтгрузкеОбороты.Номенклатура     КАК Номенклатура,
		|	ТоварыКОтгрузкеОбороты.Характеристика   КАК Характеристика,
		|	ТоварыКОтгрузкеОбороты.Назначение       КАК Назначение,
		|	ТоварыКОтгрузкеОбороты.Серия            КАК Серия,
		|	ТоварыКОтгрузкеОбороты.Склад            КАК Склад,
		|	ТоварыКОтгрузкеОбороты.КОтгрузкеПриход  КАК Количество
		|
		|ПОМЕСТИТЬ ТоварыКОтгрузкеОбороты
		|ИЗ
		|	РегистрНакопления.ТоварыКОтгрузке.Обороты(
		|			,
		|			,
		|			,
		|			&УсловиеСоединенияОбороты) КАК ТоварыКОтгрузкеОбороты
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|";
		
	КонецЕсли;
	
	Если НЕ ОтображениеДеталейОтгрузка Тогда
		
		Если СкладыСервер.НачинатьОтгрузкуПослеФормированияЗаданияНаПеревозку(Склад) Тогда
			
			ТекстЗапроса = ТекстЗапроса + 
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	СостоянияИРеквизитыДоставки.Распоряжение КАК ДокументОтгрузки,
			|	СостоянияИРеквизитыДоставки.ПолучательОтправитель КАК Получатель
			|ПОМЕСТИТЬ ВТРаспоряженияСДоставкойПоЗаданиям
			|ИЗ
			|	РегистрСведений.СостоянияИРеквизитыДоставки КАК СостоянияИРеквизитыДоставки
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТоварыКДоставке КАК ОтказОтПеревозки
			|		ПО (ОтказОтПеревозки.ЗаданиеНаПеревозку = ЗНАЧЕНИЕ(Документ.ЗаданиеНаПеревозку.ПустаяСсылка))
			|			И СостоянияИРеквизитыДоставки.Склад = ОтказОтПеревозки.Склад
			|			И (ОтказОтПеревозки.Распоряжение = СостоянияИРеквизитыДоставки.Распоряжение)
			|ГДЕ
			|	СостоянияИРеквизитыДоставки.Склад = &Склад
			|	И СостоянияИРеквизитыДоставки.СпособДоставки В(&СпособыДоставки)
			|	И ОтказОтПеревозки.Распоряжение ЕСТЬ NULL
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ВложенныйЗапрос.ДокументОтгрузки КАК ДокументОтгрузки,
			|	ВложенныйЗапрос.Получатель КАК Получатель,
			|	МИНИМУМ(ВложенныйЗапрос.Состояние) КАК Состояние
			|ПОМЕСТИТЬ ВТРаспоряженияКОтгрузке
			|ИЗ
			|	(ВЫБРАТЬ
			|		РаспоряженияКОтгрузке.ДокументОтгрузки КАК ДокументОтгрузки,
			|		РаспоряженияКОтгрузке.Получатель КАК Получатель,
			|		РаспоряженияКОтгрузке.Номенклатура КАК Номенклатура,
			|		РаспоряженияКОтгрузке.Характеристика КАК Характеристика,
			|		РаспоряженияКОтгрузке.Назначение КАК Назначение,
			|		РаспоряженияКОтгрузке.Серия КАК Серия,
			|		ВЫБОР
			|			КОГДА &ОжидаетсяОтбор
			|				ТОГДА 0
			|			КОГДА РаспоряженияКОтгрузке.СобираетсяОстаток <> 0
			|				ТОГДА 1
			|			КОГДА РаспоряженияКОтгрузке.СобраноОстаток <> 0
			|				ТОГДА 2
			|			КОГДА РаспоряженияКОтгрузке.КОформлениюОстаток <> 0
			|				ТОГДА 3
			|			ИНАЧЕ 404
			|		КОНЕЦ КАК Состояние
			|	ИЗ
			|		РегистрНакопления.ТоварыКОтгрузке.Остатки(&ДатаОтгрузки, Склад = &Склад) КАК РаспоряженияКОтгрузке
			|	ГДЕ &УсловиеТоварыКОтбору) КАК ВложенныйЗапрос
			|
			|СГРУППИРОВАТЬ ПО
			|	ВложенныйЗапрос.ДокументОтгрузки,
			|	ВложенныйЗапрос.Получатель
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	ДокументОтгрузки
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ЗаданиеНаПеревозкуРаспоряжения.Ссылка КАК Ссылка,
			|	ЗаданиеНаПеревозкуРаспоряжения.Распоряжение КАК Распоряжение,
			|	ЗаданиеНаПеревозкуРаспоряжения.ПолучательОтправитель КАК ПолучательОтправитель
			|ПОМЕСТИТЬ ВТОтборЗаданияНаПеревозку
			|ИЗ
			|	Документ.ЗаданиеНаПеревозку.Распоряжения КАК ЗаданиеНаПеревозкуРаспоряжения
			|ГДЕ
			|	ЗаданиеНаПеревозкуРаспоряжения.Ссылка.Проведен
			|	И ЗаданиеНаПеревозкуРаспоряжения.Склад = &Склад
			|	И ЗаданиеНаПеревозкуРаспоряжения.Ссылка.Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыЗаданийНаПеревозку.КПогрузке))
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Распоряжение
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ТИПЗНАЧЕНИЯ(ЗаданияНаПеревозку.Ссылка) КАК ТипДокумента,
			|	ЗаданияНаПеревозку.Ссылка КАК Распоряжение,
			|	ЗаданияНаПеревозку.Ссылка КАК ЗаданиеНаПеревозку,
			|	ЗаданияНаПеревозку.Ссылка.Номер КАК Номер,
			|	ЗаданияНаПеревозку.Ссылка.ДатаВремяРейсаПланС КАК Дата,
			|	НЕОПРЕДЕЛЕНО КАК Получатель,
			|	ВЫБОР
			|		КОГДА МИНИМУМ(ВТРаспоряженияКОтгрузке.Состояние) = 0
			|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияОтбораТоваров.ОжидаетсяОтбор)
			|		КОГДА МИНИМУМ(ВТРаспоряженияКОтгрузке.Состояние) = 1
			|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияОтбораТоваров.ВПроцессеОтбора)
			|		КОГДА МИНИМУМ(ВТРаспоряженияКОтгрузке.Состояние) = 2
			|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияОтбораТоваров.ОжидаетсяОтгрузка)
			|		КОГДА МИНИМУМ(ВТРаспоряженияКОтгрузке.Состояние) = 3
			|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияОтбораТоваров.ОжидаетсяОформлениеНакладных)
			|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СостоянияОтбораТоваров.ПустаяСсылка)
			|	КОНЕЦ КАК Состояние,
			|	1 КАК ИндексКартинки
			|ИЗ
			|	ВТОтборЗаданияНаПеревозку КАК ЗаданияНаПеревозку
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТРаспоряженияКОтгрузке КАК ВТРаспоряженияКОтгрузке
			|		ПО (ВТРаспоряженияКОтгрузке.ДокументОтгрузки = ЗаданияНаПеревозку.Распоряжение)
			|
			|СГРУППИРОВАТЬ ПО
			|	ЗаданияНаПеревозку.Ссылка,
			|	ЗаданияНаПеревозку.Ссылка.Номер,
			|	ЗаданияНаПеревозку.Ссылка.ДатаВремяРейсаПланС,
			|	ЗаданияНаПеревозку.Ссылка
			|
			|ИМЕЮЩИЕ
			|	ВЫБОР
			|		КОГДА МИНИМУМ(ВТРаспоряженияКОтгрузке.Состояние) = 0
			|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияОтбораТоваров.ОжидаетсяОтбор)
			|		КОГДА МИНИМУМ(ВТРаспоряженияКОтгрузке.Состояние) = 1
			|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияОтбораТоваров.ВПроцессеОтбора)
			|		КОГДА МИНИМУМ(ВТРаспоряженияКОтгрузке.Состояние) = 2
			|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияОтбораТоваров.ОжидаетсяОтгрузка)
			|		КОГДА МИНИМУМ(ВТРаспоряженияКОтгрузке.Состояние) = 3
			|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияОтбораТоваров.ОжидаетсяОформлениеНакладных)
			|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СостоянияОтбораТоваров.ПустаяСсылка)
			|	КОНЕЦ В (&Состояния)
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			//++ НЕ УТ
			|	ВЫБОР
			|		КОГДА РаспоряженияКОтгрузке.ДокументОтгрузки ССЫЛКА Документ.ДвижениеПродукцииИМатериалов
			|			ТОГДА ПРЕДСТАВЛЕНИЕ(ЕСТЬNULL(РеестрДокументов.ХозяйственнаяОперация, ТИПЗНАЧЕНИЯ(РаспоряженияКОтгрузке.ДокументОтгрузки)))
			|		ИНАЧЕ 
			//-- НЕ УТ
			|	ТИПЗНАЧЕНИЯ(РаспоряженияКОтгрузке.ДокументОтгрузки)
			//++ НЕ УТ
			|	КОНЕЦ
			//-- НЕ УТ
			|,
			|	РаспоряженияКОтгрузке.ДокументОтгрузки,
			|	ЗНАЧЕНИЕ(Документ.ЗаданиеНаПеревозку.ПустаяСсылка),
			|	ЕСТЬNULL(РеестрДокументов.НомерДокументаИБ, """"),
			|	ЕСТЬNULL(РеестрДокументов.ДатаДокументаИБ, ДАТАВРЕМЯ(1,1,1)),
		//{{20201012 ГлазуновДВ	
			|	ВТРаспоряженияКОтгрузке.ДокументОтгрузки.Рин1_ДатаТН КАК ДатаТН,
			|	ВТРаспоряженияКОтгрузке.ДокументОтгрузки.Рин1_НомерТН КАК НомерТН,
			//|	ВТРаспоряженияКОтгрузке.ДокументОтгрузки.Комментарий КАК Комментарий,
		//}}20201012 ГлазуновДВ	
			|	РаспоряженияКОтгрузке.Получатель,
			|	ВЫБОР
			|		КОГДА РаспоряженияКОтгрузке.Состояние = 0
			|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияОтбораТоваров.ОжидаетсяОтбор)
			|		КОГДА РаспоряженияКОтгрузке.Состояние = 1
			|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияОтбораТоваров.ВПроцессеОтбора)
			|		КОГДА РаспоряженияКОтгрузке.Состояние = 2
			|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияОтбораТоваров.ОжидаетсяОтгрузка)
			|		КОГДА РаспоряженияКОтгрузке.Состояние = 3
			|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияОтбораТоваров.ОжидаетсяОформлениеНакладных)
			|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СостоянияОтбораТоваров.ПустаяСсылка)
			|	КОНЕЦ,
			|	0
			|ИЗ
			|	ВТРаспоряженияКОтгрузке КАК РаспоряженияКОтгрузке
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РеестрДокументов КАК РеестрДокументов
			|		ПО РаспоряженияКОтгрузке.ДокументОтгрузки = РеестрДокументов.Ссылка
			|			И (НЕ РеестрДокументов.ДополнительнаяЗапись)
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРаспоряженияСДоставкойПоЗаданиям КАК ВТРаспоряженияСДоставкойПоЗаданиям
			|		ПО РаспоряженияКОтгрузке.ДокументОтгрузки = ВТРаспоряженияСДоставкойПоЗаданиям.ДокументОтгрузки
			|ГДЕ
			|	ВТРаспоряженияСДоставкойПоЗаданиям.ДокументОтгрузки ЕСТЬ NULL
			|	И ВЫБОР
			|			КОГДА РаспоряженияКОтгрузке.Состояние = 0
			|				ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияОтбораТоваров.ОжидаетсяОтбор)
			|			КОГДА РаспоряженияКОтгрузке.Состояние = 1
			|				ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияОтбораТоваров.ВПроцессеОтбора)
			|			КОГДА РаспоряженияКОтгрузке.Состояние = 2
			|				ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияОтбораТоваров.ОжидаетсяОтгрузка)
			|			КОГДА РаспоряженияКОтгрузке.Состояние = 3
			|				ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияОтбораТоваров.ОжидаетсяОформлениеНакладных)
			|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СостоянияОтбораТоваров.ПустаяСсылка)
			|		КОНЕЦ В (&Состояния)
			|
			|УПОРЯДОЧИТЬ ПО
			|	Дата";
			
			СпособыДоставки = ДоставкаТоваровКлиентСервер.СпособыДоставкиДоКлиентаСНашимУчастием(
				ПолучитьФункциональнуюОпцию("ИспользоватьЗаданияНаПеревозкуДляУчетаДоставкиПеревозчиками"));
			
			Запрос.УстановитьПараметр("СпособыДоставки", СпособыДоставки);
						
		Иначе
			ТекстЗапроса = ТекстЗапроса + "
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ВложенныйЗапрос.ДокументОтгрузки КАК Распоряжение,
			|	ВложенныйЗапрос.Получатель КАК Получатель,
			|	ВЫБОР
			|		КОГДА МИНИМУМ(ВложенныйЗапрос.Состояние) = 0
			|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияОтбораТоваров.ОжидаетсяОтбор)
			|		КОГДА МИНИМУМ(ВложенныйЗапрос.Состояние) = 1
			|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияОтбораТоваров.ВПроцессеОтбора)
			|		КОГДА МИНИМУМ(ВложенныйЗапрос.Состояние) = 2
			|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияОтбораТоваров.ОжидаетсяОтгрузка)
			|		КОГДА МИНИМУМ(ВложенныйЗапрос.Состояние) = 3
			|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияОтбораТоваров.ОжидаетсяОформлениеНакладных)
			|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СостоянияОтбораТоваров.ПустаяСсылка)
			|	КОНЕЦ КАК Состояние
			|ПОМЕСТИТЬ РаспоряженияИСостояния
			|ИЗ
			|	(ВЫБРАТЬ
			|		РаспоряженияКОтгрузке.ДокументОтгрузки КАК ДокументОтгрузки,
			|		РаспоряженияКОтгрузке.Получатель КАК Получатель,
			|		РаспоряженияКОтгрузке.Номенклатура КАК Номенклатура,
			|		РаспоряженияКОтгрузке.Характеристика КАК Характеристика,
			|		РаспоряженияКОтгрузке.Назначение КАК Назначение,
			|		РаспоряженияКОтгрузке.Серия КАК Серия,
			|		ВЫБОР
			|			КОГДА &ОжидаетсяОтбор
			|				ТОГДА 0
			|			КОГДА РаспоряженияКОтгрузке.СобираетсяОстаток <> 0
			|				ТОГДА 1
			|			КОГДА РаспоряженияКОтгрузке.СобраноОстаток <> 0
			|				ТОГДА 2
			|			КОГДА РаспоряженияКОтгрузке.КОформлениюОстаток <> 0
			|				ТОГДА 3
			|			ИНАЧЕ 404
			|		КОНЕЦ КАК Состояние
			|	ИЗ
			|		РегистрНакопления.ТоварыКОтгрузке.Остатки(&ДатаОтгрузки, Склад = &Склад) КАК РаспоряженияКОтгрузке
			|	ГДЕ &УсловиеТоварыКОтбору) КАК ВложенныйЗапрос
			|
			|СГРУППИРОВАТЬ ПО
			|	ВложенныйЗапрос.ДокументОтгрузки,
			|	ВложенныйЗапрос.Получатель
			|
			|ИМЕЮЩИЕ
			|	ВЫБОР
			|		КОГДА МИНИМУМ(ВложенныйЗапрос.Состояние) = 0
			|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияОтбораТоваров.ОжидаетсяОтбор)
			|		КОГДА МИНИМУМ(ВложенныйЗапрос.Состояние) = 1
			|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияОтбораТоваров.ВПроцессеОтбора)
			|		КОГДА МИНИМУМ(ВложенныйЗапрос.Состояние) = 2
			|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияОтбораТоваров.ОжидаетсяОтгрузка)
			|		КОГДА МИНИМУМ(ВложенныйЗапрос.Состояние) = 3
			|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияОтбораТоваров.ОжидаетсяОформлениеНакладных)
			|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СостоянияОтбораТоваров.ПустаяСсылка)
			|	КОНЕЦ В (&Состояния)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	РаспоряженияИСостояния.Распоряжение КАК Распоряжение,
			//bercut020420
			| ВЫБОР
			|     КОГДА РаспоряженияИСостояния.Распоряжение ССЫЛКА Документ.ЗаказКлиента
			|        ТОГДА ВЫБОР
			|                  КОГДА РаспоряженияИСостояния.Распоряжение.Приоритет.Наименование = ""Высокий""
			|                      ТОГДА 0
			|                  ИНАЧЕ 1
			|              КОНЕЦ
			|     ИНАЧЕ 1
			| КОНЕЦ 
			| КАК КартинкаПриоритета,
			//
		//{{20201012 ГлазуновДВ
			|	РаспоряженияИСостояния.Распоряжение.Рин1_ДатаТН КАК ДатаТН,
			|	РаспоряженияИСостояния.Распоряжение.Рин1_НомерТН КАК НомерТН,
			//|	РаспоряженияИСостояния.Распоряжение.Комментарий КАК Комментарий,
			|	ВЫРАЗИТЬ(РаспоряженияИСостояния.Распоряжение.Комментарий КАК Строка(150)) КАК Комментарий,
		//}}20201012 ГлазуновДВ	
			|	РаспоряженияИСостояния.Получатель КАК Получатель,
			|	ЕСТЬNULL(РеестрДокументов.НомерДокументаИБ, """") КАК Номер,
			|	ЕСТЬNULL(РеестрДокументов.ДатаДокументаИБ, ДАТАВРЕМЯ(1,1,1)) КАК Дата,
			//++ НЕ УТ
			|	ВЫБОР
			|		КОГДА РаспоряженияИСостояния.Распоряжение ССЫЛКА Документ.ДвижениеПродукцииИМатериалов
			|			ТОГДА ПРЕДСТАВЛЕНИЕ(ЕСТЬNULL(РеестрДокументов.ХозяйственнаяОперация, ТИПЗНАЧЕНИЯ(РаспоряженияИСостояния.Распоряжение)))
			|		ИНАЧЕ 
			//-- НЕ УТ
			|	ТИПЗНАЧЕНИЯ(РаспоряженияИСостояния.Распоряжение)
			//++ НЕ УТ
			|	КОНЕЦ
			//-- НЕ УТ
			| 	КАК ТипДокумента,
			|	РаспоряженияИСостояния.Состояние,
			|	0 КАК ИндексКартинки
			|ИЗ
			|	РаспоряженияИСостояния КАК РаспоряженияИСостояния
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РеестрДокументов КАК РеестрДокументов
			|		ПО РаспоряженияИСостояния.Распоряжение = РеестрДокументов.Ссылка
			|			И (НЕ РеестрДокументов.ДополнительнаяЗапись)
			|
			|УПОРЯДОЧИТЬ ПО
			|	РеестрДокументов.ДатаДокументаИБ";
		КонецЕсли;
		
	Иначе // ОтображениеДеталейОтгрузка
	
		ТекстЗапроса = ТекстЗапроса + "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВложенныйЗапрос.ДокументОтгрузки КАК Распоряжение,
		|	ВложенныйЗапрос.Получатель КАК Получатель,
		|	ВЫБОР
		|		КОГДА МИНИМУМ(ВложенныйЗапрос.Состояние) = 0
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияОтбораТоваров.ОжидаетсяОтбор)
		|		КОГДА МИНИМУМ(ВложенныйЗапрос.Состояние) = 1
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияОтбораТоваров.ВПроцессеОтбора)
		|		КОГДА МИНИМУМ(ВложенныйЗапрос.Состояние) = 2
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияОтбораТоваров.ОжидаетсяОтгрузка)
		|		КОГДА МИНИМУМ(ВложенныйЗапрос.Состояние) = 3
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияОтбораТоваров.ОжидаетсяОформлениеНакладных)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СостоянияОтбораТоваров.ПустаяСсылка)
		|	КОНЕЦ КАК Состояние
		|ПОМЕСТИТЬ РаспоряженияИСостояния
		|ИЗ
		|	(ВЫБРАТЬ
		|		РаспоряженияКОтгрузке.ДокументОтгрузки КАК ДокументОтгрузки,
		|		РаспоряженияКОтгрузке.Получатель КАК Получатель,
		|		РаспоряженияКОтгрузке.Номенклатура КАК Номенклатура,
		|		РаспоряженияКОтгрузке.Характеристика КАК Характеристика,
		|		РаспоряженияКОтгрузке.Назначение КАК Назначение,
		|		РаспоряженияКОтгрузке.Серия КАК Серия,
		|		ВЫБОР
		|			КОГДА &ОжидаетсяОтбор
		|				ТОГДА 0
		|			КОГДА РаспоряженияКОтгрузке.СобираетсяОстаток <> 0
		|				ТОГДА 1
		|			КОГДА РаспоряженияКОтгрузке.СобраноОстаток <> 0
		|				ТОГДА 2
		|			КОГДА РаспоряженияКОтгрузке.КОформлениюОстаток <> 0
		|				ТОГДА 3
		|			ИНАЧЕ 404
		|		КОНЕЦ КАК Состояние
		|	ИЗ
		|		РегистрНакопления.ТоварыКОтгрузке.Остатки(
		|				&ДатаОтгрузки,
		|				Склад = &Склад
		|					И ДокументОтгрузки В
		|						(ВЫБРАТЬ
		|							ЗаданиеНаПеревозкуРаспоряжения.Распоряжение КАК ДокументОтгрузки
		|						ИЗ
		|							Документ.ЗаданиеНаПеревозку.Распоряжения КАК ЗаданиеНаПеревозкуРаспоряжения
		|						ГДЕ
		|							ЗаданиеНаПеревозкуРаспоряжения.Ссылка = &ЗаданиеНаПеревозку)) КАК РаспоряженияКОтгрузке
		|	ГДЕ &УсловиеТоварыКОтбору) КАК ВложенныйЗапрос
		|
		|СГРУППИРОВАТЬ ПО
		|	ВложенныйЗапрос.ДокументОтгрузки,
		|	ВложенныйЗапрос.Получатель
		|
		|ИМЕЮЩИЕ
		|	ВЫБОР
		|		КОГДА МИНИМУМ(ВложенныйЗапрос.Состояние) = 0
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияОтбораТоваров.ОжидаетсяОтбор)
		|		КОГДА МИНИМУМ(ВложенныйЗапрос.Состояние) = 1
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияОтбораТоваров.ВПроцессеОтбора)
		|		КОГДА МИНИМУМ(ВложенныйЗапрос.Состояние) = 2
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияОтбораТоваров.ОжидаетсяОтгрузка)
		|		КОГДА МИНИМУМ(ВложенныйЗапрос.Состояние) = 3
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияОтбораТоваров.ОжидаетсяОформлениеНакладных)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СостоянияОтбораТоваров.ПустаяСсылка)
		|	КОНЕЦ В (&Состояния)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		//++ НЕ УТ
		|	ВЫБОР
		|		КОГДА РаспоряженияИСостояния.Распоряжение ССЫЛКА Документ.ДвижениеПродукцииИМатериалов
		|			ТОГДА ПРЕДСТАВЛЕНИЕ(ЕСТЬNULL(РеестрДокументов.ХозяйственнаяОперация, ТИПЗНАЧЕНИЯ(РаспоряженияИСостояния.Распоряжение)))
		|		ИНАЧЕ 
		//-- НЕ УТ
		|	ТИПЗНАЧЕНИЯ(РаспоряженияИСостояния.Распоряжение)
		//++ НЕ УТ
		|	КОНЕЦ
		//-- НЕ УТ
		| 	КАК ТипДокумента,
		|	3 КАК ИндексКартинки,
		|	РаспоряженияИСостояния.Распоряжение,
		|	&ЗаданиеНаПеревозку КАК ЗаданиеНаПеревозку,
	//{{20201012 ГлазуновДВ	
		|	РаспоряженияИСостояния.Распоряжение.Рин1_ДатаТН КАК ДатаТН,
		|	РаспоряженияИСостояния.Распоряжение.Рин1_НомерТН КАК НомерТН,
		//|	РаспоряженияИСостояния.Распоряжение.Комментарий КАК Комментарий,
	//}}20201012 ГлазуновДВ	
		|	РаспоряженияИСостояния.Получатель,
		|	ЕСТЬNULL(РеестрДокументов.НомерДокументаИБ, """") КАК Номер,
		|	ЕСТЬNULL(РеестрДокументов.ДатаДокументаИБ, ДАТАВРЕМЯ(1,1,1)) КАК Дата,
		|	РаспоряженияИСостояния.Состояние,
		|	1 КАК Порядок
		|ИЗ
		|	РаспоряженияИСостояния КАК РаспоряженияИСостояния
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РеестрДокументов КАК РеестрДокументов
		|		ПО РаспоряженияИСостояния.Распоряжение = РеестрДокументов.Ссылка
		|			И (НЕ РеестрДокументов.ДополнительнаяЗапись)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ТИПЗНАЧЕНИЯ(ЗаданиеНаПеревозку.Ссылка),
		|	2,
		|	ЗаданиеНаПеревозку.Ссылка,
		|	ЗаданиеНаПеревозку.Ссылка,
		|	НЕОПРЕДЕЛЕНО,
		|	"""",
		|	ДАТАВРЕМЯ(1, 1, 1),
		|	ЗНАЧЕНИЕ(Перечисление.СостоянияОтбораТоваров.ПустаяСсылка),
		|	0
		|ИЗ
		|	Документ.ЗаданиеНаПеревозку КАК ЗаданиеНаПеревозку
		|ГДЕ
		|	ЗаданиеНаПеревозку.Ссылка = &ЗаданиеНаПеревозку
		|
		|УПОРЯДОЧИТЬ ПО
		|	Порядок,
		|	Дата";
		
	КонецЕсли;
	
	Если ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров <> 0 Тогда
		
		ОжидаетсяОтбор = 
		"		&ОформлятьСначалаНакладные
		|			И ВЫБОР
		|				КОГДА РаспоряженияКОтгрузке.КОтгрузкеОстаток - РаспоряженияКОтгрузке.КОформлениюОстаток - РаспоряженияКОтгрузке.СобираетсяОстаток - РаспоряженияКОтгрузке.СобраноОстаток >= 0
		|					ТОГДА РаспоряженияКОтгрузке.КОтгрузкеОстаток - РаспоряженияКОтгрузке.КОформлениюОстаток - РаспоряженияКОтгрузке.СобираетсяОстаток - РаспоряженияКОтгрузке.СобраноОстаток
		|				ИНАЧЕ -(РаспоряженияКОтгрузке.КОтгрузкеОстаток - РаспоряженияКОтгрузке.КОформлениюОстаток - РаспоряженияКОтгрузке.СобираетсяОстаток - РаспоряженияКОтгрузке.СобраноОстаток)
		|			КОНЕЦ > ВЫБОР
		|				КОГДА РаспоряженияКОтгрузке.Номенклатура.ЕдиницаИзмерения.ТипИзмеряемойВеличины В (&МерныеТипыЕдиницИзмерений)
		|					ТОГДА &ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров / 100 * ТоварыКОтгрузкеОбороты.Количество
		|				ИНАЧЕ 0
		|			КОНЕЦ
		|		ИЛИ НЕ &ОформлятьСначалаНакладные
		|			И ВЫБОР
		|				КОГДА РаспоряженияКОтгрузке.КОтгрузкеОстаток - РаспоряженияКОтгрузке.СобираетсяОстаток - РаспоряженияКОтгрузке.СобраноОстаток >= 0
		|					ТОГДА РаспоряженияКОтгрузке.КОтгрузкеОстаток - РаспоряженияКОтгрузке.СобираетсяОстаток - РаспоряженияКОтгрузке.СобраноОстаток
		|				ИНАЧЕ -(РаспоряженияКОтгрузке.КОтгрузкеОстаток - РаспоряженияКОтгрузке.СобираетсяОстаток - РаспоряженияКОтгрузке.СобраноОстаток)
		|			КОНЕЦ > ВЫБОР
		|				КОГДА РаспоряженияКОтгрузке.Номенклатура.ЕдиницаИзмерения.ТипИзмеряемойВеличины В (&МерныеТипыЕдиницИзмерений)
		|					ТОГДА &ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров / 100 * ТоварыКОтгрузкеОбороты.Количество
		|				ИНАЧЕ 0
		|			КОНЕЦ";
				
		УсловиеТоварыКОтбору = "
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТоварыКОтгрузкеОбороты КАК ТоварыКОтгрузкеОбороты
		|		ПО РаспоряженияКОтгрузке.ДокументОтгрузки = ТоварыКОтгрузкеОбороты.ДокументОтгрузки
		|			И РаспоряженияКОтгрузке.Номенклатура = ТоварыКОтгрузкеОбороты.Номенклатура
		|			И РаспоряженияКОтгрузке.Характеристика = ТоварыКОтгрузкеОбороты.Характеристика
		|			И РаспоряженияКОтгрузке.Назначение = ТоварыКОтгрузкеОбороты.Назначение
		|			И РаспоряженияКОтгрузке.Серия = ТоварыКОтгрузкеОбороты.Серия
		|			И РаспоряженияКОтгрузке.Склад = ТоварыКОтгрузкеОбороты.Склад
		|ГДЕ
		|
		|	РаспоряженияКОтгрузке.КОформлениюОстаток >
		|		ВЫБОР
		|			КОГДА РаспоряженияКОтгрузке.Номенклатура.ЕдиницаИзмерения.ТипИзмеряемойВеличины В (&МерныеТипыЕдиницИзмерений)
		|				ТОГДА &ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров / 100 * ТоварыКОтгрузкеОбороты.Количество
		|					ИНАЧЕ 0
		|		КОНЕЦ
		|
		|	ИЛИ РаспоряженияКОтгрузке.СобираетсяОстаток <> 0
		|	ИЛИ РаспоряженияКОтгрузке.СобраноОстаток <> 0
		|	ИЛИ (&ОжидаетсяОтбор)";
		
		УсловиеТоварыКОтбору = СтрЗаменить(УсловиеТоварыКОтбору,"&ОжидаетсяОтбор", ОжидаетсяОтбор);
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"ГДЕ &УсловиеТоварыКОтбору", УсловиеТоварыКОтбору);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&ОжидаетсяОтбор", ОжидаетсяОтбор);
		Запрос.УстановитьПараметр("ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров",ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров);
		Запрос.УстановитьПараметр("МерныеТипыЕдиницИзмерений", Справочники.УпаковкиЕдиницыИзмерения.МерныеТипыЕдиницИзмерений());
	Иначе
		
		ОжидаетсяОтбор = 
		"&ОформлятьСначалаНакладные
		|			И РаспоряженияКОтгрузке.КОтгрузкеОстаток - РаспоряженияКОтгрузке.КОформлениюОстаток - РаспоряженияКОтгрузке.СобираетсяОстаток - РаспоряженияКОтгрузке.СобраноОстаток > 0
		|		ИЛИ НЕ &ОформлятьСначалаНакладные
		|			И РаспоряженияКОтгрузке.КОтгрузкеОстаток - РаспоряженияКОтгрузке.СобираетсяОстаток - РаспоряженияКОтгрузке.СобраноОстаток > 0";
		
		УсловиеТоварыКОтбору = 
		"ГДЕ 
		|	(РаспоряженияКОтгрузке.КОформлениюОстаток <> 0
		|			ИЛИ (&ОжидаетсяОтбор)
		|			ИЛИ РаспоряженияКОтгрузке.СобираетсяОстаток <> 0
		|			ИЛИ РаспоряженияКОтгрузке.СобраноОстаток <> 0)";
		
		УсловиеТоварыКОтбору = СтрЗаменить(УсловиеТоварыКОтбору,"&ОжидаетсяОтбор", ОжидаетсяОтбор);
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"ГДЕ &УсловиеТоварыКОтбору", УсловиеТоварыКОтбору);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&ОжидаетсяОтбор", ОжидаетсяОтбор);
		
	КонецЕсли;
	
	Если ОтображениеДеталейОтгрузка Тогда
		УсловиеСоединенияОбороты = "Склад = &Склад
		|					И ДокументОтгрузки В
		|						(ВЫБРАТЬ
		|							ЗаданиеНаПеревозкуРаспоряжения.Распоряжение КАК ДокументОтгрузки
		|						ИЗ
		|							Документ.ЗаданиеНаПеревозку.Распоряжения КАК ЗаданиеНаПеревозкуРаспоряжения
		|						ГДЕ
		|							ЗаданиеНаПеревозкуРаспоряжения.Ссылка = &ЗаданиеНаПеревозку)";
	Иначе
		УсловиеСоединенияОбороты = "Склад = &Склад";
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&УсловиеСоединенияОбороты", УсловиеСоединенияОбороты);
	
	Запрос.Текст = ТекстЗапроса;
	
	// Запомним текущую строку таблицы распоряжений
	Если ЗначениеЗаполнено(Элементы.РаспоряженияНаОтгрузку.ТекущаяСтрока) Тогда
		ТекущаяСтрокаРаспоряженияНаОтгрузку = 
			РаспоряженияНаОтгрузку.НайтиПоИдентификатору(Элементы.РаспоряженияНаОтгрузку.ТекущаяСтрока);
		Если ТекущаяСтрокаРаспоряженияНаОтгрузку <> Неопределено Тогда
			ТекущееРаспоряжение = ТекущаяСтрокаРаспоряженияНаОтгрузку.Распоряжение;
		КонецЕсли;		
	Иначе
		ТекущееРаспоряжение = Неопределено;
	КонецЕсли;
	
	РаспоряженияНаОтгрузку.Загрузить(Запрос.Выполнить().Выгрузить());
	
	// Восстановим текущую строку
	Если ЗначениеЗаполнено(ТекущееРаспоряжение) Тогда
		Строки = РаспоряженияНаОтгрузку.НайтиСтроки(Новый Структура("Распоряжение", ТекущееРаспоряжение));
		Если Строки.Количество() > 0 Тогда
			Элементы.РаспоряженияНаОтгрузку.ТекущаяСтрока = Строки[0].ПолучитьИдентификатор();
		КонецЕсли;
	ИначеЕсли РаспоряженияНаОтгрузку.Количество() > 0 Тогда
		Элементы.РаспоряженияНаОтгрузку.ТекущаяСтрока = РаспоряженияНаОтгрузку[0].ПолучитьИдентификатор();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
&Вместо("УстановитьУсловноеОформление")
Процедура Рин1_УстановитьУсловноеОформление()
	
	//УсловноеОформление.Элементы.Очистить();
	
КонецПроцедуры

// + [Rineco], [Киселев А.Н.] [14.09.2021] 
// Задача: [№ 17329], [# Доработка отгрузка]
&НаКлиенте
Процедура Рин1_УстановитьОтветственногоВместо(Команда)
	ОчиститьСообщения();
	ОписаниеПослевводаЗначения = Новый ОписаниеОповещения("ВыборЗначенияЗавершение",ЭтотОбъект);
	ОткрытьФорму("Обработка.УправлениеОтгрузкой.Форма.РИНЭКО_ФормаВыбораПользователя",,ЭтаФорма,,,,ОписаниеПослевводаЗначения);
КонецПроцедуры

&НаКлиенте
Процедура ВыборЗначенияЗавершение(Результат,Параметры) Экспорт 
	
	Если Результат = Неопределено Тогда 
		Сообщить("Пользователь не выбран !");
		Возврат;
	КонецЕсли;
	
	МассивДокументов = ОбщегоНазначенияУТКлиент.ПроверитьПолучитьВыделенныеВСпискеСсылки(Элементы.ОрдераВРаботе);
	
	Если МассивДокументов.Количество() = 0 Тогда
		
		Сообщить("Нет выделенных строк");
		Возврат;
		
	КонецЕсли;
	
	УстановитьОтветственногоВОрдерах(МассивДокументов,Результат);
	ОбновитьИнтерфейс();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтветственногоВОрдерах(МассивДокументов,ВыбранныйПользователь)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Для Каждого ЭлементМассива Из МассивДокументов Цикл 
		
		Попытка
			ОрдерОбъект = ЭлементМассива.ПолучитьОбъект();
			ОрдерОбъект.Заблокировать();
			
			ОрдерОбъект.Ответственный = ВыбранныйПользователь;
			
			ОрдерОбъект.Записать();
			ОрдерОбъект.Разблокировать();
			
		Исключение
			Сообщить(ОписаниеОшибки());
		КонецПопытки;
		
	КонецЦикла;
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

// - [Rineco], [Киселев А.Н.] [14.09.2021]