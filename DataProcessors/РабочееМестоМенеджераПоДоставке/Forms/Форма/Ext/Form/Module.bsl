
&НаСервере
&Вместо("ОбновитьСтраницуФормированияЗаданий")
Процедура Рин1_ОбновитьСтраницуФормированияЗаданий()
	ЗаданияНаПеревозкуПланируемые.ПолучитьЭлементы().Очистить();
	Объект.РаспоряженияВЗаданияхНаПеревозку.Очистить();
	РаспоряженияНаДоставку.ПолучитьЭлементы().Очистить();
	ИтогоВес = 0;
	ИтогоОбъем = 0;
	
	Если НЕ ЗначениеЗаполнено(Склад) Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗаданиеНаПеревозку.Номер КАК НомерЗадания,
	|	ЗаданиеНаПеревозку.Склад КАК Склад,
	|	ЗаданиеНаПеревозку.Ссылка КАК Ссылка,
	|	ЗаданиеНаПеревозку.ВерсияДанных КАК ВерсияДанных,
	|	ЗаданиеНаПеревозку.Перевозчик КАК Перевозчик,
	|	ЗаданиеНаПеревозку.Контрагент КАК Контрагент,
	|	ЗаданиеНаПеревозку.БанковскийСчетПеревозчика КАК БанковскийСчетПеревозчика,
	|	ЗаданиеНаПеревозку.ЗаданиеВыполняет КАК ЗаданиеВыполняет,
	|	ВЫБОР
	|		КОГДА ЗаданиеНаПеревозку.ЗаданиеВыполняет = ЗНАЧЕНИЕ(Перечисление.ТипыИсполнителейЗаданийНаПеревозку.НашаТранспортнаяСлужба)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ЭтоНашаДоставка,
	|	ЗаданиеНаПеревозку.ДатаВремяРейсаПланС КАК ДатаВремяРейсаПланС,
	|	ЗаданиеНаПеревозку.ДатаВремяРейсаПланПо КАК ДатаВремяРейсаПланПо,
	|	ЗаданиеНаПеревозку.ТранспортноеСредство КАК Транспорт,
	|	ЗаданиеНаПеревозку.ТранспортноеСредство.ВместимостьПредставление КАК ВместимостьПредставление,
	|	ЗаданиеНаПеревозку.ДополнительнаяИнформация КАК ДополнительнаяИнформацияЗадание,
	|	ЗаданиеНаПеревозку.ТранспортноеСредство.ГрузоподъемностьВТоннах / &КоэффициентПересчетаВТонны КАК ГрузоподъемностьВЕдПользователя,
	|	ЗаданиеНаПеревозку.ТранспортноеСредство.ВместимостьВКубическихМетрах / &КоэффициентПересчетаВКубическиеМетры КАК ВместимостьВЕдПользователя,
	|
	|	ЗаданиеНаПеревозкуМаршрут.Адрес КАК Адрес,
	|	ЗаданиеНаПеревозкуМаршрут.АдресЗначенияПолей КАК АдресЗначенияПолей,
	|	ЗаданиеНаПеревозкуМаршрут.Зона КАК Зона,
	|	ЗаданиеНаПеревозкуМаршрут.Вес КАК Вес,
	|	ЗаданиеНаПеревозкуМаршрут.Объем КАК Объем,
	|	ЗаданиеНаПеревозкуМаршрут.ВремяС КАК ВремяС,
	|	ЗаданиеНаПеревозкуМаршрут.ВремяПо КАК ВремяПо,
	|	ЗаданиеНаПеревозкуМаршрут.ДополнительнаяИнформация КАК ДополнительнаяИнформация,
	|	ЗаданиеНаПеревозкуМаршрут.НомерСтроки КАК ПорядокВМаршруте,
	|	ЗаданиеНаПеревозкуМаршрут.КлючСвязи КАК КлючСвязи,
	|
	|	ЗаданиеНаПеревозкуРаспоряжения.Склад КАК РаспоряжениеСклад,
	|	ЗаданиеНаПеревозкуРаспоряжения.Распоряжение КАК Распоряжение,
	|	ЗаданиеНаПеревозкуРаспоряжения.Распоряжение ССЫЛКА Документ.ПоручениеЭкспедитору КАК ЭтоПоручениеЭкспедитору,
	|	ЗаданиеНаПеревозкуРаспоряжения.Вес КАК РаспоряжениеВес,
	|	ЗаданиеНаПеревозкуРаспоряжения.Объем КАК РаспоряжениеОбъем,
	|	ЗаданиеНаПеревозкуРаспоряжения.ПолучательОтправитель КАК ПолучательОтправитель,
	|	ЗаданиеНаПеревозкуРаспоряжения.Перевозчик КАК РаспоряжениеПеревозчик,
	|	ЗаданиеНаПеревозкуРаспоряжения.ВремяС КАК РаспоряжениеВремяС,
	|	ЗаданиеНаПеревозкуРаспоряжения.ВремяПо КАК РаспоряжениеВремяПо,
	|	ЗаданиеНаПеревозкуРаспоряжения.ДополнительнаяИнформация КАК РаспоряжениеДополнительнаяИнформация,
	|	ЗаданиеНаПеревозкуРаспоряжения.ДоставляетсяПолностью КАК ДоставляетсяПолностью
	//++Шерстюк Ю.Ю. 22.04.2021
	|,
	|ВЫБОР
	|	КОГДА ТИПЗНАЧЕНИЯ(ЗаданиеНаПеревозкуРаспоряжения.Распоряжение) = ТИП(Документ.ЗаказКлиента)
	|			ИЛИ ТИПЗНАЧЕНИЯ(ЗаданиеНаПеревозкуРаспоряжения.Распоряжение) = ТИП(Документ.ЗаказДавальца)
	|			ИЛИ ТИПЗНАЧЕНИЯ(ЗаданиеНаПеревозкуРаспоряжения.Распоряжение) = ТИП(Документ.ЗаказПереработчику)
	|			ИЛИ ТИПЗНАЧЕНИЯ(ЗаданиеНаПеревозкуРаспоряжения.Распоряжение) = ТИП(Документ.ЗаказПоставщику)
	|			ИЛИ ТИПЗНАЧЕНИЯ(ЗаданиеНаПеревозкуРаспоряжения.Распоряжение) = ТИП(Документ.ЗаявкаНаВозвратТоваровОтКлиента)
	|		ТОГДА ЗаданиеНаПеревозкуРаспоряжения.Распоряжение.Приоритет
	|	КОГДА ТИПЗНАЧЕНИЯ(ЗаданиеНаПеревозкуРаспоряжения.Распоряжение) = ТИП(Документ.ПоручениеЭкспедитору)
	|		ТОГДА ЗаданиеНаПеревозкуРаспоряжения.Распоряжение.Рин1_Приоритет
	|	ИНАЧЕ Значение(Справочник.Приоритеты.ПустаяСсылка)
	|КОНЕЦ КАК Приоритет
	//--Шерстюк Ю.Ю.
	|ИЗ
	|	Документ.ЗаданиеНаПеревозку КАК ЗаданиеНаПеревозку
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаданиеНаПеревозку.Маршрут КАК ЗаданиеНаПеревозкуМаршрут
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаданиеНаПеревозку.Распоряжения КАК ЗаданиеНаПеревозкуРаспоряжения
	|			ПО ЗаданиеНаПеревозкуМаршрут.Ссылка = ЗаданиеНаПеревозкуРаспоряжения.Ссылка
	|			И ЗаданиеНаПеревозкуМаршрут.КлючСвязи = ЗаданиеНаПеревозкуРаспоряжения.КлючСвязи
	|		ПО (ЗаданиеНаПеревозкуМаршрут.Ссылка = ЗаданиеНаПеревозку.Ссылка)
	|		
	|ГДЕ
	|	ЗаданиеНаПеревозку.Проведен
	|	И ЗаданиеНаПеревозку.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаданийНаПеревозку.Формируется)
	|	И ЗаданиеНаПеревозку.Склад В ИЕРАРХИИ(&Склад)
	|	И ЗаданиеНаПеревозку.Операция = &ВидДоставки
	|	И ВЫБОР
	|			КОГДА &ОтборПоТипуИсполнителей = ЗНАЧЕНИЕ(Перечисление.ТипыИсполнителейЗаданийНаПеревозку.ПустаяСсылка)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЗаданиеНаПеревозку.ЗаданиеВыполняет = &ОтборПоТипуИсполнителей
	|		КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаВремяРейсаПланС,
	|	ДатаВремяРейсаПланПо,
	|	Ссылка,
	|	ПорядокВМаршруте
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТоварыКДоставке.ЗаданиеНаПеревозку,
	|	ТоварыКДоставке.Распоряжение,
	|	ТоварыКДоставке.Склад,
	|	ТоварыКДоставке.Номенклатура,
	|	ТоварыКДоставке.Характеристика,
	|	ТоварыКДоставке.Назначение,
	|	ТоварыКДоставке.Серия,
	|	ТоварыКДоставке.Количество,
	|	ТоварыКДоставке.ВсеТовары,
	|	ТоварыКДоставке.ПолучательОтправитель
	//++Шерстюк Ю.Ю. 22.04.2021 задача 7709 приоритет должен быть выделен в рм
	|,
	|ВЫБОР
	|	КОГДА ТИПЗНАЧЕНИЯ(ТоварыКДоставке.Распоряжение) = ТИП(Документ.ЗаказКлиента)
	|			ИЛИ ТИПЗНАЧЕНИЯ(ТоварыКДоставке.Распоряжение) = ТИП(Документ.ЗаказДавальца)
	|			ИЛИ ТИПЗНАЧЕНИЯ(ТоварыКДоставке.Распоряжение) = ТИП(Документ.ЗаказПереработчику)
	|			ИЛИ ТИПЗНАЧЕНИЯ(ТоварыКДоставке.Распоряжение) = ТИП(Документ.ЗаказПоставщику)
	|			ИЛИ ТИПЗНАЧЕНИЯ(ТоварыКДоставке.Распоряжение) = ТИП(Документ.ЗаявкаНаВозвратТоваровОтКлиента)
	|		ТОГДА ТоварыКДоставке.Распоряжение.Приоритет
	|	КОГДА ТИПЗНАЧЕНИЯ(ТоварыКДоставке.Распоряжение) = ТИП(Документ.ПоручениеЭкспедитору)
	|		ТОГДА ТоварыКДоставке.Распоряжение.Рин1_Приоритет
	|	ИНАЧЕ Значение(Справочник.Приоритеты.ПустаяСсылка)
	|   Конец КАК Приоритет
	//--Шерстюк Ю.Ю.
	|ИЗ
	|	РегистрСведений.ТоварыКДоставке КАК ТоварыКДоставке
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаданиеНаПеревозку КАК Задание
	|		ПО (Задание.Ссылка = ТоварыКДоставке.ЗаданиеНаПеревозку)
	|			И (Задание.Проведен)
	|			И (Задание.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаданийНаПеревозку.Формируется))
	|			И (Задание.Склад В ИЕРАРХИИ (&Склад))
	|			И (ТоварыКДоставке.ЗаданиеНаПеревозку.Операция = &ВидДоставки)
	|			И (ВЫБОР
	|				КОГДА &ОтборПоТипуИсполнителей = ЗНАЧЕНИЕ(Перечисление.ТипыИсполнителейЗаданийНаПеревозку.ПустаяСсылка)
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ ТоварыКДоставке.ЗаданиеНаПеревозку.ЗаданиеВыполняет = &ОтборПоТипуИсполнителей
	|			КОНЕЦ)";
	
	Запрос.УстановитьПараметр("Склад", Склад);
	Запрос.УстановитьПараметр("КоэффициентПересчетаВТонны", ДоставкаТоваров.КоэффициентПересчетаВТонны());
	Запрос.УстановитьПараметр("КоэффициентПересчетаВКубическиеМетры", ДоставкаТоваров.КоэффициентПересчетаВКубическиеМетры());
	Запрос.УстановитьПараметр("ВидДоставки", ВидДоставки);
	Запрос.УстановитьПараметр("ОтборПоТипуИсполнителей", ОтборПоТипуИсполнителей);
	//++Шерстюк Ю.Ю. 22.04.2021
	Запрос.УстановитьПараметр("ПриоритетСредний",Справочники.Приоритеты.НайтиПоНаименованию("Средний"));
	//--Шерстюк Ю.Ю.
	Результат = Запрос.ВыполнитьПакет();
	
	Выборка = Результат[0].Выбрать();
	Пока Выборка.СледующийПоЗначениюПоля("Ссылка") Цикл
		
		СтрокаЗадание = ЗаданияНаПеревозкуПланируемые.ПолучитьЭлементы().Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаЗадание, Выборка);
		
		СтрокаЗадание.ПорядокВМаршруте = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Выборка.НомерЗадания, Истина, Истина);
		СтрокаЗадание.ВремяС           = Выборка.ДатаВремяРейсаПланС;
		СтрокаЗадание.ВремяПо          = Выборка.ДатаВремяРейсаПланПо;
		СтрокаЗадание.ВремяСБезДаты    = ДоставкаТоваровКлиентСервер.ВремяБезДаты(СтрокаЗадание.ВремяС);
		СтрокаЗадание.ВремяПоБезДаты   = ДоставкаТоваровКлиентСервер.ВремяБезДаты(СтрокаЗадание.ВремяПо);
		СтрокаЗадание.ДополнительнаяИнформация = Выборка.ДополнительнаяИнформацияЗадание;
		СтрокаЗадание.Вес = 0;
		СтрокаЗадание.Объем = 0;
		СтрокаЗадание.КлючСвязи = "";
		
		ПредыдущаяЗона = Выборка.Зона;
		ЗонаИзменилась = Ложь;
		
		Пока Выборка.СледующийПоЗначениюПоля("ПорядокВМаршруте")
			И ЗначениеЗаполнено(Выборка.КлючСвязи) Цикл
			
			СтрокаПункт = СтрокаЗадание.ПолучитьЭлементы().Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаПункт, Выборка);
			СтрокаПункт.ВремяСБезДаты   = ДоставкаТоваровКлиентСервер.ВремяБезДаты(СтрокаПункт.ВремяС);
			СтрокаПункт.ВремяПоБезДаты  = ДоставкаТоваровКлиентСервер.ВремяБезДаты(СтрокаПункт.ВремяПо);
			СтрокаЗадание.Вес = СтрокаЗадание.Вес + СтрокаПункт.Вес;
			СтрокаЗадание.Объем = СтрокаЗадание.Объем + СтрокаПункт.Объем;
			ЗонаИзменилась = Макс(ЗонаИзменилась, ПредыдущаяЗона <> Выборка.Зона);
			СтрокаПункт.ЭтоНашаДоставка = 1;
			
			Пока Выборка.Следующий() Цикл
				
				СтрокаРаспоряжение = Объект.РаспоряженияВЗаданияхНаПеревозку.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаРаспоряжение, Выборка);
				СтрокаРаспоряжение.Склад      = Выборка.РаспоряжениеСклад;
				СтрокаРаспоряжение.Вес        = Выборка.РаспоряжениеВес;
				СтрокаРаспоряжение.Объем      = Выборка.РаспоряжениеОбъем;
				СтрокаРаспоряжение.Перевозчик = Выборка.РаспоряжениеПеревозчик;
				СтрокаРаспоряжение.ВремяС     = Выборка.РаспоряжениеВремяС;
				СтрокаРаспоряжение.ВремяПо    = Выборка.РаспоряжениеВремяПо;
				СтрокаРаспоряжение.ДополнительнаяИнформация = Выборка.РаспоряжениеДополнительнаяИнформация;
	
				СтрокаПункт.КоличествоРаспоряжений = СтрокаПункт.КоличествоРаспоряжений + 1;
				
			КонецЦикла;
			
			СтрокаЗадание.КоличествоРаспоряжений = СтрокаЗадание.КоличествоРаспоряжений + СтрокаПункт.КоличествоРаспоряжений;
			
		КонецЦикла;
		
		Если ЗонаИзменилась Тогда
			СтрокаЗадание.Зона = Справочники.ЗоныДоставки.ПустаяСсылка();
		КонецЕсли;
		
	КонецЦикла;
	
	ЗаполнитьПризнакиПереходаДат();
	
	ТоварыКДоставке.Загрузить(Результат[1].Выгрузить());
	
	ЗаполнитьСкладыПунктовИЗаданий(Ложь);
	
	ДоставкаТоваров.ОбновитьСписокРаспоряженийНаДоставку(ЭтаФорма);
	
	ЗаданияМодифицированы = Ложь;
	УстановитьДоступностьЭлементов();

КонецПроцедуры


&НаСервере
&После("УстановитьУсловноеОформление")
Процедура Рин1_УстановитьУсловноеОформление()
	// Документ имеет высокий приоритет
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();  
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("РаспоряженияНаДоставкуПриоритетКартинка");

	Элемент.Представление = НСтр("ru = 'Документ имеет высокий приоритет';
								|en = 'The document is in high priority'");
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("РаспоряженияНаДоставку.Приоритет");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Справочники.Приоритеты.ПолучитьВысшийПриоритет();
	
	//ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	//ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ПометкаУдаления");
	//ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	//ОтборЭлемента.ПравоеЗначение = Ложь;

	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветФона", ЦветаСтиля.ВысокийПриоритетДокумента);

	
	// Документ имеет низкий приоритет
	Элемент = УсловноеОформление.Элементы.Добавить();
	Элемент.Представление = НСтр("ru = 'Документ имеет низкий приоритет';
								|en = 'The document is in low priority'");
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("РаспоряженияНаДоставку.Приоритет");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Справочники.Приоритеты.ПолучитьНизшийПриоритет();
	
	//ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	//ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ПометкаУдаления");
	//ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	//ОтборЭлемента.ПравоеЗначение = Ложь;

	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветФона", ЦветаСтиля.НизкийПриоритетДокумента);

КонецПроцедуры
