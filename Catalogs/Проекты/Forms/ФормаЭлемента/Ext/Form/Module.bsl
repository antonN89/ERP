&НаКлиенте
Процедура ГИГ_ГИГ_ДополнительныеЗатратыРаспределятьПоКоэффициентуУпаковочностиПриИзмененииПосле(Элемент)
	ТекущаяСтрока = Элементы.ГИГ_ДополнительныеЗатраты.ТекущиеДанные;
	ТекущаяСтрока.РаспределятьПоСуммеИзделий = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ГИГ_ГИГ_ДополнительныеЗатратыРаспределятьПоСуммеИзделийПриИзмененииПосле(Элемент)
	ТекущаяСтрока = Элементы.ГИГ_ДополнительныеЗатраты.ТекущиеДанные;
	ТекущаяСтрока.РаспределятьПоКоэффициентуУпаковочности = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ГИГ_гиг_РасчетИзделийПриИзмененииПосле(Элемент)
	УстановитьВидимостьЭлементовПоРасчетуИзделий();
КонецПроцедуры

//&НаКлиенте
//Процедура ГИГ_ДекорацияНоменклатураПроектаНажатиеПосле(Элемент)
//	ПараметрыФормы = Новый Структура;
//	ПараметрыФормы.Вставить("Отбор", Новый Структура("Владелец", Объект.Ссылка));
//	ОткрытьФорму("Справочник.гиг_НоменклатураПроекта.ФормаСписка", ПараметрыФормы, ЭтаФорма,,,,,РежимОткрытияОкнаФормы.Независимый);
//КонецПроцедуры

&НаСервере
Процедура ГИГ_ПриСозданииНаСервереПосле(Отказ, СтандартнаяОбработка)
	
	ГИГ_ПрограммноеДобавлениеЭлементовНаСервере();
	УстановитьВидимостьЭлементовПоРасчетуИзделий();
	
	КаталогХраненияКартинок = Константы.Рин1_ПутьДляХраненияКартинок.Получить();
	
	Если не Прав(КаталогХраненияКартинок,1) = "\" Тогда
		КаталогХраненияКартинок = КаталогХраненияКартинок + "\";
	КонецЕсли;
	
	КаталогКартинок = КаталогХраненияКартинок + Объект.Ссылка.Метаданные().Имя;
	Файл = Новый Файл(КаталогКартинок);
	Если не Файл.Существует() Тогда
		Попытка
		    СоздатьКаталог(КаталогКартинок);
		Исключение
		    ОбщегоНазначения.СообщитьПользователю("Возможность создать каталог отсутствует. Обратитесь в поддержку! " + ОписаниеОшибки());			
		КонецПопытки;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ГИГ_ПрограммноеДобавлениеЭлементовНаСервере()
	
	//Элемент = Элементы.Добавить("ДекорацияНоменклатураПроекта", Тип("ДекорацияФормы"), Элементы.ГруппаКодЗавершен);
	//Элемент.Заголовок = "Номенклатура проекта";
	//Элемент.Вид = ВидДекорацииФормы.Надпись;
	//Элемент.Гиперссылка = Истина;
	//Элемент.Видимость = Ложь;
	//Элемент.УстановитьДействие("Нажатие", "ГИГ_ДекорацияНоменклатураПроектаНажатиеПосле");
	//Элементы.Переместить(Элемент, Элементы.ГруппаКодЗавершен, Элементы.Завершен);
	
	Элемент = Элементы.Добавить("гиг_РасчетИзделий", Тип("ПолеФормы"), Элементы.ГруппаКодЗавершен); 
	Элемент.Вид = ВидПоляФормы.ПолеФлажка;
	Элемент.ПутьКДанным = "Объект.гиг_РасчетИзделий"; 
	Элемент.Заголовок = "Расчет изделий";
	Элемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Право;
	Элемент.УстановитьДействие("ПриИзменении", "ГИГ_гиг_РасчетИзделийПриИзмененииПосле");
	Элементы.Переместить(Элемент, Элементы.ГруппаКодЗавершен, Элементы.Завершен);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьЭлементовПоРасчетуИзделий()
	//Элементы.ДекорацияНоменклатураПроекта.Видимость = Объект.гиг_РасчетИзделий;
	Элементы.ГруппаДополнительныеЗатраты.Видимость = Объект.гиг_РасчетИзделий;
КонецПроцедуры

&НаКлиенте
Процедура КомандаРедактироватьОписание(Команда)
	
	Если Объект.Ссылка.Пустая() Тогда
		
		Режим = РежимДиалогаВопрос.ДаНет;
		Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопроса", ЭтотОбъект, Параметры);
		ПоказатьВопрос(Оповещение, НСтр("ru = 'Для редактирования описания необходимо записать справочник. Продолжить выполнение операции?';"
		+ " en = 'Do you want to continue?'"), Режим, 0);	
		
	Иначе 
		
		Документ = Элементы.ПолеHTMLОписание.Документ;
		ТекстДляРедактирования = Документ.body.innerHTML;
		Параметр = Новый Структура("HTML", ТекстДляРедактирования);
		
		ИмяОткрываемойФормы = "Обработка.Рин1_РедакторHTML.Форма.Форма";
		ОткрытьФорму(ИмяОткрываемойФормы,Параметр,ЭтаФорма,,,,Новый ОписаниеОповещения("ОбработкаКомандыЗавершение",ЭтотОбъект),РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Рин1_ПолеHTMLОписаниеДокументСформированВместо(Элемент)
	Элемент.Документ.Body.innerHTML = Объект.ОписаниеТовара;
КонецПроцедуры

&НаКлиенте
Процедура Рин1_ПриОткрытииПосле(Отказ)
	Элементы.ПолеHTMLОписание.Документ.Body.innerHTML = Объект.ОписаниеТовара;
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаКомандыЗавершение(Результат, ДополнительныеПараметры) Экспорт 
	
	Если Результат <> Неопределено Тогда
		Элементы.ПолеHTMLОписание.Документ.body.innerHTML = Результат;
		ЗаписатьОписание(Результат);
		//Объект.ОписаниеТовара = Результат;
		ЭтаФорма.Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьОписание(Результат)
	Объект.ОписаниеТовара = Результат;
КонецПроцедуры

&НаКлиенте
Процедура Рин1_ПередЗаписьюПосле(Отказ, ПараметрыЗаписи)
	
	//Парсим HTML
	
	Если не Объект.Ссылка.Пустая() Тогда
		
		УИД = Объект.Ссылка.УникальныйИдентификатор();
		
		СтрокаHTML = Элементы.ПолеHTMLОписание.Документ.body.innerHTML;
		
		ЧислоВхождений = СтрЧислоВхождений(СтрокаHTML,"<img");
		
		Начало = 1;
		
		Для А = 1 По ЧислоВхождений Цикл
			
			Начало = СтрНайти(СтрокаHTML,"<img",,Начало,);
			СтрокаНачало = Сред(СтрокаHTML,Начало);
			КоличествоНачало = СтрДлина(СтрокаНачало);
			
			Конец = СтрНайти(СтрокаHTML,">",,Начало,) + 1;
			СтрокаКонец = Сред(СтрокаHTML,Конец);
			КоличествоКонец = СтрДлина(СтрокаКонец);
			
			КоличествоВыбираемыхСимволов = КоличествоНачало - КоличествоКонец;
			
			ИтоговаяСтрока = Сред(СтрокаHTML,Начало,КоличествоВыбираемыхСимволов);
			
			Если СтрНайти(ИтоговаяСтрока,УИД) = 0 и СтрНайти(ИтоговаяСтрока,"//download") = 0 Тогда
				
				Расширение = "";
				ВременныйФайл = "";
				
				Если СтрНайти(ИтоговаяСтрока,"src=""https") > 0 или СтрНайти(ИтоговаяСтрока,"src=""http") > 0 Тогда
					
					ВременныйФайл = ?(СтрНайти(ИтоговаяСтрока,"https:") > 0,Сред(ИтоговаяСтрока,СтрНайти(ИтоговаяСтрока,"https:")),Сред(ИтоговаяСтрока,СтрНайти(ИтоговаяСтрока,"http:")));
					
					Если СтрНайти(ИтоговаяСтрока,".gif") > 0 Тогда
						
						ВременныйФайл = Сред(ВременныйФайл,1,СтрНайти(ВременныйФайл,".gif") + 3); //добавим число что бы получить расширение	
						Расширение = ".gif";
						
					ИначеЕсли СтрНайти(ИтоговаяСтрока,".jpg") > 0  Тогда
						
						ВременныйФайл = Сред(ВременныйФайл,1,СтрНайти(ВременныйФайл,".jpg") + 3); 
						Расширение = ".jpg";
						
					ИначеЕсли СтрНайти(ИтоговаяСтрока,".jpeg") > 0 Тогда
						
						ВременныйФайл = Сред(ВременныйФайл,1,СтрНайти(ВременныйФайл,".jpeg") + 4); 
						Расширение = ".jpg";
						
					ИначеЕсли СтрНайти(ИтоговаяСтрока,".png") > 0 Тогда 
						
						ВременныйФайл = Сред(ВременныйФайл,1,СтрНайти(ВременныйФайл,".png") + 3);
						Расширение = ".png";
						
					ИначеЕсли СтрНайти(ИтоговаяСтрока,".svg") > 0 Тогда 
						
						ВременныйФайл = Сред(ВременныйФайл,1,СтрНайти(ВременныйФайл,".svg") + 3);
						Расширение = ".svg";
						
					КонецЕсли;	
					
				ИначеЕсли СтрНайти(ИтоговаяСтрока,"src=""file") > 0 или СтрНайти(ИтоговаяСтрока,"src=") > 0 Тогда 
					
					ВременныйФайл = Сред(ИтоговаяСтрока,СтрНайти(ИтоговаяСтрока,"src="));
					
					Если СтрНайти(ИтоговаяСтрока,".gif") > 0 Тогда
						
						ВременныйФайл = Сред(ВременныйФайл,1,СтрНайти(ВременныйФайл,".gif") + 3); //добавим число что бы получить расширение
						Расширение = ".gif";
						
					ИначеЕсли СтрНайти(ИтоговаяСтрока,".jpg") > 0 Тогда
						
						ВременныйФайл = Сред(ВременныйФайл,1,СтрНайти(ВременныйФайл,".jpg") + 3); 
						Расширение = ".jpg";
						
					ИначеЕсли СтрНайти(ИтоговаяСтрока,".png") > 0 Тогда 
						
						ВременныйФайл = Сред(ВременныйФайл,1,СтрНайти(ВременныйФайл,".png") + 3);
						ВременныйФайл = Сред(ВременныйФайл,6);
						Расширение = ".png";
						
					ИначеЕсли СтрНайти(ИтоговаяСтрока,".svg") > 0 Тогда 
						
						ВременныйФайл = Сред(ВременныйФайл,1,СтрНайти(ВременныйФайл,".svg") + 3);
						Расширение = ".svg";
						
					КонецЕсли;
					
					ВременныйФайл = СтрЗаменить(ВременныйФайл,"src=","");
					ВременныйФайл = СтрЗаменить(ВременныйФайл,"""","");
					
				КонецЕсли;
				
				Если не Расширение = "" Тогда
					
					ДатаВФайл = СтрЗаменить(Строка(ТекущаяДата()),":","");//нужна уникальность картинок
					ДатаВФайл = СтрЗаменить(ДатаВФайл," ","-");
					
					КаталогКартинокСУИД = КаталогКартинок+"\"+Строка(УИД);
					Файл = Новый Файл(КаталогКартинокСУИД);
					Если не Файл.Существует() Тогда
						Попытка
							СоздатьКаталог(КаталогКартинокСУИД);
						Исключение
							Сообщить("Возможность создать каталог отсутствует. Обратитесь в поддержку! " + ОписаниеОшибки());
							Отказ = Истина;
						КонецПопытки;
					КонецЕсли;
					
					//НовыйФайл = КаталогКартинок + Строка(УИД) + "\" + ДатаВФайл + "_" + А + Расширение;
					НовыйФайл = КаталогКартинокСУИД + "\" + ДатаВФайл + "_" + А + Расширение;
					
					КопироватьФайл(ВременныйФайл,НовыйФайл); //из временного хранилища пользователя перепиши файл в общее хранилище
					
					//поменяем в HTML ссылку на файл
					Если СтрНайти(Лев(КаталогКартинок,2),"\\") > 0 Тогда
						ЗаписатьОписание(СтрЗаменить(Объект.ОписаниеТовара,ВременныйФайл,"file:\\" + НовыйФайл));
						//Объект.ОписаниеТовара = СтрЗаменить(Объект.ОписаниеТовара,ВременныйФайл,"file:\\" + НовыйФайл); 	
					Иначе
						ЗаписатьОписание(СтрЗаменить(Объект.ОписаниеТовара,ВременныйФайл,"file:" + НовыйФайл));
						//Объект.ОписаниеТовара = СтрЗаменить(Объект.ОписаниеТовара,ВременныйФайл,"file:" + НовыйФайл); 
					КонецЕсли;
					
					//Почистим каталог картинок от устаревших файлов
					УдалитьНенужныеКартинки(КаталогКартинокСУИД,НовыйФайл,СтрокаHTML)
					
				Иначе 
					
					Сообщить("Ошибка создания файла описания - обратитесь к разработчику!");
					
				КонецЕсли;		
				
			КонецЕсли;
			
			Начало = Конец;
			
		КонецЦикла;
		
	КонецЕсли;	
	//
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьНенужныеКартинки(КаталогКартинокСУИД,НовыйФайл,СтрокаHTMLОбщая)
	
	МассивФайлов = НайтиФайлы(КаталогКартинокСУИД,"*");
	Если не МассивФайлов.Количество() = 0 Тогда
		Для каждого Файл Из МассивФайлов Цикл
			Если СтрНайти(СтрокаHTMLОбщая,Файл.ИмяБезРасширения) = 0 Тогда
				Если не НовыйФайл = Файл.ПолноеИмя Тогда
					УдалитьФайлы(Файл.ПолноеИмя);
				КонецЕсли; 
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
		
КонецПроцедуры // УдалитьНенужныеКартинки()

&НаКлиенте
Процедура Рин1_ГруппаСтраницыПриСменеСтраницыПосле(Элемент, ТекущаяСтраница)
	
		Если Объект.Ссылка.Пустая() и ТекущаяСтраница.Имя = "ГруппаОписание"  Тогда
		
		Режим = РежимДиалогаВопрос.ДаНет;
		Оповещение = Новый ОписаниеОповещения("Рин1_ПослеЗакрытияВопроса", ЭтотОбъект, Параметры);
		ПоказатьВопрос(Оповещение, НСтр("ru = 'Для создания описания необходимо записать справочник. Продолжить выполнение операции?';"
		+ " en = 'Do you want to continue?'"), Режим, 0);	
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура Рин1_ПослеЗакрытияВопроса(Результат, Параметры) Экспорт
	
    Если Результат = КодВозвратаДиалога.Нет Тогда
        Возврат;
	Иначе 
		ЭтотОбъект.Записать();
    КонецЕсли;

КонецПроцедуры

