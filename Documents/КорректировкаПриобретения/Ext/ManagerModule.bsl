//{{20201012 ГлазуновДВ
&Вместо("ЗаполнитьТоварыПоАктуОРасхождениях")
Процедура Рин1_ЗаполнитьТоварыПоАктуОРасхождениях(Объект)
	// Вставить содержимое метода.
//	ПродолжитьВызов(Объект);
	Объект.Товары.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	АктОРасхожденияхПослеПриемкиТовары.НомерСтроки            КАК НомерСтроки,
	|	АктОРасхожденияхПослеПриемкиТовары.НоменклатураПартнера КАК НоменклатураПартнера,
	|	АктОРасхожденияхПослеПриемкиТовары.Номенклатура           КАК Номенклатура,
	|	АктОРасхожденияхПослеПриемкиТовары.Характеристика         КАК Характеристика,
	|	АктОРасхожденияхПослеПриемкиТовары.Назначение             КАК Назначение, 
	|	АктОРасхожденияхПослеПриемкиТовары.Упаковка               КАК Упаковка,
	|	АктОРасхожденияхПослеПриемкиТовары.Цена                   КАК Цена,
	|	АктОРасхожденияхПослеПриемкиТовары.СтавкаНДС              КАК СтавкаНДС,
	|	АктОРасхожденияхПослеПриемкиТовары.ЗаказПоставщику        КАК ЗаказПоставщику,
	|	АктОРасхожденияхПослеПриемкиТовары.КодСтроки              КАК КодСтроки,
	|	АктОРасхожденияхПослеПриемкиТовары.Склад                  КАК Склад,
	|	АктОРасхожденияхПослеПриемкиТовары.Серия                  КАК Серия,
	|	АктОРасхожденияхПослеПриемкиТовары.СтатусУказанияСерий    КАК СтатусУказанияСерий,
	|	АктОРасхожденияхПослеПриемкиТовары.СписатьНаРасходы       КАК СписатьНаРасходы,
	|	АктОРасхожденияхПослеПриемкиТовары.СтатьяРасходов         КАК СтатьяРасходов,
	|	АктОРасхожденияхПослеПриемкиТовары.АналитикаРасходов      КАК АналитикаРасходов,
	|	АктОРасхожденияхПослеПриемкиТовары.Сделка                 КАК Сделка,
	|	АктОРасхожденияхПослеПриемкиТовары.Подразделение          КАК Подразделение,
	|	АктОРасхожденияхПослеПриемкиТовары.НомерГТД               КАК НомерГТД,
	|
	|	ВЫБОР
	|		КОГДА АктОРасхожденияхПослеПриемкиТовары.Действие В (ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОформитьПерепоставленноеИВернуть), ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОформитьПерепоставленное), ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОформитьНедостачуИОжидатьДопоставку), ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОформитьНедостачу))
	|			ТОГДА АктОРасхожденияхПослеПриемкиТовары.Сумма
	|		ИНАЧЕ АктОРасхожденияхПослеПриемкиТовары.СуммаПоДокументу
	|	КОНЕЦ КАК Сумма,
	|
	|	ВЫБОР
	|		КОГДА АктОРасхожденияхПослеПриемкиТовары.Действие В (ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОформитьПерепоставленноеИВернуть), ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОформитьПерепоставленное), ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОформитьНедостачуИОжидатьДопоставку), ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОформитьНедостачу))
	|			ТОГДА АктОРасхожденияхПослеПриемкиТовары.СуммаНДС
	|		ИНАЧЕ АктОРасхожденияхПослеПриемкиТовары.СуммаНДСПоДокументу
	|	КОНЕЦ КАК СуммаНДС,
	|
	|	ВЫБОР
	|		КОГДА АктОРасхожденияхПослеПриемкиТовары.Действие В (ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОформитьПерепоставленноеИВернуть), ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОформитьПерепоставленное), ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОформитьНедостачуИОжидатьДопоставку), ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОформитьНедостачу))
	|			ТОГДА АктОРасхожденияхПослеПриемкиТовары.СуммаСНДС
	|		ИНАЧЕ АктОРасхожденияхПослеПриемкиТовары.СуммаСНДСПоДокументу
	|	КОНЕЦ КАК СуммаСНДС,
	|
	|	ВЫБОР 
//Исходное	|		КОГДА АктОРасхожденияхПослеПриемкиТовары.Действие В (ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОтнестиПерепоставленноеНаПрочиеДоходы), ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОтнестиНедостачуНаПрочиеРасходы))
//{{20201019 ГлазуновДВ Убираем Действие "Не оприходовать по Фин.Учету",  20210115 ГлазуновДВ Убираем Действие "ВернутьПерепоставленноеБезОформления" Задача 3923
	|		КОГДА АктОРасхожденияхПослеПриемкиТовары.Действие В (ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОтнестиПерепоставленноеНаПрочиеДоходы), ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОтнестиНедостачуНаПрочиеРасходы), ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.Рин1_НеОприходоватьПоФинУчету), ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ВернутьПерепоставленноеБезОформления))
//}}20201019 ГлазуновДВ
	|			ТОГДА  АктОРасхожденияхПослеПриемкиТовары.КоличествоУпаковокПоДокументу
	|		ИНАЧЕ  АктОРасхожденияхПослеПриемкиТовары.КоличествоУпаковок
	|	КОНЕЦ КАК КоличествоУпаковок,
	|
	|	ВЫБОР 
//Исходное	|		КОГДА АктОРасхожденияхПослеПриемкиТовары.Действие В (ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОтнестиПерепоставленноеНаПрочиеДоходы), ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОтнестиНедостачуНаПрочиеРасходы))
//{{20201019 ГлазуновДВ Убираем Действие "Не оприходовать по Фин.Учету",  20210115 ГлазуновДВ Убираем Действие "ВернутьПерепоставленноеБезОформления" Задача 3923
	|		КОГДА АктОРасхожденияхПослеПриемкиТовары.Действие В (ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОтнестиПерепоставленноеНаПрочиеДоходы), ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОтнестиНедостачуНаПрочиеРасходы), ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.Рин1_НеОприходоватьПоФинУчету), ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ВернутьПерепоставленноеБезОформления))
//}}20201019 ГлазуновДВ
	|			ТОГДА  АктОРасхожденияхПослеПриемкиТовары.КоличествоПоДокументу
	|		ИНАЧЕ  АктОРасхожденияхПослеПриемкиТовары.Количество
	|	КОНЕЦ КАК Количество,
	|
	|	ВЫБОР
	|		КОГДА АктОРасхожденияхПослеПриемкиТовары.Действие В (ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОформитьПерепоставленноеИВернуть), ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОформитьПерепоставленное), ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОформитьНедостачуИОжидатьДопоставку), ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОформитьНедостачу))
	|				И (АктОРасхожденияхПослеПриемкиТовары.КоличествоУпаковок > АктОРасхожденияхПослеПриемкиТовары.КоличествоУпаковокПоДокументу
	|					ИЛИ АктОРасхожденияхПослеПриемкиТовары.КодСтроки <> 0
	|						И АктОРасхожденияхПослеПриемкиТовары.ЗаказПоставщику В (НЕОПРЕДЕЛЕНО, ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)))
	|			ТОГДА АктОРасхожденияхПослеПриемкиТовары.КоличествоУпаковок - АктОРасхожденияхПослеПриемкиТовары.КоличествоУпаковокПоДокументу
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоУпаковокСверхЗаказа,
	|
	|	ВЫБОР
	|		КОГДА АктОРасхожденияхПослеПриемкиТовары.Действие В (ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОформитьПерепоставленноеИВернуть), ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОформитьПерепоставленное), ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОформитьНедостачуИОжидатьДопоставку), ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОформитьНедостачу))
	|				И (АктОРасхожденияхПослеПриемкиТовары.Количество > АктОРасхожденияхПослеПриемкиТовары.КоличествоПоДокументу
	|					ИЛИ АктОРасхожденияхПослеПриемкиТовары.КодСтроки <> 0
	|						И АктОРасхожденияхПослеПриемкиТовары.ЗаказПоставщику В (НЕОПРЕДЕЛЕНО, ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)))
	|			ТОГДА АктОРасхожденияхПослеПриемкиТовары.Количество - АктОРасхожденияхПослеПриемкиТовары.КоличествоПоДокументу
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоСверхЗаказа
	|ИЗ
	|	Документ.АктОРасхожденияхПослеПриемки.Товары КАК АктОРасхожденияхПослеПриемкиТовары
	|ГДЕ
	|	АктОРасхожденияхПослеПриемкиТовары.Ссылка = &АктОРасхожденияхПослеПриемкиОснование
	|	И АктОРасхожденияхПослеПриемкиТовары.ДокументОснование = &ДокументОснование
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Запрос.УстановитьПараметр("АктОРасхожденияхПослеПриемкиОснование", Объект.АктОРасхожденияхПослеПриемкиОснование);
	Запрос.УстановитьПараметр("ДокументОснование", Объект.ДокументОснование);
	
	СтруктураДействий = Новый Структура;
	СтруктураПересчетаСуммы = ОбработкаТабличнойЧастиКлиентСервер.ПараметрыПересчетаСуммыНДСВСтрокеТЧ(Объект);
	
	СтруктураДействий.Вставить("ПересчитатьКоличествоЕдиниц");
	СтруктураДействий.Вставить("ПересчитатьСуммуНДС", СтруктураПересчетаСуммы);
	СтруктураДействий.Вставить("ПересчитатьСуммуСНДС", СтруктураПересчетаСуммы);
	СтруктураДействий.Вставить("ПересчитатьСумму");
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если (Выборка.Количество - Выборка.КоличествоСверхЗаказа) > 0 Тогда
			
			НоваяСтрокаТовары = Объект.Товары.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаТовары, Выборка);
			Если Выборка.КоличествоСверхЗаказа > 0 Тогда
				НоваяСтрокаТовары.КоличествоУпаковок = Выборка.КоличествоУпаковок - Выборка.КоличествоУпаковокСверхЗаказа;
				НоваяСтрокаТовары.Количество         = Выборка.Количество - Выборка.КоличествоСверхЗаказа;
				ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(НоваяСтрокаТовары, СтруктураДействий, Неопределено);
			КонецЕсли;
			
		КонецЕсли;
			
		Если Выборка.КоличествоСверхЗаказа > 0 Тогда
			
			ДополнительнаяСтрокаТовары = Объект.Товары.Добавить();
			ЗаполнитьЗначенияСвойств(ДополнительнаяСтрокаТовары, Выборка);
			ДополнительнаяСтрокаТовары.КоличествоУпаковок = Выборка.КоличествоУпаковокСверхЗаказа;
			ДополнительнаяСтрокаТовары.Количество         = Выборка.КоличествоСверхЗаказа;
			ДополнительнаяСтрокаТовары.КодСтроки          = 0;
			
			ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(ДополнительнаяСтрокаТовары, СтруктураДействий, Неопределено);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Договор = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.ДокументОснование, "Договор");
	ВариантОформленияЗакупок = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Договор, "ВариантОформленияЗакупок");
	ИспользуетсяДокументПоступлениеТоваров = ВариантОформленияЗакупок <> Перечисления.ВариантыОформленияЗакупок.НеРазделять;
	
	ЗаполнитьРасхождения(Объект, ИспользуетсяДокументПоступлениеТоваров);
	
//{{20201012 ГлазуновДВ
	Для Каждого СтрокаРасхождений Из Объект.Расхождения Цикл
		Если СтрокаРасхождений.Количество > 0 Тогда
			//++Шерстюк Ю.Ю. Задача 11375 и 10147 при ордерной схеме учитываем складские остатки при инвентаризации, при НЕ ордерной корректировка делает движение по товарам на складах
			Если СтрокаРасхождений.Склад.ИспользоватьОрдернуюСхемуПриОтгрузке Тогда 
				СтрокаРасхождений.ВариантОтражения = Перечисления.ВариантыОтраженияКорректировокПоступлений.УвеличитьЗакупкуУчестьПриИнвентаризации;
			Иначе 
				СтрокаРасхождений.ВариантОтражения = Перечисления.ВариантыОтраженияКорректировокПоступлений.УвеличитьЗакупкуУвеличитьСкладскиеОстатки;
			КонецЕсли;				
			//СтрокаРасхождений.ВариантОтражения = Перечисления.ВариантыОтраженияКорректировокПоступлений.УвеличитьЗакупкуУчестьПриИнвентаризации;
            //--Шерстюк Ю.Ю.
		КонецЕсли;
		Если СтрокаРасхождений.Количество < 0 Тогда
			//++Шерстюк Ю.Ю. Задача 11375 и 10147 при ордерной схеме учитываем складские остатки при инвентаризации, при НЕ ордерной корректировка делает движение по товарам на складах
			Если СтрокаРасхождений.Склад.ИспользоватьОрдернуюСхемуПриОтгрузке Тогда 
				СтрокаРасхождений.ВариантОтражения = Перечисления.ВариантыОтраженияКорректировокПоступлений.УменьшитьЗакупкуУчестьПриИнвентаризации;
			Иначе 
				СтрокаРасхождений.ВариантОтражения = Перечисления.ВариантыОтраженияКорректировокПоступлений.УменьшитьЗакупкуУменьшитьСкладскиеОстатки;
			КонецЕсли;
			//СтрокаРасхождений.ВариантОтражения = Перечисления.ВариантыОтраженияКорректировокПоступлений.УменьшитьЗакупкуУчестьПриИнвентаризации;
			//--Шерстюк Ю.Ю.
		КонецЕсли;
	КонецЦикла;
//}}20201012 ГлазуновДВ
КонецПроцедуры

&Вместо("ИнициализироватьДанныеДокумента")
Процедура Рин1_ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры)
	// Вставить содержимое метода.
//	ПродолжитьВызов(ДокументСсылка, ДополнительныеСвойства, Регистры);
	////////////////////////////////////////////////////////////////////////////
	// Создадим запрос инициализации движений
	
	Запрос = Новый Запрос;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
//{{20201012 ГлазуновДВ
	ЗаполнитьПараметрыИнициализации_Акт(Запрос, ДокументСсылка.АктОРасхожденияхПослеПриемкиОснование);
//}}20201012 ГлазуновДВ
	
	////////////////////////////////////////////////////////////////////////////
	// Сформируем текст запроса
	
	ТекстыЗапроса = Новый СписокЗначений;
	
	ТекстЗапросаВтТаблицаРасхожденияТоваров(Запрос, ТекстыЗапроса);
	ТекстЗапросаВтТаблицаВидыЗапасовОприходование(Запрос, ТекстыЗапроса);
	ТекстЗапросаВтТаблицаВидыЗапасовСписание(Запрос, ТекстыЗапроса);
	
//{{20201012 ГлазуновДВ
	ТекстЗапросаТаблицаТоварыКПоступлению(Запрос, ТекстыЗапроса, Регистры);
//}}20201012 ГлазуновДВ
	ТекстЗапросаТаблицаТоварыНаСкладах(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаСвободныеОстатки(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаОбеспечениеЗаказов(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыКОформлениюИзлишковНедостач(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПринятаяВозвратнаяТара(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДатыПоступленияТоваровОрганизаций(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыОрганизаций(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаСебестоимостьТоваров(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаРасчетыСПоставщиками(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПрочиеДоходы(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПрочиеРасходы(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПартииТоваровОрганизаций(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПартииРасходовНаСебестоимостьТоваров(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаСуммыДокументовВВалютеРегл(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПартииПрочихРасходов(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаМатериалыИРаботыВПроизводстве(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаПартииПроизводственныхЗатрат(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаЗакупки(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДвиженияКонтрагентДоходыРасходы(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПрочиеАктивыПассивы(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, Регистры);
	
	ОтразитьВУчетеНДС(Запрос, ТекстыЗапроса, Регистры);
	
	КорректировкаПриобретенияЛокализация.ДополнитьТекстыЗапросовПроведения(Запрос, ТекстыЗапроса, Регистры);
	ПроведениеСерверУТ.ИнициализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Истина);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаТоварыКПоступлению(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыКПоступлению";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТовары(Запрос, ТекстыЗапроса)
	КонецЕсли;
	
	ТекстЗапроса =
		/////////////////////////////////////////
		// Недостача при приемке (Расхождения < 0).
		// 
		// Для ордерной схемы при приемке
		// Компенсация Приходного ордера (оптимистично считая, что товар недоприняли)
		// при корректировке.
		"ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ТаблицаТовары.НомерСтроки              КАК НомерСтроки,
		|	&Период_Акт                            КАК Период,
		|	
		|	ТаблицаТовары.Распоряжение             КАК ДокументПоступления,
		|	
		|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
		|	ТаблицаТовары.Характеристика           КАК Характеристика,
		|	ТаблицаТовары.Склад                    КАК Склад,
		|	&Партнер_Акт                           КАК Отправитель,
		|	
		|	ТаблицаТовары.НазначениеСкладское      КАК Назначение,
		|
		|	ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия,
		|	
		|	ТаблицаТовары.Расхождения              КАК КОформлениюОрдеров,
		|	0                                      КАК КОформлениюПоступленийПоОрдерам,
		|	&ХозяйственнаяОперация_Акт             КАК ХозяйственнаяОперация
		|ИЗ
		|	ВтТовары КАК ТаблицаТовары
		|ГДЕ
		|	&Статус_Акт В(
		|		ЗНАЧЕНИЕ(Перечисление.СтатусыАктаОРасхождениях.КВыполнению),
		|		ЗНАЧЕНИЕ(Перечисление.СтатусыАктаОРасхождениях.Отработано))
		|	  		
		//7C
		|	И ((ТаблицаТовары.Действие =  ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОтнестиНедостачуНаПрочиеРасходы)
		|			И ТаблицаТовары.ОрдернаяСхемаПриПриемке)
		|		ИЛИ
		//3К 
		|	    (ТаблицаТовары.ОрдернаяСхемаПриПриемке 
		|   		И  &СпособОтраженияРасхождений_Акт = ЗНАЧЕНИЕ(Перечисление.СпособыОтраженияАктовОРасхожденияПослеПоступления.ОформлениеКорректировокПоступления)
		|			И  ТаблицаТовары.Действие В(
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОформитьНедостачуИОжидатьДопоставку),
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОформитьНедостачу))))
		|		
		|ОБЪЕДИНИТЬ ВСЕ
		|
		/////////////////////////////////////////
		// Излишек при приемке (Расхождения > 0).
		//
		// Компенсация заказа/накладной на ордерном складе (оптимистично считая, что приняли лишнее).
	//20210115 ГлазуновДВ Задача 3923 ОТКЛЮЧЕНО	
		//|ВЫБРАТЬ
		//|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		//|	ТаблицаТовары.НомерСтроки              КАК НомерСтроки,
		//|	&Период_Акт                            КАК Период,
		//|	
		//|	ТаблицаТовары.Распоряжение             КАК ДокументПоступления,
		//|	
		//|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
		//|	ТаблицаТовары.Характеристика           КАК Характеристика,
		//|	ТаблицаТовары.Склад                    КАК Склад,
		//|	&Партнер_Акт                           КАК Отправитель,
		//|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
		//|
		//|	ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия,
		//|	
		//|	ТаблицаТовары.Расхождения              КАК КОформлениюОрдеров,
		//|	0                                      КАК КОформлениюПоступленийПоОрдерам,
		//|	&ХозяйственнаяОперация_Акт             КАК ХозяйственнаяОперация
		//|ИЗ
		//|	ВтТовары КАК ТаблицаТовары
		//|ГДЕ
		//|	&Статус_Акт В(
		//|		ЗНАЧЕНИЕ(Перечисление.СтатусыАктаОРасхождениях.КВыполнению),
		//|		ЗНАЧЕНИЕ(Перечисление.СтатусыАктаОРасхождениях.Отработано))
		//|	
		//|	И 
		////4T
		//| 		(ТаблицаТовары.ОрдернаяСхемаПриПриемке
		//|			И ТаблицаТовары.Действие = ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ВернутьПерепоставленноеБезОформления))
		//|
		//|ОБЪЕДИНИТЬ ВСЕ
		|
		// Компенсация заказа/накладной (оптимистично считая, что приняли лишнее).
		|ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ТаблицаТовары.НомерСтроки              КАК НомерСтроки,
		|	&Период_Акт                            КАК Период,
		|	
		|	ТаблицаТовары.Распоряжение             КАК ДокументПоступления,
		|	
		|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
		|	ТаблицаТовары.Характеристика           КАК Характеристика,
		|	ТаблицаТовары.Склад                    КАК Склад,
		|	&Партнер_Акт                           КАК Отправитель,
		|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
		|	
		|	ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия,
		|	
		|	ТаблицаТовары.Расхождения              КАК КОформлениюОрдеров,
		|	0                                      КАК КОформлениюПоступленийПоОрдерам,
		|	&ХозяйственнаяОперация_Акт             КАК ХозяйственнаяОперация
		|ИЗ
		|	ВтТовары КАК ТаблицаТовары
		|ГДЕ
		|	&Статус_Акт В(
		|		ЗНАЧЕНИЕ(Перечисление.СтатусыАктаОРасхождениях.КВыполнению),
		|		ЗНАЧЕНИЕ(Перечисление.СтатусыАктаОРасхождениях.Отработано))
		|	
		|	И  ТаблицаТовары.ОрдернаяСхемаПриПриемке
		|
		//8O
		|	И  
		|		(ТаблицаТовары.Действие = ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОтнестиПерепоставленноеНаПрочиеДоходы)
		//6K
		|        ИЛИ
		|		 ((ТаблицаТовары.Действие = ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОформитьПерепоставленное)
		|		 	ИЛИ ТаблицаТовары.Действие = ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОформитьПерепоставленноеИВернуть))
		|		  И &СпособОтраженияРасхождений_Акт = ЗНАЧЕНИЕ(Перечисление.СпособыОтраженияАктовОРасхожденияПослеПоступления.ОформлениеКорректировокПоступления)))
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		/////////////////////////////////////////
		// Недостача при приемке (Расхождения < 0).
		//
		// Компенсация Приходного ордера (оптимистично считая, что товар недоприняли) при корректировке.
		|ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	ТаблицаТовары.НомерСтроки              КАК НомерСтроки,
		|	&Период_Акт                            КАК Период,
		|	ТаблицаТовары.Распоряжение             КАК ДокументПоступления,
		|	
		|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
		|	ТаблицаТовары.Характеристика           КАК Характеристика,
		|	ТаблицаТовары.Склад                    КАК Склад,
		|	&Партнер_Акт                           КАК Отправитель,
		|	ТаблицаТовары.НазначениеСкладское      КАК Назначение,
		|
		|	ТаблицаТовары.Серия					   КАК Серия,
		|	
		|	0                                      КАК КОформлениюОрдеров,
		|	ТаблицаТовары.Расхождения              КАК КОформлениюПоступленийПоОрдерам,
		|	&ХозяйственнаяОперация_Акт             КАК ХозяйственнаяОперация
		|ИЗ
		|	ВтТовары КАК ТаблицаТовары
		|ГДЕ
		|	&Статус_Акт В(
		|		ЗНАЧЕНИЕ(Перечисление.СтатусыАктаОРасхождениях.КВыполнению),
		|		ЗНАЧЕНИЕ(Перечисление.СтатусыАктаОРасхождениях.Отработано))
		|	
		|	И ТаблицаТовары.ОрдернаяСхемаПриПриемке
		|	
		//2Д
		|	И (&СпособОтраженияРасхождений_Акт = ЗНАЧЕНИЕ(Перечисление.СпособыОтраженияАктовОРасхожденияПослеПоступления.ОформлениеКорректировокПоступления)
		|
		|			И ТаблицаТовары.Действие В(
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОформитьНедостачу),
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОформитьНедостачуИОжидатьДопоставку))
		|		
		//7С
		|		ИЛИ 
		|			ТаблицаТовары.Действие = ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОтнестиНедостачуНаПрочиеРасходы))
		|
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		/////////////////////////////////////////
		// Излишек при приемке (Расхождения > 0).
		//
		// Закрытие свободных остатков при возврате перепоставленного товара
		|ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ТаблицаТовары.НомерСтроки              КАК НомерСтроки,
		|	&Период_Акт                            КАК Период,
		|	ТаблицаТовары.Распоряжение             КАК ДокументПоступления,
		|	
		|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
		|	ТаблицаТовары.Характеристика           КАК Характеристика,
		|	ТаблицаТовары.Склад                    КАК Склад,
		|	&Партнер_Акт                           КАК Отправитель,
		|	ТаблицаТовары.НазначениеСкладское      КАК Назначение,
		|
		|	ТаблицаТовары.Серия                    КАК Серия,
		|	
		|	0                                      КАК КОформлениюОрдеров,
		|	-ТаблицаТовары.Расхождения             КАК КОформлениюПоступленийПоОрдерам,
		|	&ХозяйственнаяОперация_Акт             КАК ХозяйственнаяОперация
		|ИЗ
		|	ВтТовары КАК ТаблицаТовары
		|ГДЕ
		|	&Статус_Акт В(
		|		ЗНАЧЕНИЕ(Перечисление.СтатусыАктаОРасхождениях.КВыполнению),
		|		ЗНАЧЕНИЕ(Перечисление.СтатусыАктаОРасхождениях.Отработано))
		|	
		//6K
		|	И ((ТаблицаТовары.ОрдернаяСхемаПриПриемке
		|	
		|			И &СпособОтраженияРасхождений_Акт = ЗНАЧЕНИЕ(Перечисление.СпособыОтраженияАктовОРасхожденияПослеПоступления.ОформлениеКорректировокПоступления)
		|		
		|			И ТаблицаТовары.Действие В(
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОформитьПерепоставленноеИВернуть),
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОформитьПерепоставленное)))
		|		ИЛИ
		|
		|       ( ТаблицаТовары.ОрдернаяСхемаПриПриемке 
		//4T
//Исходное		|		  	И (ТаблицаТовары.Действие = ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ВернутьПерепоставленноеБезОформления)
//Исходное		//8О
//Исходное		|				ИЛИ ТаблицаТовары.Действие = ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОтнестиПерепоставленноеНаПрочиеДоходы))))";
	//20210115 ГлазуновДВ Задача 3923 ОТКЛЮЧЕНО	
		|				И (ТаблицаТовары.Действие = ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОтнестиПерепоставленноеНаПрочиеДоходы))))";	
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтТовары(Запрос, ТекстыЗапроса)

	ИмяРегистра = "ВтТовары";
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка                                          КАК Ссылка,
	|	ТаблицаТовары.Номенклатура                                    КАК Номенклатура,
	|	ТаблицаТовары.Характеристика                                  КАК Характеристика,
	|	ТаблицаТовары.Склад                                           КАК Склад,
	|	ТаблицаТовары.Назначение                                      КАК Назначение,
	|	ВЫБОР КОГДА ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам ТОГДА
	|				ТаблицаТовары.Назначение
	|			ИНАЧЕ
	|				ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ                                                          КАК НазначениеСкладское,
	|	ТаблицаТовары.Количество - ТаблицаТовары.КоличествоПоДокументу КАК Расхождения,
	|	ТаблицаТовары.СтатусУказанияСерий                              КАК СтатусУказанияСерий,
	|	ТаблицаТовары.Серия                                            КАК Серия,
	|	ТаблицаТовары.НомерСтроки                                      КАК НомерСтроки,
	|	ТаблицаТовары.ДокументОснование                                КАК ДокументОснование,
	|	РегистраторГрафикаДвиженияТоваров.Ссылка                       КАК РегистраторГрафикаДвиженияТоваров,
	|	ТаблицаТовары.ЗаказПоставщику                                  КАК ЗаказПоставщику,
	|	0                                                              КАК Порядок,
	|	ТаблицаТовары.Действие                                         КАК Действие,
	|	
	|	ВЫБОР 
	|		КОГДА ТаблицаТовары.ЗаказПоставщику В(НЕОПРЕДЕЛЕНО, 
	|												ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка),
	|                                                ЗНАЧЕНИЕ(Документ.ЗаявкаНаВозвратТоваровОтКлиента.ПустаяСсылка)) 
	|		ИЛИ &НакладнаяЯвляетсяРаспоряжением_Акт
	|			ТОГДА
	|				ТаблицаТовары.ДокументОснование
	|			ИНАЧЕ
	|				ТаблицаТовары.ЗаказПоставщику
	|	КОНЕЦ                                                      КАК Распоряжение,
	|	
	|	ВЫБОР 
	|		КОГДА СпрСклад.ИспользоватьОрдернуюСхемуПриПоступлении И СпрСклад.ДатаНачалаОрдернойСхемыПриПоступлении <= &Период_Акт 
	|			ТОГДА
	|				ИСТИНА
	|			ИНАЧЕ
	|				ЛОЖЬ
	|	КОНЕЦ         КАК ОрдернаяСхемаПриПриемке,
	|
	|	ВЫБОР 
	|		КОГДА СпрСклад.ИспользоватьОрдернуюСхемуПриОтгрузке И СпрСклад.ДатаНачалаОрдернойСхемыПриОтгрузке <= &Период_Акт 
	|			ТОГДА
	|				ИСТИНА
	|			ИНАЧЕ
	|				ЛОЖЬ
	|	КОНЕЦ         КАК ОрдернаяСхемаПриОтгрузке,
	|	
	|	ВЫБОР 
	|		КОГДА СпрСклад.ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач И СпрСклад.ДатаНачалаОрдернойСхемыПриОтраженииИзлишковНедостач <= &Период_Акт 
	|			ТОГДА
	|				ИСТИНА
	|			ИНАЧЕ
	|				ЛОЖЬ
	|	КОНЕЦ         КАК ОрдернаяСхемаПриОтраженииИзлишковНедостач,
	|	ВЫБОР 
	|		КОГДА
	|			НЕ ТаблицаТовары.ЗаказПоставщику В(НЕОПРЕДЕЛЕНО, 
	|												ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка),
	|                                                ЗНАЧЕНИЕ(Документ.ЗаявкаНаВозвратТоваровОтКлиента.ПустаяСсылка))
	|		ТОГДА
	|			ИСТИНА
	|		ИНАЧЕ
	|			ЛОЖЬ
	|	КОНЕЦ КАК ПоступлениеПоЗаказу,
	|	ВЫБОР 
	|		КОГДА
	|			ТаблицаТовары.Ссылка.ВариантПриемкиТоваров
	|				В (Значение(Перечисление.ВариантыПриемкиТоваров.НеРазделенаПоЗаказамИНакладным),
	|								Значение(Перечисление.ВариантыПриемкиТоваров.МожетПроисходитьБезЗаказовИНакладных))
	|					ТОГДА 
	|						ИСТИНА
	|					ИНАЧЕ
	|						ЛОЖЬ
	|	КОНЕЦ КАК РаспоряжениемЯвляетсяСоглашение,
	|	ВЫБОР 
	|		КОГДА
	|			ТаблицаТовары.Ссылка.ВариантПриемкиТоваров
	|				В (Значение(Перечисление.ВариантыПриемкиТоваров.ПоДоговорамБезЗаказовИНакладных),
	|								Значение(Перечисление.ВариантыПриемкиТоваров.ПоДоговорамПослеЗаказовИлиНакладных))
	|					ТОГДА 
	|						ИСТИНА
	|					ИНАЧЕ
	|						ЛОЖЬ
	|	КОНЕЦ КАК РаспоряжениемЯвляетсяДоговор
	|	
	|ПОМЕСТИТЬ ВтТовары
	|ИЗ
	|	Документ.АктОРасхожденияхПослеПриемки.Товары КАК ТаблицаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Склады КАК СпрСклад
	|		ПО СпрСклад.Ссылка = ТаблицаТовары.Склад
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РегистраторГрафикаДвиженияТоваров КАК РегистраторГрафикаДвиженияТоваров
	|		ПО ТаблицаТовары.ДокументОснование.Договор = РегистраторГрафикаДвиженияТоваров.Распоряжение
	|			ИЛИ ТаблицаТовары.ДокументОснование.Соглашение = РегистраторГрафикаДвиженияТоваров.Распоряжение
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка_Акт
	|	И ТаблицаТовары.КоличествоПоДокументу <> ТаблицаТовары.Количество
	|	И ТаблицаТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;

КонецФункции

Процедура ЗаполнитьПараметрыИнициализации_Акт(Запрос, ДокументСсылка)
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка_Акт", ДокументСсылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеШапки.Дата КАК Период,
	|	ДанныеШапки.Номер КАК Номер,
	|	ДанныеШапки.ПометкаУдаления КАК ПометкаУдаления,
	|	ДанныеШапки.Проведен КАК Проведен,
	|	ДанныеШапки.Партнер КАК Партнер,
	|	ДанныеШапки.Контрагент КАК Контрагент,
	|	ДанныеШапки.Организация КАК Организация,
	|	ДанныеШапки.Валюта КАК Валюта,
	|	ДанныеШапки.Статус КАК Статус,
	|	ДанныеШапки.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
	|	ДанныеШапки.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ДанныеШапки.Договор КАК Договор,
	|	ДанныеШапки.Подразделение КАК Подразделение,
	|	ДанныеШапки.Менеджер КАК Менеджер,
	|	ДанныеШапки.Комментарий КАК Комментарий,
	|	ДанныеШапки.СпособОтраженияРасхождений КАК СпособОтраженияРасхождений,
	|	ДанныеШапки.ТипОснованияАктаОРасхождении КАК ТипОснованияАктаОРасхождении,
	|	ДанныеШапки.ВариантПриемкиТоваров КАК ВариантПриемкиТоваров
	|ИЗ
	|	Документ.АктОРасхожденияхПослеПриемки КАК ДанныеШапки
	|ГДЕ
	|	ДанныеШапки.Ссылка = &Ссылка_Акт";
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();
	
	Запрос.УстановитьПараметр("Период_Акт",                        Реквизиты.Период);
	Запрос.УстановитьПараметр("ПометкаУдаления_Акт",               Реквизиты.ПометкаУдаления);
	Запрос.УстановитьПараметр("Проведен_Акт",                      Реквизиты.Проведен);
	Запрос.УстановитьПараметр("Партнер_Акт",                       Реквизиты.Партнер);
	Запрос.УстановитьПараметр("Контрагент_Акт",                    Реквизиты.Контрагент);
	Запрос.УстановитьПараметр("Валюта_Акт",                        Реквизиты.Валюта);
	Запрос.УстановитьПараметр("Статус_Акт",                        Реквизиты.Статус);
	Запрос.УстановитьПараметр("Организация_Акт",                   Реквизиты.Организация);
	Запрос.УстановитьПараметр("ЦенаВключаетНДС_Акт",               Реквизиты.ЦенаВключаетНДС);
	Запрос.УстановитьПараметр("ХозяйственнаяОперация_Акт",         Реквизиты.ХозяйственнаяОперация);
	Запрос.УстановитьПараметр("Договор_Акт",                       Реквизиты.Договор);
	Запрос.УстановитьПараметр("Подразделение_Акт",                 Реквизиты.Подразделение);
	Запрос.УстановитьПараметр("Менеджер_Акт",                 	   Реквизиты.Менеджер);
	Запрос.УстановитьПараметр("ИдентификаторМетаданных_Акт",       ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.АктОРасхожденияхПослеПриемки"));
	Запрос.УстановитьПараметр("НомерНаПечать_Акт",       		   ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Реквизиты.Номер));
	Запрос.УстановитьПараметр("Номер_Акт",       		   		   Реквизиты.Номер);
	Запрос.УстановитьПараметр("СпособОтраженияРасхождений_Акт",    Реквизиты.СпособОтраженияРасхождений);
	Запрос.УстановитьПараметр("СкладскаяОперация_Акт",             СкладскаяОперацияПоТипуОснования(Реквизиты.ТипОснованияАктаОРасхождении));
	Запрос.УстановитьПараметр("Комментарий_Акт",                   Реквизиты.Комментарий);
	
	Если ЗначениеЗаполнено(Реквизиты.Договор) Тогда
		ИнформацияПоДоговору = НСтр("ru = 'По договору ""%Договор%""';
									|en = 'Under the ""%Договор%"" contract'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
		ИнформацияПоДоговору = СтрЗаменить(ИнформацияПоДоговору, "%Договор%", Реквизиты.Договор);
	КонецЕсли;
	Запрос.УстановитьПараметр("ИнформацияПоДоговору_Акт", ИнформацияПоДоговору);
	
	Если ЗакупкиСервер.РаспоряжениеНаПриемкуТовараНакладная(Реквизиты.ВариантПриемкиТоваров) Тогда
		Запрос.УстановитьПараметр("НакладнаяЯвляетсяРаспоряжением_Акт", Истина);
	Иначе
		Запрос.УстановитьПараметр("НакладнаяЯвляетсяРаспоряжением_Акт", Ложь);
	КонецЕсли;
	
КонецПроцедуры

Функция СкладскаяОперацияПоТипуОснования(ТипОснованияАктаОРасхождении)
	
	Если ТипОснованияАктаОРасхождении = Перечисления.ТипыОснованияАктаОРасхождении.ПриобретениеТоваровУслуг
		//++ НЕ УТ
		Или ТипОснованияАктаОРасхождении = Перечисления.ТипыОснованияАктаОРасхождении.ПриемкаТоваровНаХранение
		//-- НЕ УТ
		Тогда
		
		СкладскаяОперация = Перечисления.СкладскиеОперации.ПриемкаОтПоставщика;
		
	ИначеЕсли ТипОснованияАктаОРасхождении = Перечисления.ТипыОснованияАктаОРасхождении.ВозвратТоваровОтКлиента
		//++ НЕ УТ
		Или ТипОснованияАктаОРасхождении = Перечисления.ТипыОснованияАктаОРасхождении.ВозвратТоваровОтХранителя
		//-- НЕ УТ
		Тогда
		
		СкладскаяОперация = Перечисления.СкладскиеОперации.ПриемкаПоВозвратуОтКлиента;
		
	Иначе
		СкладскаяОперация = Неопределено;
	КонецЕсли;
	
	Возврат СкладскаяОперация;
	
КонецФункции
//}}20201012 ГлазуновДВ

