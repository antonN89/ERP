#Область Интерактивная

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	АдресНоменклатураСпискаВоВременномХранилище = Параметры.АдресНоменклатураСпискаВоВременномХранилище;
	
	ТЗ = ПолучитьИзВременногоХранилища(АдресНоменклатураСпискаВоВременномХранилище);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Номенклатура.КлассETIM.Родитель КАК КлассETIMРодитель,
	|	Номенклатура.КлассETIM КАК КлассETIM,
	|	Номенклатура.Код КАК КодНоменклатуры
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура.Код В(&Массив)
	|	И НЕ Номенклатура.КлассETIM = ЗНАЧЕНИЕ(Справочник.Рин1_ГруппыКлассыETIM.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	Номенклатура.КлассETIM,
	|	Номенклатура.Код";
	
	Запрос.УстановитьПараметр("Массив", ТЗ.ВыгрузитьКолонку("Код"));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Результат = РезультатЗапроса.Выгрузить();
	
	ВходящаяНоменклатура.ЗагрузитьЗначения(Результат.ВыгрузитьКолонку("КодНоменклатуры")); //неизменный список номенклатуры
	ИсходящаяНоменклатура = ВходящаяНоменклатура.Скопировать();                            //изменяющийся в зависимости от отборов список номенклатуры
	
	//установим отбор только по присутствующим классам во входящей номенклатуре
	Результат.Свернуть("КлассETIMРодитель,КлассETIM");
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(КлассыETIM,"КлассETIM",Результат.ВыгрузитьКолонку("КлассETIM"),ВидСравненияКомпоновкиДанных.ВСписке);
	
	//установить видимость только в выбранных группах
	Результат.Свернуть("КлассETIMРодитель");
	
	Группы = Новый СписокЗначений();
	Для каждого Стр Из Результат Цикл
		Группы.Добавить(Стр.КлассETIMРодитель);
	КонецЦикла;
	 
	ЭлементОформления = КлассыETIM.УсловноеОформление.Элементы.Добавить();
	ЭлементОформления.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);
	УслОформГруппаНЕ = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	УслОформГруппаНЕ.Использование = Истина;
	УслОформГруппаНЕ.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаНе;
	УслОформГруппаНЕ.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Обычный;
	УслОформПоГруппе = УслОформГруппаНЕ.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	УслОформПоГруппе.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("КлассETIM");
	УслОформПоГруппе.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСпискеПоИерархии;
	УслОформПоГруппе.ПравоеЗначение = Группы;	
	
	//принудительно очистим таблицу СвойстваЗначенияETIM
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(СвойстваЗначенияETIM,"Владелец",Неопределено,ВидСравненияКомпоновкиДанных.ВСписке);
	
	ОбновитьДинамическийСписокНайденнаяНоменклатура(ВходящаяНоменклатура);
	
	Элементы.ГруппаЗначения.Видимость = Ложь;
	
КонецПроцедуры //ПриСозданииНаСервере

&НаКлиенте
Процедура КлассыETIMВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если не ТипЗнч(ВыбраннаяСтрока) = Тип("СтрокаГруппировкиДинамическогоСписка") Тогда
		Отбор = Новый Структура("Наименование",Элемент.ТекущиеДанные.Наименование);
		Если ВыбранныеКлассыETIM.НайтиСтроки(Отбор).Количество() = 0 Тогда 
			НовСтр = ВыбранныеКлассыETIM.Добавить();
			ЗаполнитьЗначенияСвойств(НовСтр,Элемент.ТекущиеДанные);
			НовСтр.КлассETIM = Элемент.ТекущаяСтрока;
			ОбновитьСвойстваETIM();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСвойстваETIM()
	
	ТЗ = ДанныеФормыВЗначение(ВыбранныеКлассыETIM,Тип("ТаблицаЗначений"));
	Владельцы = ТЗ.ВыгрузитьКолонку("КлассETIM");
	
	//***** Это работает и заполняет только свойства которые есть в подобранной номенклатуре
	//Запрос = Новый Запрос;
	//Запрос.Текст = 
	//"ВЫБРАТЬ
	//|	Рин1_ЗначенияСвойствНоменклатуры.Свойство КАК Свойство
	//|ИЗ
	//|	РегистрСведений.Рин1_ЗначенияСвойствНоменклатуры КАК Рин1_ЗначенияСвойствНоменклатуры
	//|ГДЕ
	//|	Рин1_ЗначенияСвойствНоменклатуры.Номенклатура.Код В(&ВходящаяНоменклатура)";
	//
	//Запрос.УстановитьПараметр("ВходящаяНоменклатура", ВходящаяНоменклатура);
	
	//****** Это работает и заполняет все свойства по подобранным классам
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Рин1_СвойстваКлассаETIM.Ссылка КАК Свойство
	|ИЗ
	|	Справочник.Рин1_СвойстваКлассаETIM КАК Рин1_СвойстваКлассаETIM
	|ГДЕ
	|	Рин1_СвойстваКлассаETIM.Владелец В(&Владельцы)";
	
	Запрос.УстановитьПараметр("Владельцы", Владельцы);
	
	РезультатЗапроса = Запрос.Выполнить();
	Результат = РезультатЗапроса.Выгрузить();
	
	Свойство = Результат.ВыгрузитьКолонку("Свойство"); 
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(СвойстваЗначенияETIM,"Владелец",Владельцы,ВидСравненияКомпоновкиДанных.ВСписке);
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(СвойстваЗначенияETIM,"Ссылка",Свойство,ВидСравненияКомпоновкиДанных.ВСписке);
	
	ИзменитьДинамическийСписокНайденнаяНоменклатура();
	
КонецПроцедуры // ОбновитьСвойстваETIM()

&НаКлиенте
Процедура ВыбранныеКлассыETIMПослеУдаления(Элемент)
	
	ОбновитьСвойстваETIM();
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьКлассы(Команда)
	
	Если не ВыбранныеКлассыETIM.Количество() = 0 Тогда 
		ВыбранныеКлассыETIM.Очистить();	
		ОбновитьСвойстваETIM();
		ЗначенияСвойства.Очистить();
		Элементы.ГруппаЗначения.Видимость = Ложь;
		ИсходящаяНоменклатура = ВходящаяНоменклатура.Скопировать();
		ОбновитьДинамическийСписокНайденнаяНоменклатура(ВходящаяНоменклатура);
		ОчиститьСвойства(Неопределено);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьСвойства(Команда)
	
	ЭлементОформления = СвойстваЗначенияETIM.УсловноеОформление.Элементы;
	Пока  ЭлементОформления.Количество() > 0 Цикл
		
		Для каждого Элемент Из ЭлементОформления Цикл
			
			ЭлементОформления.Удалить(Элемент);
			
		КонецЦикла;
		
	КонецЦикла;
	
	ТаблицаОтборов.Очистить();
	
	Для каждого Строка Из ЗначенияСвойства Цикл
	
		Строка.Пометка = Ложь;
	
	КонецЦикла;
	
	Value_N = 0;
	Value_N1 = 0;
	Value_R = 0;
	Value_R1 = 0;
	Value_L = Неопределено;
	
	ОбновитьДинамическийСписокНайденнаяНоменклатура(ИсходящаяНоменклатура);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗначенияСвойстваПометкаПриИзменении(Элемент) //Value_A
		
	Свойство = Элемент.Родитель.ТекущиеДанные.Свойство;
	Значение = Элемент.Родитель.ТекущиеДанные.Представление;
	Тип  = Элемент.Родитель.ТекущиеДанные.Тип;
	
	Пометка  = Элемент.Родитель.ТекущиеДанные.Пометка;
	
	Отбор = Новый Структура();
	Отбор.Вставить("Свойство",Свойство);
	Отбор.Вставить("Значение",Значение);
	
	Если Пометка Тогда
		
		НовСтр = ТаблицаОтборов.Добавить();
		НовСтр.Свойство = Свойство;
		НовСтр.Значение = Значение;
		НовСтр.Тип      = Тип;
		
		УстановитьУсловноеОформление_СвойстваЗначенияETIM(Свойство, Значение);
		
	Иначе
		
		Массив = ТаблицаОтборов.НайтиСтроки(Отбор);
		Для Каждого Элемент Из Массив Цикл 
			ТаблицаОтборов.Удалить(Элемент);
		КонецЦикла; 		
		
		СнятьУсловноеОформление_СвойстваЗначенияETIM(Свойство, Значение);
		
	КонецЕсли; 	
	
	ИзменитьДинамическийСписокНайденнаяНоменклатура(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура Value_N_ПриИзменении(Элемент)
		
	Свойство = Value_N_Список[0].Значение;
	Значение = Элемент.ТекстРедактирования;	
	Заголовок_N = Элемент.Заголовок;
	
	Отбор = Новый Структура();
	Отбор.Вставить("Свойство",Свойство);		
	Массив = ТаблицаОтборов.НайтиСтроки(Отбор);
	
	Если не Число(?(Значение = "-",0,Значение)) = 0 Тогда
		
		//ищим в ТаблицаОтборов строку с входящим свойством	
		Если Массив.Количество() = 0 Тогда
			
			НовСтр = ТаблицаОтборов.Добавить();
			
			Если Заголовок_N = "от" Тогда
				
				НовСтр.Свойство = Свойство;
				НовСтр.Значение = Значение;
				НовСтр.Тип = ПредопределенноеЗначение("Перечисление.Рин1_ТипСвойства.N");
				
			Иначе
				
				НовСтр.Свойство = Свойство;
				НовСтр.Значение1 = Значение;
				НовСтр.Тип = ПредопределенноеЗначение("Перечисление.Рин1_ТипСвойства.N");
				
			КонецЕсли;
			
		Иначе
			
			Для каждого Элемент Из Массив Цикл
				
				Если Заголовок_N = "от" Тогда
					
					Если не Элемент.Значение1 = "" Тогда
						
						СнятьУсловноеОформление_СвойстваЗначенияETIM(Свойство, Элемент.Значение);      // удалим оформление до корректировки элемента иначе значение предыдущее взять негде
						
						От = Число(Значение);
						До = Число(Элемент.Значение1);
						
						Если (От >= 0 и От > До) или (От < 0 и До < 0 и От > До) Тогда  //+ диапазон  или - диапазон
							
							Сообщить("Введенное не корректное значение!");
							Элемент.Значение = "";
							Value_N = 0;
							Возврат;
							
						КонецЕсли;
						
					КонецЕсли;
					
					Элемент.Значение = Значение;
					
				Иначе
					
					Если не Элемент.Значение = "" Тогда
						
						СнятьУсловноеОформление_СвойстваЗначенияETIM(Свойство, Элемент.Значение1);      // удалим оформление до корректировки элемента иначе значение предыдущее взять негде

						От = Число(Элемент.Значение);
						До = Число(Значение);
						
						Если (От >= 0 и От > До) или (От < 0 и До < 0 и От > До) Тогда  //+ диапазон  или - диапазон
							
							Сообщить("Введенное не корректное значение!");
							Элемент.Значение1 = "";
							Value_N1 = 0;
							Возврат;
							
						КонецЕсли;
						
					КонецЕсли;
					
					Элемент.Значение1 = Значение;				
					
				КонецЕсли;				
				
			КонецЦикла;
			
		КонецЕсли;
		
		УстановитьУсловноеОформление_СвойстваЗначенияETIM(Свойство, Значение);
		
	Иначе
		
		Для каждого Элемент Из Массив Цикл
			
			Если Заголовок_N = "от" Тогда
				Если Значение = "-" Тогда
					СнятьУсловноеОформление_СвойстваЗначенияETIM(Свойство, Элемент.Значение);      // удалим оформление до удаления элемента иначе значение предыдущее взять негде
				КонецЕсли;
			Иначе 
				Если Значение = "-" Тогда
					СнятьУсловноеОформление_СвойстваЗначенияETIM(Свойство, Элемент.Значение1);      // удалим оформление до удаления элемента иначе значение предыдущее взять негде
				КонецЕсли;
			КонецЕсли;
			
			Если СвойстваЗначенияETIM.УсловноеОформление.Элементы.Количество() = 0 Тогда
				
				ТаблицаОтборов.Удалить(Элемент); 
								
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	ИзменитьДинамическийСписокНайденнаяНоменклатура(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура Value_R_ПриИзменении(Элемент)
	
	Свойство = Value_R_Список[0].Значение;
	Значение = Элемент.ТекстРедактирования;	
	Заголовок_R = Элемент.Заголовок;

	Отбор = Новый Структура();
	Отбор.Вставить("Свойство",Свойство);		
	Массив = ТаблицаОтборов.НайтиСтроки(Отбор);
	
	Если не Число(?(Значение = "-",0,Значение)) = 0 Тогда
		
		//ищим в ТаблицаОтборов строку с входящим свойством, что бы значение и значение1 вписать в одну строку - это диапазон		
		Если Массив.Количество() = 0 Тогда
			
			НовСтр = ТаблицаОтборов.Добавить();
			
			Если Заголовок_R = "от" Тогда
				
				НовСтр.Свойство = Свойство;
				НовСтр.Значение = Значение;
				НовСтр.Тип = ПредопределенноеЗначение("Перечисление.Рин1_ТипСвойства.R");
				
			Иначе
				
				НовСтр.Свойство = Свойство;
				НовСтр.Значение1 = Значение;
				НовСтр.Тип = ПредопределенноеЗначение("Перечисление.Рин1_ТипСвойства.R");
				
			КонецЕсли;
			
		Иначе
			
			Для каждого Элемент Из Массив Цикл
				
				Если Заголовок_R = "от" Тогда
					
					Если не Элемент.Значение1 = "" Тогда
						
						СнятьУсловноеОформление_СвойстваЗначенияETIM(Свойство, Элемент.Значение);      // удалим оформление до корректировки элемента иначе значение предыдущее взять негде
						
						От = Число(Значение);
						До = Число(Элемент.Значение1);
						
						Если (От >= 0 и От > До) или (От < 0 и До < 0 и От > До) Тогда  //+ диапазон  или - диапазон
							
							Сообщить("Введенное не корректное значение!");
							Элемент.Значение = "";
							Value_R = 0;
							Возврат;
							
						КонецЕсли;
						
					КонецЕсли;
					
					Элемент.Значение = Значение;
					
				Иначе
					
					Если не Элемент.Значение = "" Тогда
						
						СнятьУсловноеОформление_СвойстваЗначенияETIM(Свойство, Элемент.Значение1);      // удалим оформление до корректировки элемента иначе значение предыдущее взять негде

						От = Число(Элемент.Значение);
						До = Число(Значение);
						
						Если (От >= 0 и От > До) или (От < 0 и До < 0 и От > До) Тогда  //+ диапазон  или - диапазон
							
							Сообщить("Введенное не корректное значение!");
							Элемент.Значение1 = "";
							Value_R1 = 0;
							Возврат;
							
						КонецЕсли;
						
					КонецЕсли;
					
					Элемент.Значение1 = Значение;				
					
				КонецЕсли;				
				
			КонецЦикла;
			
		КонецЕсли;
		
		УстановитьУсловноеОформление_СвойстваЗначенияETIM(Свойство, Значение);
		
	Иначе
		
		Для каждого Элемент Из Массив Цикл
			
			Если Заголовок_R = "от" Тогда
				Если Значение = "-" Тогда
					СнятьУсловноеОформление_СвойстваЗначенияETIM(Свойство, Элемент.Значение);      // удалим оформление до удаления элемента иначе значение предыдущее взять негде
				КонецЕсли;
			Иначе 
				Если Значение = "-" Тогда
					СнятьУсловноеОформление_СвойстваЗначенияETIM(Свойство, Элемент.Значение1);      // удалим оформление до удаления элемента иначе значение предыдущее взять негде
				КонецЕсли;
			КонецЕсли;
			
			Если СвойстваЗначенияETIM.УсловноеОформление.Элементы.Количество() = 0 Тогда
			
				ТаблицаОтборов.Удалить(Элемент); 
												 
			
			КонецЕсли;
						
		КонецЦикла;
		
	КонецЕсли;
	
	ИзменитьДинамическийСписокНайденнаяНоменклатура(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура Value_L_ПриИзменении(Элемент)
	
	Свойство = Value_L_Список[0].Значение;
	Значение = Элемент.ТекстРедактирования;
	
	Отбор = Новый Структура();
	Отбор.Вставить("Свойство",Свойство);	
	Массив = ТаблицаОтборов.НайтиСтроки(Отбор);
	
	Если Значение = "Да" Тогда
		
		//удалим возможно имеющиеся старые значения
		Для каждого Элемент Из Массив Цикл
			
			СнятьУсловноеОформление_СвойстваЗначенияETIM(Свойство, Элемент.Значение); // удалим оформление до удаления элемента иначе значение предыдущее взять негде
			ТаблицаОтборов.Удалить(Элемент);
			
		КонецЦикла;
		
		//и создадим новые значения
		НовСтр = ТаблицаОтборов.Добавить();
		НовСтр.Свойство = Свойство;
		НовСтр.Значение = Значение;
		НовСтр.Тип = ПредопределенноеЗначение("Перечисление.Рин1_ТипСвойства.L");
		
		УстановитьУсловноеОформление_СвойстваЗначенияETIM(Свойство, Значение);
		
	ИначеЕсли Значение = "Нет" Тогда
		
		//удалим возможно имеющиеся старые значения
		Для каждого Элемент Из Массив Цикл
			
			СнятьУсловноеОформление_СвойстваЗначенияETIM(Свойство, Элемент.Значение); // удалим оформление до удаления элемента иначе значение предыдущее взять негде
			ТаблицаОтборов.Удалить(Элемент);
			
		КонецЦикла;
		
		//и создадим новые значения
		НовСтр = ТаблицаОтборов.Добавить();
		НовСтр.Свойство = Свойство;
		НовСтр.Значение = Значение;
		НовСтр.Тип = ПредопределенноеЗначение("Перечисление.Рин1_ТипСвойства.L");
		
		УстановитьУсловноеОформление_СвойстваЗначенияETIM(Свойство, Значение);
		
	Иначе
		
		Для каждого Элемент Из Массив Цикл
			
			СнятьУсловноеОформление_СвойстваЗначенияETIM(Свойство, Элемент.Значение); // удалим оформление до удаления элемента иначе значение предыдущее взять негде
			ТаблицаОтборов.Удалить(Элемент);
			
		КонецЦикла;
		
	КонецЕсли;
	
	ИзменитьДинамическийСписокНайденнаяНоменклатура(Истина);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление_СвойстваЗначенияETIM(Свойство, Значение)
		
	ЭлементОформления = СвойстваЗначенияETIM.УсловноеОформление.Элементы.Добавить();
	ЭлементОтбора = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Ссылка"); 
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.ПравоеЗначение = Свойство;
	ЭлементОтбора.Использование = Истина;
	ЭлементОтбора.Представление = Значение;
	ЭлементОформления.Оформление.УстановитьЗначениеПараметра("Шрифт", Новый Шрифт(,,Истина));
	
	
КонецПроцедуры // УстановитьУсловноеОформление_СвойстваЗначенияETIM() 

&НаСервере
Процедура СнятьУсловноеОформление_СвойстваЗначенияETIM(Свойство, Значение)
	
	ЭлементОформления = СвойстваЗначенияETIM.УсловноеОформление.Элементы;
	
	Для каждого Элемент Из ЭлементОформления Цикл
		
		Если Строка(Элемент.Отбор) = Значение Тогда
			
			Для каждого ЭлементОтбора Из Элемент.Отбор.Элементы Цикл
				
				Если ЭлементОтбора.ПравоеЗначение = Свойство Тогда
					
					ЭлементОформления.Удалить(Элемент);
					
				КонецЕсли;
				
			КонецЦикла;	
			
		КонецЕсли;  	
		
	КонецЦикла;
	
КонецПроцедуры // СнятьУсловноеОформление_СвойстваЗначенияETIM()

&НаСервере
Процедура ОбработкаЗначенийСвойств(Свойство, Тип)  //восстановление выбранных значений
	
	Элементы.ГруппаЗначения.Видимость = Истина;
	
	Если Тип = Перечисления.Рин1_ТипСвойства.A Тогда
		
		Элементы.ГруппаТЧ_Значений.Видимость = Истина;
		Элементы.ГруппаКоллекция_Значений.Видимость = Ложь;	 
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Рин1_СвойстваКлассаETIMValue.Value_A КАК Значение,
		|	Рин1_СвойстваКлассаETIMValue.ПредставлениеЗначения КАК Представление,
		|	Рин1_СвойстваКлассаETIMValue.Ссылка КАК Свойство,
		|	Рин1_СвойстваКлассаETIMValue.Ссылка.Владелец КАК Владелец,
		|	Рин1_СвойстваКлассаETIMValue.Ссылка.ТИП КАК ТИП,
		|	ВЫБОР
		|		КОГДА Рин1_СвойстваКлассаETIMValue.ПредставлениеЗначения В (&Список)
		|				И Рин1_СвойстваКлассаETIMValue.Ссылка = &Свойство
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК Пометка
		|ИЗ
		|	Справочник.Рин1_СвойстваКлассаETIM.Value КАК Рин1_СвойстваКлассаETIMValue
		|ГДЕ
		|	Рин1_СвойстваКлассаETIMValue.Ссылка = &Свойство";
		
		Запрос.УстановитьПараметр("Свойство", Свойство);
		
		Отбор = Новый Структура();
		Отбор.Вставить("Свойство",Свойство);
		Массив = ТаблицаОтборов.НайтиСтроки(Отбор);
		
		Список = Новый СписокЗначений;
		
		Для каждого Элемент Из Массив Цикл
		
			Список.Добавить(Элемент.Значение);
		
		КонецЦикла;
		
		Запрос.УстановитьПараметр("Список", Список);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ЗначенияСвойства.Загрузить(РезультатЗапроса.Выгрузить());
		
	Иначе
		
		Элементы.ГруппаТЧ_Значений.Видимость = Ложь;
		Элементы.ГруппаКоллекция_Значений.Видимость = Истина;	
		
		Если Тип = Перечисления.Рин1_ТипСвойства.L Тогда  //булево 1-нет, 2-да, 3-Х (очищаем)
			
			Элементы.ValueL.Видимость = Истина;
			Элементы.ValueN.Видимость = Ложь;
			Элементы.ValueR.Видимость = Ложь;
			Элементы.ГруппаЕдиницаИзмерения.Видимость = Ложь;
			
			Value_L_Список.Очистить();
			Value_L_Список.Добавить(Свойство);
			
			ТЗ = ДанныеФормыВЗначение(ТаблицаОтборов,Тип("ТаблицаЗначений"));
			НайденаСтрока = ТЗ.Найти(Свойство,"Свойство");
			Если НайденаСтрока = Неопределено Тогда 
				Value_L = Неопределено;
			Иначе 
				Если НайденаСтрока.Значение = "Да" Тогда
					Value_L = 2;
				ИначеЕсли НайденаСтрока.Значение = "Нет" Тогда 
					Value_L = 1;
				Иначе 	
					Value_L = Неопределено;
				КонецЕсли;
			КонецЕсли;						
			
		ИначеЕсли Тип = Перечисления.Рин1_ТипСвойства.N Тогда  //число
			
			Элементы.ValueL.Видимость = Ложь;
			Элементы.ValueN.Видимость = Истина;
			Элементы.ValueR.Видимость = Ложь;
			Элементы.ГруппаЕдиницаИзмерения.Видимость = ?(Свойство.ЕдиницаИзмерения = "",Ложь,Истина);
			Элементы.ЕдиницаИзмерения.Заголовок = Свойство.ЕдиницаИзмерения;
			Элементы.ДекорацияДиапазонR.Видимость = Ложь;
			Элементы.ДекорацияДиапазонN.Видимость = Истина;
			
			Value_N_Список.Очистить();
			Value_N_Список.Добавить(Свойство);
			
			ТЗ = ДанныеФормыВЗначение(ТаблицаОтборов,Тип("ТаблицаЗначений"));
			НайденаСтрока = ТЗ.Найти(Свойство,"Свойство");
			Если НайденаСтрока = Неопределено Тогда 
				Value_N = 0;
				Value_N1 = 0;
			Иначе 
				Value_N = Число(?(НайденаСтрока.Значение = "",0,НайденаСтрока.Значение));
				Value_N1 = Число(?(НайденаСтрока.Значение = "",0,НайденаСтрока.Значение));
			КонецЕсли;
			
		ИначеЕсли Тип = Перечисления.Рин1_ТипСвойства.R Тогда  //число
			
			Элементы.ValueL.Видимость = Ложь;
			Элементы.ValueN.Видимость = Ложь;
			Элементы.ValueR.Видимость = Истина;
			Элементы.ГруппаЕдиницаИзмерения.Видимость = ?(Свойство.ЕдиницаИзмерения = "",Ложь,Истина);
			Элементы.ЕдиницаИзмерения.Заголовок = Свойство.ЕдиницаИзмерения;
			Элементы.ДекорацияДиапазонR.Видимость = Истина;
			Элементы.ДекорацияДиапазонN.Видимость = Ложь;

			Value_R_Список.Очистить();
			Value_R_Список.Добавить(Свойство);
			
			ТЗ = ДанныеФормыВЗначение(ТаблицаОтборов,Тип("ТаблицаЗначений"));
			
			НайденаСтрока = ТЗ.Найти(Свойство,"Свойство");
			Если НайденаСтрока = Неопределено Тогда 
				Value_R  = 0;
				Value_R1 = 0;
			Иначе 
				Value_R  = Число(?(НайденаСтрока.Значение = "",0,НайденаСтрока.Значение));
				Value_R1 = Число(?(НайденаСтрока.Значение1 = "",0,НайденаСтрока.Значение1));
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры // ОбработкаЗначенийСвойств(Свойство)

&НаКлиенте
Процедура СвойстваЗначенияETIMВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если не Элемент.ТекущиеДанные.РодительскаяГруппировкаСтроки = Неопределено Тогда
		
		ОбработкаЗначенийСвойств(Элемент.ТекущаяСтрока, Элемент.ТекущиеДанные.ТИП);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область Подбор

&НаСервере
Процедура ИзменитьДинамическийСписокНайденнаяНоменклатура(Фильтр = Ложь)
	
	ВыбранныеКлассы = ДанныеФормыВЗначение(ВыбранныеКлассыETIM,Тип("ТаблицаЗначений"));
	
	Если не Фильтр Тогда
		
		// 1. Изменим НайденнаяНоменклатура в зависимости от выбранных классов (таблица ВыбранныеКлассыETIM) 
		//    т.е. даже возможно только наличие выбранного класса и не задействованные свойства
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Номенклатура.Код КАК КодНоменклатуры,
		|	Номенклатура.КлассETIM.Наименование КАК Наименование
		|ПОМЕСТИТЬ ВТ_Номенклатура
		|ИЗ
		|	Справочник.Номенклатура КАК Номенклатура
		|ГДЕ
		|	Номенклатура.Код В(&СписокКодов)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КлассыETIM.Наименование КАК Наименование
		|ПОМЕСТИТЬ ВТ_Классы
		|ИЗ
		|	&ВыбранныеКлассы КАК КлассыETIM
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Номенклатура.КодНоменклатуры КАК КодНоменклатуры
		|ИЗ
		|	ВТ_Классы КАК ВТ_Классы
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Номенклатура КАК ВТ_Номенклатура
		|		ПО ВТ_Классы.Наименование = ВТ_Номенклатура.Наименование";
		
		Запрос.УстановитьПараметр("СписокКодов", ВходящаяНоменклатура); 
		Запрос.УстановитьПараметр("ВыбранныеКлассы", ВыбранныеКлассы);
		
		Результат = Запрос.Выполнить().Выгрузить();
		
		Массив = Результат.ВыгрузитьКолонку("КодНоменклатуры");
		
		//Обновим исходящую номенклатуру
		ИсходящаяНоменклатура.ЗагрузитьЗначения(Массив);
		
		//Обновим НайденнаяНоменклатура
		ОбновитьДинамическийСписокНайденнаяНоменклатура(Массив);
		
	Иначе 
		
		// 2. Изменим НайденнаяНоменклатура в зависимости от выбранного класса и выбранных свойств опираясь на регистр Рин1_ЗначенияСвойствНоменклатуры
		
		СписокЗначений = Новый СписокЗначений;
		
		Если не ТаблицаОтборов.Количество() = 0 Тогда
			
			Для каждого Стр Из ТаблицаОтборов Цикл
				
				Запрос = Новый Запрос;
				Запрос.Текст = 
				"ВЫБРАТЬ
				|	Рин1_ЗначенияСвойствНоменклатуры.Номенклатура.Код КАК КодНоменклатуры,
				|	ВЫБОР
				|		КОГДА &Тип = ЗНАЧЕНИЕ(Перечисление.Рин1_ТипСвойства.A)
				|			ТОГДА Рин1_ЗначенияСвойствНоменклатуры.Value_A
				|		КОГДА &Тип = ЗНАЧЕНИЕ(Перечисление.Рин1_ТипСвойства.N)
				|			ТОГДА Рин1_ЗначенияСвойствНоменклатуры.Value_N
				|		КОГДА &Тип = ЗНАЧЕНИЕ(Перечисление.Рин1_ТипСвойства.R)
				|			ТОГДА Рин1_ЗначенияСвойствНоменклатуры.Value_R
				|		КОГДА &Тип = ЗНАЧЕНИЕ(Перечисление.Рин1_ТипСвойства.L)
				|			ТОГДА Рин1_ЗначенияСвойствНоменклатуры.Value_L
				|	КОНЕЦ КАК Значение,
				|	ВЫБОР
				|		КОГДА &Тип = ЗНАЧЕНИЕ(Перечисление.Рин1_ТипСвойства.R)
				|			ТОГДА Рин1_ЗначенияСвойствНоменклатуры.Value_R1
				|	КОНЕЦ КАК Значение1
				|ИЗ
				|	РегистрСведений.Рин1_ЗначенияСвойствНоменклатуры КАК Рин1_ЗначенияСвойствНоменклатуры
				|ГДЕ
				|	Рин1_ЗначенияСвойствНоменклатуры.Номенклатура.Код В(&КодНоменклатуры)
				|	И Рин1_ЗначенияСвойствНоменклатуры.Свойство = &Свойство";
				
				Запрос.УстановитьПараметр("КодНоменклатуры", ИсходящаяНоменклатура);
				Запрос.УстановитьПараметр("Свойство", Стр.Свойство);
				Запрос.УстановитьПараметр("Тип", Стр.Тип);
				
				РезультатЗапроса = Запрос.Выполнить();
				
				ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
				
				Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
					//
					Если Стр.Тип = Перечисления.Рин1_ТипСвойства.A Тогда 
						
						Если Стр.Значение = ВыборкаДетальныеЗаписи.Значение Тогда 
							
							СписокЗначений.Добавить(ВыборкаДетальныеЗаписи.КодНоменклатуры);
							
						КонецЕсли;
						
					КонецЕсли;
					//
					Если Стр.Тип = Перечисления.Рин1_ТипСвойства.N Тогда 
						
						ЧислоОТ = Число(?(Стр.Значение  = "",0,Стр.Значение));
						ЧислоДО = Число(?(Стр.Значение1 = "",0,Стр.Значение1));
						
						Если Макс(ЧислоОТ,-ЧислоОТ) > 0 и Макс(ЧислоДО,-ЧислоДО) > 0 Тогда
							//есть оба числа то смотрим вхождение границ диапазона имеющегося в номенклатуре в выбранный диапазон
							Если ЧислоОТ <= ВыборкаДетальныеЗаписи.Значение и ЧислоДО >= ВыборкаДетальныеЗаписи.Значение Тогда 
								
								СписокЗначений.Добавить(ВыборкаДетальныеЗаписи.КодНоменклатуры);
								
							Иначе 
								СписокЗначений.Очистить();
							КонецЕсли;							
							
						ИначеЕсли (ЧислоОТ > 0 и ЧислоДО = 0) или (ЧислоОТ = 0 и ЧислоДО > 0) Тогда 
							//если не задан выбранный диапазон от или до (в номенклатуре всегда есть от или до) 
							Если (ЧислоОТ > 0 и ЧислоОТ <= ВыборкаДетальныеЗаписи.Значение) или (ЧислоДО > 0 и ЧислоДО >= ВыборкаДетальныеЗаписи.Значение) Тогда
								
								СписокЗначений.Добавить(ВыборкаДетальныеЗаписи.КодНоменклатуры);
								
							Иначе 
								СписокЗначений.Очистить();
							КонецЕсли;
							
						ИначеЕсли (ЧислоОТ < 0 и ЧислоДО = 0) или (ЧислоОТ = 0 и ЧислоДО < 0) Тогда
							
							Если (ЧислоОТ < 0 и ЧислоОТ <= ВыборкаДетальныеЗаписи.Значение) или (ЧислоДО < 0 и ЧислоДО >= ВыборкаДетальныеЗаписи.Значение) Тогда
								
								СписокЗначений.Добавить(ВыборкаДетальныеЗаписи.КодНоменклатуры);
								
							Иначе 
								СписокЗначений.Очистить();
							КонецЕсли;
							
						КонецЕсли;						
						
					КонецЕсли;
					//
					Если Стр.Тип = Перечисления.Рин1_ТипСвойства.R Тогда 
						
						ЧислоОТ = Число(?(Стр.Значение  = "",0,Стр.Значение));
						ЧислоДО = Число(?(Стр.Значение1 = "",0,Стр.Значение1));
						
						
						Если Макс(ЧислоОТ,-ЧислоОТ) > 0 и Макс(ЧислоДО,-ЧислоДО) > 0 Тогда
							//есть оба числа то смотрим вхождение границ диапазона имеющегося в номенклатуре в выбранный диапазон
							Если ЧислоОТ <= ВыборкаДетальныеЗаписи.Значение1 и ЧислоДО >= ВыборкаДетальныеЗаписи.Значение Тогда 
								
								СписокЗначений.Добавить(ВыборкаДетальныеЗаписи.КодНоменклатуры);
								
							Иначе 
								СписокЗначений.Очистить();
							КонецЕсли;							
							
						ИначеЕсли (ЧислоОТ > 0 и ЧислоДО = 0) или (ЧислоОТ = 0 и ЧислоДО > 0) Тогда 
							//если не задан выбранный диапазон от или до (в номенклатуре всегда есть от или до) 
							Если (ЧислоОТ > 0 и ЧислоОТ <= ВыборкаДетальныеЗаписи.Значение1) или (ЧислоДО > 0 и ЧислоДО >= ВыборкаДетальныеЗаписи.Значение) Тогда
								
								СписокЗначений.Добавить(ВыборкаДетальныеЗаписи.КодНоменклатуры);
								
							Иначе 
								СписокЗначений.Очистить();
							КонецЕсли;
							
						ИначеЕсли (ЧислоОТ < 0 и ЧислоДО = 0) или (ЧислоОТ = 0 и ЧислоДО < 0) Тогда
							
							Если (ЧислоОТ < 0 и ЧислоОТ <= ВыборкаДетальныеЗаписи.Значение1) или (ЧислоДО < 0 и ЧислоДО >= ВыборкаДетальныеЗаписи.Значение) Тогда
								
								СписокЗначений.Добавить(ВыборкаДетальныеЗаписи.КодНоменклатуры);
								
							Иначе 
								СписокЗначений.Очистить();
							КонецЕсли;
							
						КонецЕсли;
						
					КонецЕсли;
					//
					Если Стр.Тип = Перечисления.Рин1_ТипСвойства.L Тогда 
						
						Если Стр.Значение = "Да" Тогда
							ДаНет = 2;
						ИначеЕсли Стр.Значение = "Нет" Тогда
							ДаНет = 1;
						КонецЕсли;
						
						Если ДаНет = ВыборкаДетальныеЗаписи.Значение Тогда 
							СписокЗначений.Добавить(ВыборкаДетальныеЗаписи.КодНоменклатуры);
						КонецЕсли;
						
					КонецЕсли;
					//
				КонецЦикла;
				
				//нет номенклатур для отбора выходим
				Если СписокЗначений.Количество() = 0 Тогда
					Прервать;
				КонецЕсли;
				
			КонецЦикла;
			
			ОбновитьДинамическийСписокНайденнаяНоменклатура(СписокЗначений);
			
		Иначе 
			
			//сняли все отборы
			ИзменитьДинамическийСписокНайденнаяНоменклатура();
			
		КонецЕсли; 
		
	КонецЕсли;
	
КонецПроцедуры // ИзменитьДинамическийСписокНайденнаяНоменклатура() 

&НаСервере
Процедура ОбновитьДинамическийСписокНайденнаяНоменклатура(Массив) //обновляем по кодам номенклатуры
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(НайденнаяНоменклатура,"КодНоменклатуры",Массив,ВидСравненияКомпоновкиДанных.ВСписке);
	Элементы.ДекорацияИтогоПодобрано.Заголовок = "Итого подобрано: " + ?(Массив = Неопределено,0,Массив.Количество()) + " позиций ";	
	
КонецПроцедуры

#КонецОбласти

#Область ОбратныйВывод

&НаКлиенте
Процедура ПеренестиОтбор(Команда)
	
	Если ЗначениеЗаполнено(Элементы.НайденнаяНоменклатура.ТекущаяСтрока) Тогда 
		Закрыть(НайденнаяНоменклатура.Отбор.Элементы[0].ПравоеЗначение);
	Иначе 
		Сообщить("Отсутствует отобранная номенклатура!");
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры 

#КонецОбласти
