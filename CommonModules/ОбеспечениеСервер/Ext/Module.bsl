// + [Rineco], [Шерстюк Ю.Ю.] [17.08.2021] 
// Задача: обновление на 2.4.13.227 т.к. изменения в функции закомментированы, нет смысла оставлять, при последующем обновлении можно удалить

//&Вместо("СтрокиВТаблицу")
//Функция Рин1_СтрокиВТаблицу(ТаблицаТовары, Объект, ПутиКДанным, Отбор)
//	
//	Хранилище = СоздатьХранилищеЗаполнитьИзОбъекта(Объект, ПутиКДанным);
//	Таблица = ТаблицаПоОписаниюПолей(ПутиКДаннымПоУмолчанию());
//	ДанныеСтроки = Новый Структура(ПутиКДаннымПоУмолчанию());
//	Для Каждого СтрокаТовары Из ТаблицаТовары Цикл
//		
//		//bercut100420 - закомментил -  распределение обеспечения происходило не правильно. строки с обособленным обеспечением должны обрабатываться. иначе если в тч
//		//есть на один товар строки с простым резервом и строки обособлением то с простым резервом обрабатывались к обособлению
//			///<-- Гигабайт (Чернов А.С.): ОЕМПотребность - необходимо исключить строки с заполненным назначением в ТЧ
//			//Если СтрокаТовары.Свойство("ГИГ_Назначение") И ЗначениеЗаполнено(СтрокаТовары.ГИГ_Назначение) Тогда
//			//	Продолжить;
//			//КонецЕсли; 
//			///--> Гигабайт (Чернов А.С.) 
//		//
//		
//		ЗаполнитьЗначенияСвойств(Хранилище, СтрокаТовары);
//		ОбеспечениеКлиентСервер.ЗаполнитьЗначенияСвойствСРазличиемИмен(ДанныеСтроки, Хранилище, ПутиКДанным);
//		
//		Если Не СтрокаУдовлетворяетОтбору(ДанныеСтроки, Отбор) Тогда
//			Продолжить;
//		КонецЕсли;
//		
//		Если ДанныеСтроки.Отменено = Истина Или ДанныеСтроки.Количество = 0 Тогда
//			Продолжить;
//		КонецЕсли;
//		
//		НоваяСтрока = Таблица.Добавить();
//		ЗаполнитьЗначенияСвойств(НоваяСтрока, ДанныеСтроки);
//		
//		НоваяСтрока.Идентификатор = СтрокаТовары.ПолучитьИдентификатор();
//		
//	КонецЦикла;
//	
//	Возврат Таблица;
//	
//КонецФункции
// - [Rineco], [Шерстюк Ю.Ю.] [17.08.2021]

&Вместо("ТаблицаОстатковКЗаказу")
Функция Рин1_ТаблицаОстатковКЗаказу(ДокументСсылка, Параметры)
	
	ПолучатьТовары = Параметры.ПолучатьТовары;
	ПолучатьУслуги = Параметры.ПолучатьУслуги;
	ПолучатьРаботы = Параметры.ПолучатьРаботы;
	Отбор          = Параметры.Отбор;
	
	ИмяДокумента = ДокументСсылка.Метаданные().Имя;
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	УстановитьПривилегированныйРежим(Истина);
	//{Гига suv 16.01.2018 СхемыОбеспеченияДляЗаказов
	Если Параметры.Свойство("ТаблицаТовары") Тогда
		Если ЗначениеЗаполнено(Отбор) Тогда
			Документы[ИмяДокумента].ВременныеТаблицыТоваровЗаказаДляПеремещений(МенеджерВременныхТаблиц, ДокументСсылка, Отбор,Параметры.ТаблицаТовары);
		Иначе
			Документы[ИмяДокумента].ВременныеТаблицыТоваровЗаказаДляПеремещений(МенеджерВременныхТаблиц, ДокументСсылка,,Параметры.ТаблицаТовары);
		КонецЕсли;
	Иначе 
	//Гига suv 16.01.2018}
	
	Если ЗначениеЗаполнено(Отбор) Тогда
		Документы[ИмяДокумента].ВременныеТаблицыТоваровЗаказа(МенеджерВременныхТаблиц, ДокументСсылка, Отбор);
	Иначе
		Документы[ИмяДокумента].ВременныеТаблицыТоваровЗаказа(МенеджерВременныхТаблиц, ДокументСсылка);
	КонецЕсли;
	
	//{Гига suv 16.01.2018 СхемыОбеспеченияДляЗаказов
	КонецЕсли;
	//Гига suv 16.01.2018}
	//++Гольм А.А. (Гигабайт) 20.11.2018 11:22:55
	ИспользуетсяСхемаОбеспечения = Параметры.Свойство("ТаблицаТовары");
	//--Гольм А.А. (Гигабайт) 20.11.2018 11:23:15
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ОбеспечениеТоварами.Номенклатура КАК Номенклатура,
	|	ОбеспечениеТоварами.Характеристика КАК Характеристика,
	|	ОбеспечениеТоварами.Склад КАК Склад,
	|	ОбеспечениеТоварами.Назначение КАК Назначение,
	|	ОбеспечениеТоварами.КЗаказуОстаток КАК КЗаказу
	|ПОМЕСТИТЬ Потребность
	|ИЗ
	|	РегистрНакопления.ОбеспечениеЗаказов.Остатки(
	|			,
	|			(Номенклатура, Характеристика, Склад, Назначение) В
	|				(ВЫБРАТЬ
	|					Т.Номенклатура,
	|					Т.Характеристика,
	|					Т.Склад,
	|					Т.Назначение
	|				ИЗ
	|					НоменклатураЗаказаОбособленная КАК Т)) КАК ОбеспечениеТоварами
	|ГДЕ
	|	ОбеспечениеТоварами.КЗаказуОстаток > 0
	|	И &ПолучатьТовары
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОбеспечениеРаботами.Номенклатура,
	|	ОбеспечениеРаботами.Характеристика,
	|	ОбеспечениеРаботами.Подразделение,
	|	ОбеспечениеРаботами.Назначение,
	|	ОбеспечениеРаботами.КОбеспечениюОстаток
	|ИЗ
	|	РегистрНакопления.ОбеспечениеЗаказовРаботами.Остатки(
	|			,
	|			(Номенклатура, Характеристика, Подразделение, Назначение) В
	|				(ВЫБРАТЬ
	|					Т.Номенклатура,
	|					Т.Характеристика,
	|					Т.Подразделение,
	|					Т.Назначение
	|				ИЗ
	|					НоменклатураЗаказаОбособленная КАК Т)) КАК ОбеспечениеРаботами
	|ГДЕ
	|	ОбеспечениеРаботами.КОбеспечениюОстаток > 0
	|	И &ПолучатьРаботы
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Назначение,
	|	Номенклатура,
	|	Характеристика,
	|	Склад
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Таб.НомерСтроки КАК НомерСтроки,
	|	Таб.Номенклатура КАК Номенклатура,
	|	Таб.Характеристика КАК Характеристика,
	|	Таб.Склад КАК Склад,
	|	Таб.Подразделение КАК Подразделение,
	|	Таб.Получатель КАК Получатель,
	|	Таб.Назначение КАК Назначение,
	|	Таб.Упаковка КАК Упаковка,"
	//++Гольм А.А. (Гигабайт) 20.11.2018 11:25:01
	+ ?(ИспользуетсяСхемаОбеспечения = Ложь, "", "
	|	Таб.ГИГ_СхемаОбеспечения,
	|	Таб.ГИГ_СрокПоставки,
	|") +
	//|	Таб.Количество КАК Количество
	"	Таб.Количество КАК Количество
	//--Гольм А.А. (Гигабайт) 20.11.2018 11:25:04
	|ПОМЕСТИТЬ ВТОбособленные
	|ИЗ
	|	(ВЫБРАТЬ
	|		Т.Номенклатура КАК Номенклатура,
	|		Т.Характеристика КАК Характеристика,
	|		Т.Склад КАК Склад,
	|		Т.Подразделение КАК Подразделение,
	|		Т.Склад КАК Получатель,
	|		Т.Назначение КАК Назначение,
	|		ВЫБОР
	|			КОГДА Т.Заказано > ВтКЗаказу.КЗаказу
	|				ТОГДА ВтКЗаказу.КЗаказу
	|			ИНАЧЕ Т.Заказано
	|		КОНЕЦ КАК Количество,
	|		Т.Упаковка КАК Упаковка,"
	//++Гольм А.А. (Гигабайт) 20.11.2018 11:26:29
	+ ?(ИспользуетсяСхемаОбеспечения = Ложь, "", "
	|		Т.ГИГ_СхемаОбеспечения,
	|		Т.ГИГ_СрокПоставки,
	|") +
	//|		Т.НомерСтроки КАК НомерСтроки
	"		Т.НомерСтроки КАК НомерСтроки
	//--Гольм А.А. (Гигабайт) 20.11.2018 11:26:31
	|	ИЗ
	|		НоменклатураЗаказаОбособленная КАК Т
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Потребность КАК ВтКЗаказу
	|			ПО Т.Номенклатура = ВтКЗаказу.Номенклатура
	|				И Т.Характеристика = ВтКЗаказу.Характеристика
	|				И Т.Склад = ВтКЗаказу.Склад
	|				И Т.Назначение = ВтКЗаказу.Назначение
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Т.Номенклатура,
	|		Т.Характеристика,
	|		НЕОПРЕДЕЛЕНО,
	|		Т.Подразделение,
	|		Т.Подразделение КАК Получатель,
	|		Т.Назначение,
	|		ВЫБОР
	|			КОГДА Т.Заказано > ВтКЗаказу.КЗаказу
	|				ТОГДА ВтКЗаказу.КЗаказу
	|			ИНАЧЕ Т.Заказано
	|		КОНЕЦ,
	|		Т.Упаковка,"
	//++Гольм А.А. (Гигабайт) 20.11.2018 11:31:28
	+ ?(ИспользуетсяСхемаОбеспечения = Ложь, "", "
	|		Т.ГИГ_СхемаОбеспечения,
	|		Т.ГИГ_СрокПоставки,
	|") +
	//|		Т.НомерСтроки
	"		Т.НомерСтроки
	//--Гольм А.А. (Гигабайт) 20.11.2018 11:31:32
	|	ИЗ
	|		НоменклатураЗаказаОбособленная КАК Т
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Потребность КАК ВтКЗаказу
	|			ПО Т.Номенклатура = ВтКЗаказу.Номенклатура
	|				И Т.Характеристика = ВтКЗаказу.Характеристика
	|				И Т.Подразделение = ВтКЗаказу.Склад
	|				И Т.Назначение = ВтКЗаказу.Назначение) КАК Таб
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НоменклатураЗаказаНеОбособленная.Номенклатура,
	|	НоменклатураЗаказаНеОбособленная.Характеристика,
	|	НоменклатураЗаказаНеОбособленная.Заказано КАК Количество,
	|	НоменклатураЗаказаНеОбособленная.Упаковка,
	|	НоменклатураЗаказаНеОбособленная.Склад,
	|	НоменклатураЗаказаНеОбособленная.Подразделение,"
	//++Гольм А.А. (Гигабайт) 20.11.2018 11:32:12
	+ ?(ИспользуетсяСхемаОбеспечения = Ложь, "", "
	|	НоменклатураЗаказаНеОбособленная.ГИГ_СхемаОбеспечения,
	|	НоменклатураЗаказаНеОбособленная.ГИГ_СрокПоставки,
	|") +
	//|	ВЫБОР
	"	ВЫБОР
	//--Гольм А.А. (Гигабайт) 20.11.2018 11:32:51
	|		КОГДА НоменклатураЗаказаНеОбособленная.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|			ТОГДА НоменклатураЗаказаНеОбособленная.Подразделение
	|		ИНАЧЕ НоменклатураЗаказаНеОбособленная.Склад
	|	КОНЕЦ КАК Получатель,
	|	НоменклатураЗаказаНеОбособленная.НомерСтроки
	|ПОМЕСТИТЬ ВТНеОбособленные
	|ИЗ
	|	НоменклатураЗаказаНеОбособленная КАК НоменклатураЗаказаНеОбособленная
	|ГДЕ
	|	(НоменклатураЗаказаНеОбособленная.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|				И &ПолучатьТовары
	|			ИЛИ НоменклатураЗаказаНеОбособленная.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|				И &ПолучатьУслуги
	|			ИЛИ НоменклатураЗаказаНеОбособленная.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|				И &ПолучатьРаботы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТОбособленные.НомерСтроки КАК НомерСтроки,
	|	ВТОбособленные.Номенклатура КАК Номенклатура,
	|	ВТОбособленные.Характеристика КАК Характеристика,
	|	СпрНоменклатура.СтавкаНДС КАК СтавкаНДС,
	|	ВТОбособленные.Назначение КАК Назначение,
	|	ВТОбособленные.Упаковка КАК Упаковка,
	|	ВТОбособленные.Количество КАК Количество,
	|	ВТОбособленные.Количество / ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1) КАК КоличествоУпаковок,
	|	ВТОбособленные.Склад КАК Склад,
	|	ВТОбособленные.Подразделение КАК Подразделение,"
	//++Гольм А.А. (Гигабайт) 20.11.2018 11:33:21
	+ ?(ИспользуетсяСхемаОбеспечения = Ложь, "", "
	|	ВТОбособленные.ГИГ_СхемаОбеспечения,
	|	ВТОбособленные.ГИГ_СрокПоставки,
	|") +
	//|	ВТОбособленные.Получатель КАК Получатель,
	"	ВТОбособленные.Получатель КАК Получатель,
	//--Гольм А.А. (Гигабайт) 20.11.2018 11:33:54
	|	ВЫБОР КОГДА СпрНоменклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга) ТОГДА
	|		ИСТИНА
	|	ИНАЧЕ
	|		ЛОЖЬ
	|	КОНЕЦ КАК СписатьНаРасходы
	|ИЗ
	|	ВТОбособленные КАК ВТОбособленные
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	|	ПО СпрНоменклатура.Ссылка = ВТОбособленные.Номенклатура
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТНеОбособленные.НомерСтроки,
	|	ВТНеОбособленные.Номенклатура,
	|	ВТНеОбособленные.Характеристика,
	|	СпрНоменклатура.СтавкаНДС,
	|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка),
	|	ВТНеОбособленные.Упаковка,
	|	ВТНеОбособленные.Количество,
	|	ВТНеОбособленные.Количество / ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки2, 1) КАК КоличествоУпаковок,
	|	ВТНеОбособленные.Склад,
	|	ВТНеОбособленные.Подразделение,"
	//++Гольм А.А. (Гигабайт) 20.11.2018 11:34:53
	+ ?(ИспользуетсяСхемаОбеспечения = Ложь, "", "
	|	ВТНеОбособленные.ГИГ_СхемаОбеспечения,
	|	ВТНеОбособленные.ГИГ_СрокПоставки,
	|") +
	//|	ВТНеОбособленные.Получатель КАК Получатель,
	"	ВТНеОбособленные.Получатель КАК Получатель,
	//--Гольм А.А. (Гигабайт) 20.11.2018 11:34:56
	|	ВЫБОР КОГДА СпрНоменклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга) ТОГДА
	|		ИСТИНА
	|	ИНАЧЕ
	|		ЛОЖЬ
	|	КОНЕЦ
	|ИЗ
	|	ВТНеОбособленные КАК ВТНеОбособленные
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	|	ПО СпрНоменклатура.Ссылка = ВТНеОбособленные.Номенклатура
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст,
		"&ТекстЗапросаКоэффициентУпаковки1",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
		"ВТОбособленные.Упаковка",
		"ВТОбособленные.Номенклатура"));
	Запрос.Текст = СтрЗаменить(Запрос.Текст,
		"&ТекстЗапросаКоэффициентУпаковки2",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
		"ВТНеОбособленные.Упаковка",
		"ВТНеОбособленные.Номенклатура"));
		
	Запрос.УстановитьПараметр("ДокументСсылка", ДокументСсылка);
	Запрос.УстановитьПараметр("ПолучатьТовары", ПолучатьТовары);
	Запрос.УстановитьПараметр("ПолучатьУслуги", ПолучатьУслуги);
	Запрос.УстановитьПараметр("ПолучатьРаботы", ПолучатьРаботы);
	
	ТаблицаТоваров = Запрос.Выполнить().Выгрузить();
	
	Возврат ТаблицаТоваров;
	
КонецФункции

//{{20200908 ГлазуновДВ
&Вместо("ПараметрыВыбораОбеспеченияУниверсальный")
Функция Рин1_ПараметрыВыбораОбеспеченияУниверсальный(ТаблицаВыделенныеСтроки, ОформитьПоНакладным, ТаблицаНевыделенныеСтроки, Ссылка)
	ВыделеннаяСтрока = ТаблицаВыделенныеСтроки[0];

	// Группировка невыделенных строк (строки-конкуренты для списания доступных остатков) по вариантам обеспечения.
	НевыделенныеСтроки = ТаблицыПотребностейПоВариантамОбеспечения();
	РазложитьПоВариантамОбеспечения(НевыделенныеСтроки, ТаблицаНевыделенныеСтроки);

	// Таблица Корректировок регистров обеспечения, для имитации проведения редактируемого документа.
	Корректировка = СтруктураКорректировкиОбеспечения();

	ДобавитьВКорректировку(Корректировка, НевыделенныеСтроки.Товары.Отгрузить);
	ДобавитьВКорректировку(Корректировка, НевыделенныеСтроки.Товары.ОтгрузитьОбособленно);
	ДобавитьВКорректировку(Корректировка, НевыделенныеСтроки.Товары.Резервировать);
	ДобавитьВКорректировку(Корректировка, НевыделенныеСтроки.Товары.РезервироватьКСроку);

	ДобавитьВКорректировку(Корректировка, НевыделенныеСтроки.Тара.Отгрузить);
	ДобавитьВКорректировку(Корректировка, НевыделенныеСтроки.Тара.Резервировать);
	ДобавитьВКорректировку(Корректировка, НевыделенныеСтроки.Тара.РезервироватьКСроку);
	ДобавитьВКорректировку(Корректировка, НевыделенныеСтроки.Тара.ОтгрузитьОбособленно);

	// Количество, которое считается отгруженным для обрабатываемых строк.
	ОтборТоварыКОтгрузке = ОтборТоварыКОтгрузке(ТаблицаВыделенныеСтроки);
	ОформитьПоОрдерам = РегистрыНакопления.ТоварыКОтгрузке.ТаблицаОформлено(ОтборТоварыКОтгрузке, Корректировка.ТоварыКОтгрузке);

	ТаблицыОформлено = ТаблицыОформлено(ТаблицаВыделенныеСтроки, ОформитьПоНакладным, ОформитьПоОрдерам);
	
	ДобавитьВКорректировку(Корректировка, ТаблицыОформлено.ПоНакладным);
	ДобавитьВКорректировкуУчестьПриИнвентаризации(
		Корректировка, НевыделенныеСтроки.Товары.ОтгрузитьОбособленно, ТаблицыОформлено.ПоНакладным);
	ДобавитьВКорректировку(Корректировка, ТаблицыОформлено.ПоОрдерам);

	// Сторно движений документа.
	Отбор = Новый Структура("Номенклатура, Характеристика, Назначение, Подразделение, Склад, ТипНоменклатуры");
	ЗаполнитьЗначенияСвойств(Отбор, ВыделеннаяСтрока);
	СторноДвиженийДокумента(Корректировка, Новый Структура("Ссылка", Ссылка), , Отбор);

	// Корректировка по обособленным потребностям.
	Таблица = НевыделенныеСтроки.Товары.Обособленно.СкопироватьКолонки();
	НомерТекущейСтроки = ВыделеннаяСтрока.НомерСтроки;

	Для Каждого Строка Из НевыделенныеСтроки.Товары.Обособленно Цикл
		Если Строка.НомерСтроки < НомерТекущейСтроки Тогда
			НоваяСтрока = Таблица.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
		КонецЕсли;
	КонецЦикла;

	Для Каждого Строка Из НевыделенныеСтроки.Тара.Обособленно Цикл
		Если Строка.НомерСтроки < НомерТекущейСтроки Тогда
			НоваяСтрока = Таблица.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
		КонецЕсли;
	КонецЦикла;

	Для Каждого Строка Из НевыделенныеСтроки.Работы.ОтгрузитьОбособленно Цикл
		Если Строка.НомерСтроки < НомерТекущейСтроки Тогда
			НоваяСтрока = Таблица.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
		КонецЕсли;
	КонецЦикла;

	Для Каждого Строка Из НевыделенныеСтроки.Работы.Обособленно Цикл
		Если Строка.НомерСтроки < НомерТекущейСтроки Тогда
			НоваяСтрока = Таблица.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
		КонецЕсли;
	КонецЦикла;

	ДобавитьВКорректировку(Корректировка, Таблица);

	// Формирование структуры результата.
//Исходное	ТекущийВариант = Новый Структура("ВариантОбеспечения, Склад, Количество, ДатаДоступности");
//{{20200908 ГлазуновДВ
	ТекущийВариант = Новый Структура("ВариантОбеспечения, Склад, Количество, ДатаДоступности, Идентификатор");
//}}20200908 ГлазуновДВ	
	ЗаполнитьЗначенияСвойств(ТекущийВариант, ВыделеннаяСтрока);
	ТекущийВариант.ДатаДоступности = ВыделеннаяСтрока.ДатаОтгрузки;

	КоличествоОформлено = ?(ТаблицыОформлено.ПоНакладным.Количество() > 0, ТаблицыОформлено.ПоНакладным[0].Количество, 0)
		+ ?(ТаблицыОформлено.ПоОрдерам.Количество() > 0, ТаблицыОформлено.ПоОрдерам[0].Количество, 0);
	
	Результат = Новый Структура();
	Результат.Вставить("АдресКорректировки",  ПоместитьВоВременноеХранилище(Корректировка));
	Результат.Вставить("ТекущийВариант",      ТекущийВариант);
	Результат.Вставить("Отбор",               Отбор);
	Результат.Вставить("КоличествоОформлено", КоличествоОформлено);
	Результат.Вставить("СписокВыбора",        Неопределено);

	Возврат Результат;

КонецФункции

//{{20200918 ГлазуновДВ
&Вместо("ШагиЗаполненияДатыПлановойПоставкиТоваров")
Функция Рин1_ШагиЗаполненияДатыПлановойПоставкиТоваров(Товары, ТаблицаОстатков, ДопустимыеВарианты)
	ВариантОбеспечить           = Перечисления.ВариантыОбеспечения.Требуется;
	ВариантНеОбеспечивать       = Перечисления.ВариантыОбеспечения.НеТребуется;
	ВариантОбособленно          = Перечисления.ВариантыОбеспечения.Обособленно;

	ОбеспечитьДоступен           = ДопустимыеВарианты.Найти(ВариантОбеспечить)           <> Неопределено;
	НеОбеспечиватьДоступен       = ДопустимыеВарианты.Найти(ВариантНеОбеспечивать)       <> Неопределено;
	ОбособленноДоступен          = ДопустимыеВарианты.Найти(ВариантОбособленно)          <> Неопределено;

	ИзменятьОбособление = Не (ОбособленноДоступен И (ОбеспечитьДоступен Или НеОбеспечиватьДоступен));

	ПоляСоединения = "Номенклатура, Характеристика, Склад";

	Результат = ТаблицаПотребностейБезАналитики();
	Результат.Колонки.Добавить("ПриоритетТипаОбеспечения");
	Результат.Колонки.Добавить("СкладНаименование");
	Если ОбособленноДоступен Тогда

		ВариантОбеспечения = ВариантОбособленно;

		ШагиСписания = Новый Массив();
		ШагиСписания.Добавить(ВыполнитьСписание(Товары.ОтгрузитьОбособленно, ТаблицаОстатков, ПоляСоединения, Истина));
		ШагиСписания.Добавить(ВыполнитьСписание(Товары.Обособленно,          ТаблицаОстатков, ПоляСоединения, Истина));

		Если ИзменятьОбособление Тогда

			ШагиСписания.Добавить(ВыполнитьСписание(Товары.Отгрузить,           ТаблицаОстатков, ПоляСоединения, Истина));
			ШагиСписания.Добавить(ВыполнитьСписание(Товары.Резервировать,       ТаблицаОстатков, ПоляСоединения, Истина));
			ШагиСписания.Добавить(ВыполнитьСписание(Товары.РезервироватьКСроку, ТаблицаОстатков, ПоляСоединения, Истина));
			ШагиСписания.Добавить(ВыполнитьСписание(Товары.Обеспечить,          ТаблицаОстатков, ПоляСоединения, Истина));
			ШагиСписания.Добавить(ВыполнитьСписание(Товары.НеОбеспечивать,      ТаблицаОстатков, ПоляСоединения, Истина));

		КонецЕсли;

		Для Каждого Шаг Из ШагиСписания Цикл

			Шаг.ЗаполнитьЗначения(ВариантОбеспечения, "ВариантОбеспечения");
			ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(Шаг, Результат);

		КонецЦикла;

	КонецЕсли;

	Если ОбеспечитьДоступен Тогда

		ВариантОбеспечения = ВариантОбеспечить;

		ШагиСписания = Новый Массив();
		ШагиСписания.Добавить(ВыполнитьСписание(Товары.Отгрузить,           ТаблицаОстатков, ПоляСоединения, Истина));
		ШагиСписания.Добавить(ВыполнитьСписание(Товары.Резервировать,       ТаблицаОстатков, ПоляСоединения, Истина));
		ШагиСписания.Добавить(ВыполнитьСписание(Товары.РезервироватьКСроку, ТаблицаОстатков, ПоляСоединения, Истина));
		ШагиСписания.Добавить(ВыполнитьСписание(Товары.Обеспечить,          ТаблицаОстатков, ПоляСоединения, Истина));
		ШагиСписания.Добавить(ВыполнитьСписание(Товары.НеОбеспечивать,      ТаблицаОстатков, ПоляСоединения, Истина));

		Если ИзменятьОбособление Тогда

		//20200918 ГлазуновДВ	Отключили, обособленные не меняем
			//ШагиСписания.Добавить(ВыполнитьСписание(Товары.ОтгрузитьОбособленно, ТаблицаОстатков, ПоляСоединения, Истина));
			//ШагиСписания.Добавить(ВыполнитьСписание(Товары.Обособленно,          ТаблицаОстатков, ПоляСоединения, Истина));

		КонецЕсли;

		Для Каждого Шаг Из ШагиСписания Цикл

			Шаг.ЗаполнитьЗначения(ВариантОбеспечения, "ВариантОбеспечения");
			ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(Шаг, Результат);

		КонецЦикла;

	КонецЕсли;

	Возврат Результат;

КонецФункции

&Вместо("ШагиЗаполненияБезУчетаОстатковТоваров")
Функция Рин1_ШагиЗаполненияБезУчетаОстатковТоваров(Товары, ДопустимыеВарианты)
	ВариантОтгрузить            = Перечисления.ВариантыОбеспечения.Отгрузить;
	ВариантРезервировать        = Перечисления.ВариантыОбеспечения.СоСклада;
	ВариантРезервироватьКСроку  = Перечисления.ВариантыОбеспечения.ИзЗаказов;
	ВариантОбеспечить           = Перечисления.ВариантыОбеспечения.Требуется;
	ВариантНеОбеспечивать       = Перечисления.ВариантыОбеспечения.НеТребуется;
	ВариантОбособленно          = Перечисления.ВариантыОбеспечения.Обособленно;
	ВариантОтгрузитьОбособленно = Перечисления.ВариантыОбеспечения.ОтгрузитьОбособленно;

	ОтгрузитьДоступен            = ДопустимыеВарианты.Найти(ВариантОтгрузить)            <> Неопределено;
	РезервироватьДоступен        = ДопустимыеВарианты.Найти(ВариантРезервировать)        <> Неопределено;
	РезервироватьКСрокуДоступен  = ДопустимыеВарианты.Найти(ВариантРезервироватьКСроку)  <> Неопределено;
	ОбеспечитьДоступен           = ДопустимыеВарианты.Найти(ВариантОбеспечить)           <> Неопределено;
	НеОбеспечиватьДоступен       = ДопустимыеВарианты.Найти(ВариантНеОбеспечивать)       <> Неопределено;
	ОбособленноДоступен          = ДопустимыеВарианты.Найти(ВариантОбособленно)          <> Неопределено;
	ОтгрузитьОбособленноДоступен = ДопустимыеВарианты.Найти(ВариантОтгрузитьОбособленно) <> Неопределено;

	ВариантОбеспечения = ?(НеОбеспечиватьДоступен,       ВариантНеОбеспечивать,
	                     ?(РезервироватьКСрокуДоступен,  ВариантРезервироватьКСроку,
	                     ?(РезервироватьДоступен,        ВариантРезервировать,
	                     ?(ОтгрузитьДоступен,            ВариантОтгрузить,
	                     ?(ОтгрузитьОбособленноДоступен, ВариантОтгрузитьОбособленно, Неопределено)))));

	Результат = ТаблицаПотребностейБезАналитики();
	Результат.Колонки.Добавить("ПриоритетТипаОбеспечения");
	Результат.Колонки.Добавить("СкладНаименование");
	Для Каждого Шаг Из Товары Цикл
	//20200918 ГлазуновДВ  Все оставшиеся обособленные остаются без изменения
		Если Шаг.Ключ = "Обособленно" Тогда
			ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(Шаг.Значение, Результат);
			Шаг.Значение.Очистить();
			Продолжить;
		КонецЕсли;
	//20200918 ГлазуновДВ
		Если ВариантОбеспечения <> Неопределено Тогда
			Шаг.Значение.ЗаполнитьЗначения(ВариантОбеспечения, "ВариантОбеспечения");
			Шаг.Значение.ЗаполнитьЗначения('00010101', "ДатаОтгрузки");
		КонецЕсли;
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(Шаг.Значение, Результат);
		Шаг.Значение.Очистить();

	КонецЦикла;

	Возврат Результат;

КонецФункции
//}}20200908-20200918 ГлазуновДВ
// + [Rineco], [Шерстюк Ю.Ю.] [02.09.2021] 
// Задача: [№ 12913], [#При выборе всех строк “Заполнить обеспечение для выделенных строк” – Действия: “Резервировать на складе”, ”К дате”,” К обеспечению”
//Строка обособленного обеспечения заполняется дважды, изменения по задаче 8127 повлияли на корректное заполнение, НО! они были до обновления на 2.4.12.109, разработчики изменили логику в модуле,
// на текущем типовом варианте ошибка по задаче 8127 не воспроизводится]
//&Вместо("ШагиСписанияОбособленныхТоваров")
//Функция Рин1_ШагиСписанияОбособленныхТоваров(Товары, ВариантыОбеспечения, ДопустимыеВарианты, НевыделенныеСтроки)
//	ВариантОтгрузитьОбособленно  = Перечисления.ВариантыОбеспечения.ОтгрузитьОбособленно;
//	ВариантОбособленно           = Перечисления.ВариантыОбеспечения.Обособленно;

//	ОтгрузитьОбособленноДоступен = ДопустимыеВарианты.Найти(ВариантОтгрузитьОбособленно) <> Неопределено;
//	ОбособленноДоступен          = ДопустимыеВарианты.Найти(ВариантОбособленно)          <> Неопределено;

//	ПоляСоединения     = "Номенклатура, Характеристика, Назначение, Склад";

//	ВариантОбеспечения = ?(ОтгрузитьОбособленноДоступен, ВариантОтгрузитьОбособленно, ВариантОбособленно);
//	ТаблицаОстатков    = ВариантыОбеспечения.ВНаличииПодНазначение;

//	Если НевыделенныеСтроки <> Неопределено Тогда
//		НевыделенныеСтроки.ЗаполнитьЗначения(Истина, "СтрокаНеВыделена");
//		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(НевыделенныеСтроки, Товары.Обособленно);
//		Товары.Обособленно.Сортировать("ДатаОтгрузки УБЫВ, НомерСтроки УБЫВ");
//	КонецЕсли;

//	ШагиСписания = Новый Массив();
//	ШагиСписания.Добавить(ВыполнитьСписание(Товары.ОтгрузитьОбособленно, ТаблицаОстатков, ПоляСоединения));
//	//++Шерстюк Ю.Ю. 19.05.2021 Задача 8127 если действие ОбеспечиватьОбособлено без ОтгрузитьОбособлено, то не нужно разбивать строки	

// //ШагиСписания.Добавить(ВыполнитьСписание(Товары.Обособленно,          ТаблицаОстатков, ПоляСоединения));
//	Если ОтгрузитьОбособленноДоступен Тогда 
//		ШагиСписания.Добавить(ВыполнитьСписание(Товары.Обособленно,          ТаблицаОстатков, ПоляСоединения));
//	КонецЕсли;
//	//--Шерстюк Ю.Ю.
//	ШагиСписания.Добавить(ВыполнитьСписание(Товары.Обеспечить,           ТаблицаОстатков, ПоляСоединения));
//	ШагиСписания.Добавить(ВыполнитьСписание(Товары.РезервироватьКСроку,  ТаблицаОстатков, ПоляСоединения));
//	ШагиСписания.Добавить(ВыполнитьСписание(Товары.Резервировать,        ТаблицаОстатков, ПоляСоединения));
//	ШагиСписания.Добавить(ВыполнитьСписание(Товары.Отгрузить,            ТаблицаОстатков, ПоляСоединения));
//	ШагиСписания.Добавить(ВыполнитьСписание(Товары.НеОбеспечивать,       ТаблицаОстатков, ПоляСоединения));

//	Результат = ТаблицаПотребностейБезАналитики();
//	Результат.Колонки.Добавить("ПриоритетТипаОбеспечения");
//	Результат.Колонки.Добавить("СкладНаименование");
//	Для Каждого Шаг Из ШагиСписания Цикл

//		Шаг.ЗаполнитьЗначения(ВариантОбеспечения, "ВариантОбеспечения");
//		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(Шаг, Результат);

//	КонецЦикла;

//	Если ЭтоСписаниеСУчетомОстатков(ДопустимыеВарианты) Тогда
//		
//		ВариантОбеспечения = ВариантОбособленно;
//		ТаблицаОстатков    = ВариантыОбеспечения.ОжидаетсяПодНазначение;

//		ШагиСписания = Новый Массив();
//		ШагиСписания.Добавить(ВыполнитьСписание(Товары.Обособленно,          ТаблицаОстатков, ПоляСоединения));
//		ШагиСписания.Добавить(ВыполнитьСписание(Товары.ОтгрузитьОбособленно, ТаблицаОстатков, ПоляСоединения));
//		ШагиСписания.Добавить(ВыполнитьСписание(Товары.Обеспечить,           ТаблицаОстатков, ПоляСоединения));
//		ШагиСписания.Добавить(ВыполнитьСписание(Товары.РезервироватьКСроку,  ТаблицаОстатков, ПоляСоединения));
//		ШагиСписания.Добавить(ВыполнитьСписание(Товары.Резервировать,        ТаблицаОстатков, ПоляСоединения));
//		ШагиСписания.Добавить(ВыполнитьСписание(Товары.Отгрузить,            ТаблицаОстатков, ПоляСоединения));
//		ШагиСписания.Добавить(ВыполнитьСписание(Товары.НеОбеспечивать,       ТаблицаОстатков, ПоляСоединения));

//		Для Каждого Шаг Из ШагиСписания Цикл

//			Шаг.ЗаполнитьЗначения(ВариантОбеспечения, "ВариантОбеспечения");
//			ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(Шаг, Результат);

//		КонецЦикла;

//	КонецЕсли;
//	
//	Возврат Результат;
//КонецФункции
// - [Rineco], [Шерстюк Ю.Ю.] [02.09.2021]



