Перем ДругаяБаза;

Функция ТекстЗапросаОстаткиОтпусков()
Возврат "ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ВидыОтпусков.Ссылка КАК ВидЕжегодногоОтпуска
			|ПОМЕСТИТЬ ВТЕжегодныеОтпуска
			|ИЗ
			|	Справочник.ВидыОтпусков КАК ВидыОтпусков
			|ГДЕ
			|	ВидыОтпусков.ОтпускЯвляетсяЕжегодным = ИСТИНА
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ЗаработанныеПраваНаОтпуска.Сотрудник КАК Сотрудник,
			|	ЗаработанныеПраваНаОтпуска.ВидЕжегодногоОтпуска КАК ВидЕжегодногоОтпуска,
			|	ЗаработанныеПраваНаОтпуска.ДатаНачала КАК ДатаНачала,
			|	ЗаработанныеПраваНаОтпуска.ДатаОкончания КАК ДатаОкончания,
			|	ЗаработанныеПраваНаОтпуска.Период КАК Период,
			|	ЗаработанныеПраваНаОтпуска.КоличествоДней КАК КоличествоДней,
			|	ЗаработанныеПраваНаОтпуска.КоличествоДнейЗаПериод КАК КоличествоДнейЗаПериод
			|ПОМЕСТИТЬ ВТЗаработанныеПрава
			|ИЗ
			|	РегистрСведений.ЗаработанныеПраваНаОтпуска КАК ЗаработанныеПраваНаОтпуска
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТЕжегодныеОтпуска КАК ЕжегодныеОтпуска
			|		ПО ЗаработанныеПраваНаОтпуска.ВидЕжегодногоОтпуска = ЕжегодныеОтпуска.ВидЕжегодногоОтпуска
			|ГДЕ
			|	ЗаработанныеПраваНаОтпуска.Период <= &ДатаОтчета
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВТЗаработанныеПрава.Сотрудник КАК Сотрудник,
			|	ВТЗаработанныеПрава.ВидЕжегодногоОтпуска КАК ВидЕжегодногоОтпуска,
			|	МАКСИМУМ(ВТЗаработанныеПрава.Период) КАК Период
			|ПОМЕСТИТЬ ВТУказателиПоследних
			|ИЗ
			|	ВТЗаработанныеПрава КАК ВТЗаработанныеПрава
			|
			|СГРУППИРОВАТЬ ПО
			|	ВТЗаработанныеПрава.Сотрудник,
			|	ВТЗаработанныеПрава.ВидЕжегодногоОтпуска
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ПоложенныеВидыЕжегодныхОтпусковСрезПоследних.Сотрудник КАК Сотрудник,
			|	ПоложенныеВидыЕжегодныхОтпусковСрезПоследних.ВидЕжегодногоОтпуска КАК ВидЕжегодногоОтпуска,
			|	ВЫБОР
			|		КОГДА ПоложенныеВидыЕжегодныхОтпусковСрезПоследних.ДействуетДо <= &ДатаОтчета
			|				И ПоложенныеВидыЕжегодныхОтпусковСрезПоследних.ДействуетДо <> ДАТАВРЕМЯ(1, 1, 1)
			|			ТОГДА ПоложенныеВидыЕжегодныхОтпусковСрезПоследних.КоличествоДнейВГодПоОкончании
			|		ИНАЧЕ ПоложенныеВидыЕжегодныхОтпусковСрезПоследних.КоличествоДнейВГод
			|	КОНЕЦ КАК ДнейЕжегодно
			|ПОМЕСТИТЬ ВТТекущиеПраваНаОтпуска
			|ИЗ
			|	РегистрСведений.ПоложенныеВидыЕжегодныхОтпусков.СрезПоследних(
			|			&ДатаОтчета,
			|			(Сотрудник, ВидЕжегодногоОтпуска) В
			|				(ВЫБРАТЬ
			|					ВТУказателиПоследних.Сотрудник,
			|					ВТУказателиПоследних.ВидЕжегодногоОтпуска
			|				ИЗ
			|					ВТУказателиПоследних КАК ВТУказателиПоследних)) КАК ПоложенныеВидыЕжегодныхОтпусковСрезПоследних
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВТЗаработанныеПрава.Сотрудник КАК Сотрудник,
			|	ВТЗаработанныеПрава.ВидЕжегодногоОтпуска КАК ВидЕжегодногоОтпуска,
			|	ВТЗаработанныеПрава.Период КАК Период,
			|	ЕСТЬNULL(ВТТекущиеПраваНаОтпуска.ДнейЕжегодно, 0) КАК ДнейЕжегодно
			|ПОМЕСТИТЬ ВТЗаработанныеОтпускаПоследние
			|ИЗ
			|	ВТЗаработанныеПрава КАК ВТЗаработанныеПрава
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТУказателиПоследних КАК ВТУказателиПоследних
			|			ЛЕВОЕ СОЕДИНЕНИЕ ВТТекущиеПраваНаОтпуска КАК ВТТекущиеПраваНаОтпуска
			|			ПО ВТУказателиПоследних.Сотрудник = ВТТекущиеПраваНаОтпуска.Сотрудник
			|				И ВТУказателиПоследних.ВидЕжегодногоОтпуска = ВТТекущиеПраваНаОтпуска.ВидЕжегодногоОтпуска
			|		ПО ВТЗаработанныеПрава.Сотрудник = ВТУказателиПоследних.Сотрудник
			|			И ВТЗаработанныеПрава.ВидЕжегодногоОтпуска = ВТУказателиПоследних.ВидЕжегодногоОтпуска
			|			И ВТЗаработанныеПрава.Период = ВТУказателиПоследних.Период
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ЗаработанныеПрава.Сотрудник КАК Сотрудник,
			|	ЗаработанныеПрава.ВидЕжегодногоОтпуска КАК ВидЕжегодногоОтпуска,
			|	ЗаработанныеПрава.ДатаНачала КАК ДатаНачала,
			|	ЗаработанныеПрава.ДатаОкончания КАК ДатаОкончания,
			|	МАКСИМУМ(ЗаработанныеПрава.Период) КАК Период
			|ПОМЕСТИТЬ ВТУказателиОкончанийРабочихЛетСотрудников
			|ИЗ
			|	ВТЗаработанныеПрава КАК ЗаработанныеПрава
			|
			|СГРУППИРОВАТЬ ПО
			|	ЗаработанныеПрава.Сотрудник,
			|	ЗаработанныеПрава.ВидЕжегодногоОтпуска,
			|	ЗаработанныеПрава.ДатаНачала,
			|	ЗаработанныеПрава.ДатаОкончания
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ЗаработанныеПрава.Сотрудник КАК Сотрудник,
			|	ЗаработанныеПрава.ВидЕжегодногоОтпуска КАК ВидЕжегодногоОтпуска,
			|	ЗаработанныеПрава.ДатаНачала КАК ДатаНачала,
			|	ЗаработанныеПрава.ДатаОкончания КАК ДатаОкончания,
			|	ЗаработанныеПрава.КоличествоДней КАК Дней,
			|	ЗаработанныеПрава.Период КАК Период
			|ПОМЕСТИТЬ ВТЗаработанныеОтпускаПоГодам
			|ИЗ
			|	ВТЗаработанныеПрава КАК ЗаработанныеПрава
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТУказателиОкончанийРабочихЛетСотрудников КАК ПериодыСотрудников
			|		ПО ЗаработанныеПрава.Сотрудник = ПериодыСотрудников.Сотрудник
			|			И ЗаработанныеПрава.ВидЕжегодногоОтпуска = ПериодыСотрудников.ВидЕжегодногоОтпуска
			|			И ЗаработанныеПрава.ДатаНачала = ПериодыСотрудников.ДатаНачала
			|			И ЗаработанныеПрава.ДатаОкончания = ПериодыСотрудников.ДатаОкончания
			|			И ЗаработанныеПрава.Период = ПериодыСотрудников.Период
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	НачальныеОстаткиОтпусков.Сотрудник КАК Сотрудник,
			|	МАКСИМУМ(НачальныеОстаткиОтпусков.ДатаОстатка) КАК ДатаОстатка
			|ПОМЕСТИТЬ ВТНачальныеОстатки
			|ИЗ
			|	РегистрСведений.НачальныеОстаткиОтпусков КАК НачальныеОстаткиОтпусков
			|
			|СГРУППИРОВАТЬ ПО
			|	НачальныеОстаткиОтпусков.Сотрудник
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ФактическиеОтпуска.Сотрудник КАК Сотрудник,
			|	ФактическиеОтпуска.ВидЕжегодногоОтпуска КАК ВидЕжегодногоОтпуска,
			|	СУММА(ФактическиеОтпуска.Количество) КАК Отгуляно
			|ПОМЕСТИТЬ ВТУчитываемыеОтпускаСотрудников
			|ИЗ
			|	РегистрНакопления.ФактическиеОтпуска КАК ФактическиеОтпуска
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНачальныеОстатки КАК ВТНачальныеОстатки
			|		ПО ФактическиеОтпуска.Сотрудник = ВТНачальныеОстатки.Сотрудник
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТЕжегодныеОтпуска КАК ВТЕжегодныеОтпуска
			|		ПО ФактическиеОтпуска.ВидЕжегодногоОтпуска = ВТЕжегодныеОтпуска.ВидЕжегодногоОтпуска
			|ГДЕ
			|	ФактическиеОтпуска.Период >= ЕСТЬNULL(ВТНачальныеОстатки.ДатаОстатка, ДАТАВРЕМЯ(1, 1, 1))
			|	И ФактическиеОтпуска.Период <= КОНЕЦПЕРИОДА(&ДатаОтчета, ДЕНЬ)
			|
			|СГРУППИРОВАТЬ ПО
			|	ФактическиеОтпуска.Сотрудник,
			|	ФактическиеОтпуска.ВидЕжегодногоОтпуска
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ЗаработанныеОтпускаПоГодам.Сотрудник КАК Сотрудник,
			|	ЗаработанныеОтпускаПоГодам.ВидЕжегодногоОтпуска КАК ВидОтпуска,
			|	ЗаработанныеОтпускаПоГодам.ДатаНачала КАК ДатаНачала,
			|	ЗаработанныеОтпускаПоГодам.ДатаОкончания КАК ДатаОкончания,
			|	ЗаработанныеОтпускаПоГодам.Дней КАК Дней,
			|	ЗаработанныеОтпускаПоГодам.Период КАК Период,
			|	ЕСТЬNULL(ВТУчитываемыеОтпускаСотрудников.Отгуляно, 0) КАК Отгуляно,
			|	ЗаработанныеОтпускаПоГодам.Дней - ЕСТЬNULL(ВТУчитываемыеОтпускаСотрудников.Отгуляно, 0) КАК Остаток,
			|	ВЫБОР
			|		КОГДА ЗаработанныеОтпускаПоГодам.Дней - ЕСТЬNULL(ВТУчитываемыеОтпускаСотрудников.Отгуляно, 0) <= 0
			|			ТОГДА ИСТИНА
			|		ИНАЧЕ ЛОЖЬ
			|	КОНЕЦ КАК РабочийГодЗакрыт
			|ПОМЕСТИТЬ ВТРабочиеГодаСотрудников
			|ИЗ
			|	ВТЗаработанныеОтпускаПоГодам КАК ЗаработанныеОтпускаПоГодам
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТУчитываемыеОтпускаСотрудников КАК ВТУчитываемыеОтпускаСотрудников
			|		ПО ЗаработанныеОтпускаПоГодам.Сотрудник = ВТУчитываемыеОтпускаСотрудников.Сотрудник
			|			И ЗаработанныеОтпускаПоГодам.ВидЕжегодногоОтпуска = ВТУчитываемыеОтпускаСотрудников.ВидЕжегодногоОтпуска
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	РабочиеГодаСотрудников.Сотрудник КАК Сотрудник,
			|	РабочиеГодаСотрудников.ВидОтпуска КАК ВидОтпуска,
			|	РабочиеГодаСотрудников.ДатаНачала КАК РабочийГодДатаНачала,
			|	МАКСИМУМ(ЕСТЬNULL(РабочиеГодаСотрудниковПредыдущие.ДатаНачала, РабочиеГодаСотрудников.ДатаНачала)) КАК ПредыдущийРабочийГодДатаНачала
			|ПОМЕСТИТЬ ВТУказателиРабочихЛет
			|ИЗ
			|	ВТРабочиеГодаСотрудников КАК РабочиеГодаСотрудников
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРабочиеГодаСотрудников КАК РабочиеГодаСотрудниковПредыдущие
			|		ПО РабочиеГодаСотрудников.Сотрудник = РабочиеГодаСотрудниковПредыдущие.Сотрудник
			|			И РабочиеГодаСотрудников.ВидОтпуска = РабочиеГодаСотрудниковПредыдущие.ВидОтпуска
			|			И РабочиеГодаСотрудников.ДатаНачала > РабочиеГодаСотрудниковПредыдущие.ДатаНачала
			|
			|СГРУППИРОВАТЬ ПО
			|	РабочиеГодаСотрудников.Сотрудник,
			|	РабочиеГодаСотрудников.ВидОтпуска,
			|	РабочиеГодаСотрудников.ДатаНачала
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	УказателиРабочихЛет.Сотрудник КАК Сотрудник,
			|	УказателиРабочихЛет.ВидОтпуска КАК ВидОтпуска,
			|	УказателиРабочихЛет.РабочийГодДатаНачала КАК РабочийГодДатаНачала,
			|	РабочиеГодаСотрудников.ДатаОкончания КАК РабочийГодДатаОкончания,
			|	РабочиеГодаСотрудников.Период КАК Период,
			|	РабочиеГодаСотрудников.Остаток КАК НарастающийОстаток,
			|	РабочиеГодаСотрудниковПредыдущие.Остаток КАК ПредыдущийНарастающийОстаток,
			|	ВЫБОР
			|		КОГДА РабочиеГодаСотрудников.Остаток < 0
			|			ТОГДА ВЫБОР
			|					КОГДА НЕ ВТЗаработанныеОтпускаПоследние.Сотрудник ЕСТЬ NULL
			|						ТОГДА РабочиеГодаСотрудников.Остаток
			|					ИНАЧЕ 0
			|				КОНЕЦ
			|		КОГДА УказателиРабочихЛет.РабочийГодДатаНачала = УказателиРабочихЛет.ПредыдущийРабочийГодДатаНачала
			|			ТОГДА РабочиеГодаСотрудников.Остаток
			|		КОГДА РабочиеГодаСотрудниковПредыдущие.Остаток < 0
			|			ТОГДА РабочиеГодаСотрудников.Остаток
			|		ИНАЧЕ РабочиеГодаСотрудников.Остаток - РабочиеГодаСотрудниковПредыдущие.Остаток
			|	КОНЕЦ КАК ОстатокГода,
			|	NULL КАК ЧасыОстаток,
			|	ЕСТЬNULL(ТекущееДнейЕжегодно.ДнейЕжегодно, 0) КАК ДнейЕжегодно,
			|	ВЫБОР
			|		КОГДА НЕ ВТЗаработанныеОтпускаПоследние.Сотрудник ЕСТЬ NULL
			|			ТОГДА ИСТИНА
			|		ИНАЧЕ ЛОЖЬ
			|	КОНЕЦ КАК ПоследнийГод
			|ПОМЕСТИТЬ ВТИтоговыеРабочиеГодаОтпусков
			|ИЗ
			|	ВТУказателиРабочихЛет КАК УказателиРабочихЛет
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРабочиеГодаСотрудников КАК РабочиеГодаСотрудников
			|			ЛЕВОЕ СОЕДИНЕНИЕ ВТЗаработанныеОтпускаПоследние КАК ВТЗаработанныеОтпускаПоследние
			|			ПО РабочиеГодаСотрудников.Сотрудник = ВТЗаработанныеОтпускаПоследние.Сотрудник
			|				И РабочиеГодаСотрудников.ВидОтпуска = ВТЗаработанныеОтпускаПоследние.ВидЕжегодногоОтпуска
			|				И РабочиеГодаСотрудников.Период = ВТЗаработанныеОтпускаПоследние.Период
			|		ПО УказателиРабочихЛет.Сотрудник = РабочиеГодаСотрудников.Сотрудник
			|			И УказателиРабочихЛет.ВидОтпуска = РабочиеГодаСотрудников.ВидОтпуска
			|			И УказателиРабочихЛет.РабочийГодДатаНачала = РабочиеГодаСотрудников.ДатаНачала
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРабочиеГодаСотрудников КАК РабочиеГодаСотрудниковПредыдущие
			|		ПО УказателиРабочихЛет.Сотрудник = РабочиеГодаСотрудниковПредыдущие.Сотрудник
			|			И УказателиРабочихЛет.ВидОтпуска = РабочиеГодаСотрудниковПредыдущие.ВидОтпуска
			|			И УказателиРабочихЛет.ПредыдущийРабочийГодДатаНачала = РабочиеГодаСотрудниковПредыдущие.ДатаНачала
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЗаработанныеОтпускаПоследние КАК ТекущееДнейЕжегодно
			|		ПО УказателиРабочихЛет.Сотрудник = ТекущееДнейЕжегодно.Сотрудник
			|			И УказателиРабочихЛет.ВидОтпуска = ТекущееДнейЕжегодно.ВидЕжегодногоОтпуска
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	РабочиеГодаСотрудников.Сотрудник КАК Сотрудник,
			|	РабочиеГодаСотрудников.ОстатокГода КАК ДниОстаток,
			|	NULL КАК ЧасыОстаток,
			|	РабочиеГодаСотрудников.ВидОтпуска КАК ВидОтпуска,
			|	РабочиеГодаСотрудников.РабочийГодДатаНачала КАК РабочийГодДатаНачала,
			|	РабочиеГодаСотрудников.РабочийГодДатаОкончания КАК РабочийГодДатаОкончания,
			|	РабочиеГодаСотрудников.Период КАК Период,
			|	РабочиеГодаСотрудников.ДнейЕжегодно КАК ДнейЕжегодно,
			|	РабочиеГодаСотрудников.ПоследнийГод КАК ПоследнийГод
			|ПОМЕСТИТЬ ВТИтоговыеСотрудники
			|ИЗ
			|	ВТИтоговыеРабочиеГодаОтпусков КАК РабочиеГодаСотрудников
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ДниЧасыОтгуловОстатки.Сотрудник,
			|	ДниЧасыОтгуловОстатки.ДниОстаток,
			|	ДниЧасыОтгуловОстатки.ЧасыОстаток,
			|	NULL,
			|	NULL,
			|	NULL,
			|	NULL,
			|	NULL,
			|	NULL
			|ИЗ
			|	РегистрНакопления.ДниЧасыОтгулов.Остатки(&ДатаОтчета, ) КАК ДниЧасыОтгуловОстатки
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	Сотрудники.Ссылка КАК Сотрудник,
			|	&ДатаОтчета КАК Период
			|ПОМЕСТИТЬ ВТСотрудники
			|{ВЫБРАТЬ
			|	Сотрудник.*}
			|ИЗ
			|	Справочник.Сотрудники КАК Сотрудники
			|{ГДЕ
			|	Сотрудники.Ссылка.* КАК Сотрудник,
			|	Сотрудники.ФизическоеЛицо.*,
			|	Сотрудники.ГоловнаяОрганизация.*}
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ВТСотрудники.Сотрудник КАК Сотрудник,
			|	"""""""" КАК ТабельныйНомер,
			|	ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка) КАК ФизическоеЛицо,
			|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК ГоловнаяОрганизация,
			|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК Организация,
			|	ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка) КАК Подразделение,
			|	ЗНАЧЕНИЕ(Справочник.Должности.ПустаяСсылка) КАК Должность,
			|	ЗНАЧЕНИЕ(Перечисление.ВидыЗанятости.ПустаяСсылка) КАК ВидЗанятости,
			|	ТекущиеКадровыеДанныеСотрудников.ДатаПриема КАК ДатаПриема,
			|	ТекущиеКадровыеДанныеСотрудников.ДатаУвольнения КАК ДатаУвольнения,
			|	ЗНАЧЕНИЕ(Перечисление.СостоянияСотрудника.ПустаяСсылка) КАК Состояние
			|ПОМЕСТИТЬ Представления_КадровыеДанныеСотрудников
			|ИЗ
			|	ВТСотрудники КАК ВТСотрудники
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТекущиеКадровыеДанныеСотрудников КАК ТекущиеКадровыеДанныеСотрудников
			|		ПО ВТСотрудники.Сотрудник = ТекущиеКадровыеДанныеСотрудников.Сотрудник
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Сотрудники.Сотрудник КАК Сотрудник
			|ПОМЕСТИТЬ ВТНеучтенныеСотрудники
			|ИЗ
			|	ВТСотрудники КАК Сотрудники
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИтоговыеСотрудники КАК ИтоговыеСотрудники
			|		ПО Сотрудники.Сотрудник = ИтоговыеСотрудники.Сотрудник
			|ГДЕ
			|	ИтоговыеСотрудники.Сотрудник ЕСТЬ NULL
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ПоложенныеВидыЕжегодныхОтпусковСрезПоследних.Сотрудник КАК Сотрудник,
			|	ПоложенныеВидыЕжегодныхОтпусковСрезПоследних.ВидЕжегодногоОтпуска КАК ВидОтпуска,
			|	ПоложенныеВидыЕжегодныхОтпусковСрезПоследних.КоличествоДнейВГод КАК ДнейЕжегодно
			|ПОМЕСТИТЬ ВТПраваНаОтпускаНеучтенныхСотрудников
			|ИЗ
			|	РегистрСведений.ПоложенныеВидыЕжегодныхОтпусков.СрезПоследних(
			|			&ДатаОтчета,
			|			Сотрудник В
			|				(ВЫБРАТЬ
			|					НеучтенныеСотрудники.Сотрудник
			|				ИЗ
			|					ВТНеучтенныеСотрудники КАК НеучтенныеСотрудники)) КАК ПоложенныеВидыЕжегодныхОтпусковСрезПоследних
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ИтоговыеСотрудники.Сотрудник.Наименование КАК Сотрудник,
			|	ИтоговыеСотрудники.ВидОтпуска.Наименование КАК ВидОтпуска,
			|	ИтоговыеСотрудники.ДнейЕжегодно КАК ДнейЕжегодно,
			|	ИтоговыеСотрудники.РабочийГодДатаНачала КАК РабочийГодДатаНачала,
			|	ИтоговыеСотрудники.РабочийГодДатаОкончания КАК РабочийГодДатаОкончания,
			|	ИтоговыеСотрудники.ДниОстаток КАК Дни,
			|	ИтоговыеСотрудники.ЧасыОстаток КАК Часы,
			|	ИтоговыеСотрудники.Сотрудник.Код КАК ТабельныйНомер,
			|	ИтоговыеСотрудники.Сотрудник.ГоловнаяОрганизация.Наименование КАК Организация,
			|	КадровыеДанныеСотрудников.ДатаУвольнения КАК ДатаУвольнения
			|ИЗ
			|	ВТИтоговыеСотрудники КАК ИтоговыеСотрудники
			|		ЛЕВОЕ СОЕДИНЕНИЕ Представления_КадровыеДанныеСотрудников КАК КадровыеДанныеСотрудников
			|		ПО (ИтоговыеСотрудники.Сотрудник = КадровыеДанныеСотрудников.Сотрудник)
			|ГДЕ
			|	ИтоговыеСотрудники.ДниОстаток <> 0
			|	И (ЕСТЬNULL(КадровыеДанныеСотрудников.ДатаУвольнения, ДАТАВРЕМЯ(3999, 1, 1)) > &ДатаОтчета
			|			ИЛИ КадровыеДанныеСотрудников.ДатаУвольнения = ДАТАВРЕМЯ(1, 1, 1))
			|	И ВЫБОР
			|			КОГДА &БезОтбора
			|				ТОГДА ИСТИНА
			|			ИНАЧЕ ИтоговыеСотрудники.Сотрудник.ФизическоеЛицо.СтраховойНомерПФР В (&СписокСНИЛС)
			|		КОНЕЦ
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ПраваНаОтпускаНеучтенныхСотрудников.Сотрудник.Наименование,
			|	ПраваНаОтпускаНеучтенныхСотрудников.ВидОтпуска.Наименование,
			|	ПраваНаОтпускаНеучтенныхСотрудников.ДнейЕжегодно,
			|	ДАТАВРЕМЯ(1, 1, 1),
			|	ДАТАВРЕМЯ(1, 1, 1),
			|	0,
			|	0,
			|	ИтоговыеСотрудники.Сотрудник.Код,
			|	ИтоговыеСотрудники.Сотрудник.ГоловнаяОрганизация.Наименование,
			|	ДАТАВРЕМЯ(1, 1, 1)
			|ИЗ
			|	ВТПраваНаОтпускаНеучтенныхСотрудников КАК ПраваНаОтпускаНеучтенныхСотрудников
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Представления_КадровыеДанныеСотрудников КАК КадровыеДанныеСотрудников
			|		ПО (ПраваНаОтпускаНеучтенныхСотрудников.Сотрудник = КадровыеДанныеСотрудников.Сотрудник)
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИтоговыеСотрудники КАК ИтоговыеСотрудники
			|		ПО (ПраваНаОтпускаНеучтенныхСотрудников.Сотрудник = ИтоговыеСотрудники.Сотрудник)
			|			И (ПраваНаОтпускаНеучтенныхСотрудников.ВидОтпуска = ИтоговыеСотрудники.ВидОтпуска)
			|ГДЕ
			|	ИтоговыеСотрудники.ВидОтпуска ЕСТЬ NULL
			|	И ВЫБОР
			|			КОГДА &БезОтбора
			|				ТОГДА ИСТИНА
			|			ИНАЧЕ ПраваНаОтпускаНеучтенныхСотрудников.Сотрудник.ФизическоеЛицо.СтраховойНомерПФР В (&СписокСНИЛС)
			|		КОНЕЦ
			|	И (ЕСТЬNULL(КадровыеДанныеСотрудников.ДатаУвольнения, ДАТАВРЕМЯ(3999, 1, 1)) > &ДатаОтчета
			|			ИЛИ КадровыеДанныеСотрудников.ДатаУвольнения = ДАТАВРЕМЯ(1, 1, 1))";
КонецФункции

Функция ТекстЗапросаПлановыеФактическиеОтпуска()
	Возврат "ВЫБРАТЬ РАЗРЕШЕННЫЕ
|	ФактическиеОтпуска.Сотрудник КАК Сотрудник,
|	ФактическиеОтпуска.ВидЕжегодногоОтпуска КАК ВидЕжегодногоОтпуска,
|	ФактическиеОтпуска.ДатаНачала КАК ДатаНачала,
|	ФактическиеОтпуска.ДатаОкончания КАК ДатаОкончания
|ПОМЕСТИТЬ ВТФактическиеОтпускаЗаПериод
|ИЗ
|	РегистрНакопления.ФактическиеОтпуска КАК ФактическиеОтпуска
|ГДЕ
|	НЕ ФактическиеОтпуска.Компенсация
|	И (ФактическиеОтпуска.ДатаНачала МЕЖДУ &НачалоПериода И &ОкончаниеПериода
|			ИЛИ ФактическиеОтпуска.ДатаОкончания МЕЖДУ &НачалоПериода И &ОкончаниеПериода)
|{ГДЕ
|	ФактическиеОтпуска.Сотрудник.*}
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	ФактическиеОтпускаЗаПериод.Сотрудник КАК Сотрудник,
|	ФактическиеОтпускаЗаПериод.ВидЕжегодногоОтпуска КАК ВидЕжегодногоОтпуска,
|	МИНИМУМ(ФактическиеОтпускаЗаПериод.ДатаНачала) КАК ДатаНачала,
|	МАКСИМУМ(ФактическиеОтпускаЗаПериод.ДатаОкончания) КАК ДатаОкончания
|ПОМЕСТИТЬ ВТФактическиеОтпускаДаты
|ИЗ
|	ВТФактическиеОтпускаЗаПериод КАК ФактическиеОтпускаЗаПериод
|
|СГРУППИРОВАТЬ ПО
|	ФактическиеОтпускаЗаПериод.Сотрудник,
|	ФактическиеОтпускаЗаПериод.ВидЕжегодногоОтпуска
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ РАЗРЕШЕННЫЕ
|	ФактическиеОтпуска.Сотрудник КАК Сотрудник,
|	ФактическиеОтпуска.ВидЕжегодногоОтпуска КАК ВидЕжегодногоОтпуска,
|	ФактическиеОтпуска.ДатаНачала КАК ДатаНачала,
|	ФактическиеОтпуска.ДатаОкончания КАК ДатаОкончания,
|	СУММА(ФактическиеОтпуска.Количество) КАК Количество
|ПОМЕСТИТЬ ВТФактическиеОтпуска
|ИЗ
|	РегистрНакопления.ФактическиеОтпуска КАК ФактическиеОтпуска
|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТФактическиеОтпускаДаты КАК ФактическиеОтпускаДаты
|		ПО (ФактическиеОтпуска.Сотрудник = ФактическиеОтпускаДаты.Сотрудник)
|			И (ФактическиеОтпуска.ВидЕжегодногоОтпуска = ФактическиеОтпускаДаты.ВидЕжегодногоОтпуска)
|			И (ФактическиеОтпуска.ДатаНачала >= ФактическиеОтпускаДаты.ДатаНачала)
|			И (ФактическиеОтпуска.ДатаОкончания <= ФактическиеОтпускаДаты.ДатаОкончания)
|			И (НЕ ФактическиеОтпуска.Компенсация)
|
|СГРУППИРОВАТЬ ПО
|	ФактическиеОтпуска.Сотрудник,
|	ФактическиеОтпуска.ВидЕжегодногоОтпуска,
|	ФактическиеОтпуска.ДатаОкончания,
|	ФактическиеОтпуска.ДатаНачала
|
|ИМЕЮЩИЕ
|	СУММА(ФактическиеОтпуска.Количество) <> 0
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ РАЗЛИЧНЫЕ
|	ФактическиеОтпуска.Сотрудник КАК Сотрудник,
|	ФактическиеОтпуска.ВидЕжегодногоОтпуска КАК ВидЕжегодногоОтпуска,
|	ФактическиеОтпуска.ДатаНачала КАК ДатаНачала,
|	ФактическиеОтпуска.ДатаОкончания КАК ДатаОкончания
|ПОМЕСТИТЬ ВТПериодыОтпусков
|ИЗ
|	ВТФактическиеОтпуска КАК ФактическиеОтпуска
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	ПериодыОтпусков.Сотрудник КАК Сотрудник,
|	ПериодыОтпусков.ВидЕжегодногоОтпуска КАК ВидЕжегодногоОтпуска,
|	ПериодыОтпусков.ДатаНачала КАК ДатаНачала,
|	ПериодыОтпусков.ДатаОкончания КАК ДатаОкончания
|ПОМЕСТИТЬ ВТМаксимальныеПериоды
|ИЗ
|	ВТПериодыОтпусков КАК ПериодыОтпусков
|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПериодыОтпусков КАК Интервалы
|		ПО (ПериодыОтпусков.Сотрудник = Интервалы.Сотрудник)
|			И (ПериодыОтпусков.ВидЕжегодногоОтпуска = Интервалы.ВидЕжегодногоОтпуска)
|			И (ПериодыОтпусков.ДатаНачала >= Интервалы.ДатаНачала)
|			И (ПериодыОтпусков.ДатаОкончания <= Интервалы.ДатаОкончания)
|			И (НЕ(ПериодыОтпусков.ДатаНачала = Интервалы.ДатаНачала
|					И ПериодыОтпусков.ДатаОкончания = Интервалы.ДатаОкончания))
|ГДЕ
|	Интервалы.Сотрудник ЕСТЬ NULL
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ РАЗРЕШЕННЫЕ
|	&ОкончаниеПериода КАК Период,
|	ПлановыеЕжегодныеОтпуска.Сотрудник КАК Сотрудник,
|	ПлановыеЕжегодныеОтпуска.ВидОтпуска КАК ВидОтпуска,
|	ВЫБОР
|		КОГДА ПлановыеЕжегодныеОтпуска.Перенесен
|			ТОГДА ПлановыеЕжегодныеОтпуска.ПеренесеннаяДатаНачала
|		ИНАЧЕ ПлановыеЕжегодныеОтпуска.ДатаНачала
|	КОНЕЦ КАК ДатаНачала,
|	ВЫБОР
|		КОГДА ПлановыеЕжегодныеОтпуска.Перенесен
|			ТОГДА ПлановыеЕжегодныеОтпуска.ПеренесеннаяДатаОкончания
|		ИНАЧЕ ПлановыеЕжегодныеОтпуска.ДатаОкончания
|	КОНЕЦ КАК ДатаОкончания,
|	ВЫБОР
|		КОГДА ПлановыеЕжегодныеОтпуска.Перенесен
|			ТОГДА ПлановыеЕжегодныеОтпуска.ПеренесенноеКоличествоДней
|		ИНАЧЕ ПлановыеЕжегодныеОтпуска.КоличествоДней
|	КОНЕЦ КАК КоличествоДней,
|	ИСТИНА КАК План
|ПОМЕСТИТЬ ВТСотрудники
|ИЗ
|	РегистрСведений.ПлановыеЕжегодныеОтпуска КАК ПлановыеЕжегодныеОтпуска
|ГДЕ
|	(ВЫБОР
|				КОГДА ПлановыеЕжегодныеОтпуска.Перенесен
|					ТОГДА ПлановыеЕжегодныеОтпуска.ПеренесеннаяДатаНачала
|				ИНАЧЕ ПлановыеЕжегодныеОтпуска.ДатаНачала
|			КОНЕЦ МЕЖДУ &НачалоПериода И &ОкончаниеПериода
|			ИЛИ ВЫБОР
|				КОГДА ПлановыеЕжегодныеОтпуска.Перенесен
|					ТОГДА ПлановыеЕжегодныеОтпуска.ПеренесеннаяДатаОкончания
|				ИНАЧЕ ПлановыеЕжегодныеОтпуска.ДатаОкончания
|			КОНЕЦ МЕЖДУ &НачалоПериода И &ОкончаниеПериода)
|	И ВЫБОР
|			КОГДА &БезОтбора
|				ТОГДА ИСТИНА
|			ИНАЧЕ ПлановыеЕжегодныеОтпуска.ФизическоеЛицо.СтраховойНомерПФР В (&СписокСНИЛС)
|		КОНЕЦ
|{ГДЕ
|	ПлановыеЕжегодныеОтпуска.Сотрудник.*}
|
|ОБЪЕДИНИТЬ ВСЕ
|
|ВЫБРАТЬ
|	&ОкончаниеПериода,
|	МаксимальныеПериоды.Сотрудник,
|	МаксимальныеПериоды.ВидЕжегодногоОтпуска,
|	МаксимальныеПериоды.ДатаНачала,
|	МаксимальныеПериоды.ДатаОкончания,
|	СУММА(ФактическиеОтпуска.Количество),
|	ЛОЖЬ
|ИЗ
|	ВТМаксимальныеПериоды КАК МаксимальныеПериоды
|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФактическиеОтпуска КАК ФактическиеОтпуска
|		ПО МаксимальныеПериоды.Сотрудник = ФактическиеОтпуска.Сотрудник
|			И МаксимальныеПериоды.ВидЕжегодногоОтпуска = ФактическиеОтпуска.ВидЕжегодногоОтпуска
|			И МаксимальныеПериоды.ДатаНачала <= ФактическиеОтпуска.ДатаНачала
|			И МаксимальныеПериоды.ДатаОкончания >= ФактическиеОтпуска.ДатаОкончания
|ГДЕ
|	МаксимальныеПериоды.Сотрудник.ФизическоеЛицо.СтраховойНомерПФР В(&СписокСНИЛС)
|
|СГРУППИРОВАТЬ ПО
|	МаксимальныеПериоды.Сотрудник,
|	МаксимальныеПериоды.ВидЕжегодногоОтпуска,
|	МаксимальныеПериоды.ДатаНачала,
|	МаксимальныеПериоды.ДатаОкончания
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ РАЗРЕШЕННЫЕ
|	ВТСотрудники.Сотрудник КАК Сотрудник,
|	ВТСотрудники.Сотрудник.ФизическоеЛицо КАК ФизическоеЛицо,
|	ВТСотрудники.Сотрудник.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
|	ВТСотрудники.Сотрудник.Код КАК ТабельныйНомер,
|	ВТСотрудники.Сотрудник.ГоловнаяОрганизация КАК Организация
|ПОМЕСТИТЬ Представления_КадровыеДанныеСотрудников
|ИЗ
|	ВТСотрудники КАК ВТСотрудники
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	Сотрудники.Сотрудник.Наименование КАК СотрудникПланФакт,
|	Сотрудники.ВидОтпуска.Наименование КАК ВидОтпускаПланФакт,
|	Сотрудники.ДатаНачала КАК ДатаНачалаПланФакт,
|	Сотрудники.ДатаОкончания КАК ДатаОкончанияПланФакт,
|	Сотрудники.КоличествоДней КАК КоличествоДнейПланФакт,
|	ВЫБОР
|		КОГДА Сотрудники.План = ИСТИНА
|			ТОГДА ""Плановый""
|		ИНАЧЕ ""Фактический""
|	КОНЕЦ КАК План,
|	КадровыеДанныеСотрудников.ТабельныйНомер КАК ТабельныйНомерПланФакт,
|	КадровыеДанныеСотрудников.Организация.Наименование КАК ОрганизацияПланФакт
|{ВЫБРАТЬ
|	СотрудникПланФакт,
|	ВидОтпускаПланФакт,
|	ДатаНачалаПланФакт,
|	ДатаОкончанияПланФакт,
|	КоличествоДнейПланФакт,
|	План,
|	КадровыеДанныеСотрудников.ФизическоеЛицо.*,
|	КадровыеДанныеСотрудников.ГоловнаяОрганизация.*,
|	ТабельныйНомерПланФакт,
|	ОрганизацияПланФакт}
|ИЗ
|	ВТСотрудники КАК Сотрудники
|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Представления_КадровыеДанныеСотрудников КАК КадровыеДанныеСотрудников
|		ПО (Сотрудники.Сотрудник = КадровыеДанныеСотрудников.Сотрудник)
|{ГДЕ
|	Сотрудники.Сотрудник.*,
|	Сотрудники.ВидОтпуска.*,
|	Сотрудники.ДатаНачала,
|	Сотрудники.ДатаОкончания,
|	Сотрудники.План,
|	КадровыеДанныеСотрудников.ФизическоеЛицо.*,
|	КадровыеДанныеСотрудников.ГоловнаяОрганизация.*,
|	КадровыеДанныеСотрудников.Организация.*}
|
|СГРУППИРОВАТЬ ПО
|	Сотрудники.Сотрудник.Наименование,
|	Сотрудники.ВидОтпуска.Наименование,
|	Сотрудники.ДатаНачала,
|	Сотрудники.ДатаОкончания,
|	Сотрудники.КоличествоДней,
|	КадровыеДанныеСотрудников.ТабельныйНомер,
|	КадровыеДанныеСотрудников.Организация.Наименование,
|	ВЫБОР
|		КОГДА Сотрудники.План = ИСТИНА
|			ТОГДА ""Плановый""
|		ИНАЧЕ ""Фактический""
|	КОНЕЦ";
КонецФункции
Функция ТекстЗапросаОтсутствия()
	Возврат "ВЫБРАТЬ РАЗРЕШЕННЫЕ
|	СостоянияСотрудников.Период КАК Период,
|	СостоянияСотрудников.ДействуетДо КАК ДействуетДо,
|	СостоянияСотрудников.Сотрудник КАК Сотрудник,
|	ВЫБОР
|		КОГДА СостоянияСотрудников.ВидВремени = ЗНАЧЕНИЕ(Справочник.ВидыИспользованияРабочегоВремени.ПустаяСсылка)
|			ТОГДА СостоянияСотрудников.Состояние
|		ИНАЧЕ СостоянияСотрудников.ВидВремени
|	КОНЕЦ КАК Состояние,
|	ВЫБОР
|		КОГДА СостоянияСотрудников.Период > &НачалоПериода
|			ТОГДА СостоянияСотрудников.Период
|		ИНАЧЕ &НачалоПериода
|	КОНЕЦ КАК НачалоПодсчета,
|	ВЫБОР
|		КОГДА СостоянияСотрудников.ДействуетДо < &ОкончаниеПериода
|				И СостоянияСотрудников.ДействуетДо <> ДАТАВРЕМЯ(1, 1, 1)
|			ТОГДА СостоянияСотрудников.ДействуетДо
|		ИНАЧЕ &ОкончаниеПериода
|	КОНЕЦ КАК ОкончаниеПодсчета,
|	СостоянияСотрудников.ОкончаниеПредположительно КАК ОкончаниеПредположительно
|ПОМЕСТИТЬ ВТСостоянияСотрудников
|ИЗ
|	РегистрСведений.СостоянияСотрудников КАК СостоянияСотрудников
|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Сотрудники КАК Сотрудники
|		ПО (СостоянияСотрудников.Сотрудник = Сотрудники.Ссылка)
|ГДЕ
|	СостоянияСотрудников.Период < &ОкончаниеПериода
|	И (СостоянияСотрудников.ДействуетДо >= &НачалоПериода
|			ИЛИ СостоянияСотрудников.ДействуетДо = ДАТАВРЕМЯ(1, 1, 1))
|	И СостоянияСотрудников.Состояние <> ЗНАЧЕНИЕ(Перечисление.СостоянияСотрудника.Увольнение)
|	И СостоянияСотрудников.Состояние <> ЗНАЧЕНИЕ(Перечисление.СостоянияСотрудника.Работа)
|	И Выбор Когда &БезОтбора Тогда Истина Иначе СостоянияСотрудников.Сотрудник.ФизическоеЛицо.СтраховойНомерПФР В(&СписокСНИЛС) Конец
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	ВТСостоянияСотрудников.Период КАК ПериодОтсутствия,
|	ВТСостоянияСотрудников.ДействуетДо КАК ДействуетДоОтсутствия,
|	ВТСостоянияСотрудников.Сотрудник.Наименование КАК СотрудникОтсутствия,
|	ПРЕДСТАВЛЕНИЕ(ВТСостоянияСотрудников.Состояние) КАК СостояниеОтсутствия,
|	ВТСостоянияСотрудников.ОкончаниеПредположительно КАК ОкончаниеПредположительноОтсутствия,
|	ВТСостоянияСотрудников.Сотрудник.ГоловнаяОрганизация.Наименование КАК ОрганизацияОтсутствия
|ИЗ
|	ВТСостоянияСотрудников КАК ВТСостоянияСотрудников";
КонецФункции


Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	СтандартнаяОбработка = ЛОЖЬ;
	
	//Сообщить("Подключение к приемнику");
	пТекущийПользователь = Пользователи.ТекущийПользователь();
	пПодкл = Подключиться();
	Попытка 		
		ЗапросПриемникОстаткиОтпусков = ДругаяБаза.NewObject("Запрос");
		пМассивСНИЛС = ДругаяБаза.NewObject("Массив");
		ЗапросПриемникОстаткиОтпусков.Текст = ТекстЗапросаОстаткиОтпусков();

		ЗапросПриемникПланФактОтпусков = ДругаяБаза.NewObject("Запрос");
        ЗапросПриемникПланФактОтпусков.Текст = ТекстЗапросаПлановыеФактическиеОтпуска();
		
		ЗапросПриемникОтсутствия = ДругаяБаза.NewObject("Запрос");
        ЗапросПриемникОтсутствия.Текст = ТекстЗапросаОтсутствия();
		
			СхемаКомпоновкиДанных = ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
			Настройки = КомпоновщикНастроек.ПолучитьНастройки(); 
			ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных; 
		 
			КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;	
			МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, Настройки, ДанныеРасшифровки);	
			
			//Проверяем право на просмотр всех сотрудников
			Если Пользователи.РолиДоступны("Рин1_ПросмотрОтсутствийИзЗУППоМногимСотрудникам",пТекущийПользователь) или  
				Пользователи.РолиДоступны("ПолныеПрава",пТекущийПользователь) Тогда 
				пФизическиеЛица = КомпоновкаДанныхКлиентСервер.ПолучитьПараметр(КомпоновщикНастроек, "ФизическоеЛицо");
				
				пБезОтбора = пФизическиеЛица.Использование;
				
				Если пФизическиеЛица.Значение <> Неопределено и пФизическиеЛица.Использование Тогда 
					
					Если ТипЗнч(пФизическиеЛица.Значение) = Тип("СправочникСсылка.ФизическиеЛица") Тогда 
						пМассивСНИЛС.Добавить(пФизическиеЛица.Значение.СтраховойНомерПФР);
					Иначе
						Для Каждого СтрФизЛиц из пФизическиеЛица.Значение Цикл 
							пМассивСНИЛС.Добавить(СтрФизЛиц.Значение.СтраховойНомерПФР);
						КонецЦикла;
					КонецЕсли;
					
				КонецЕсли; 	
				
				Если пМассивСНИЛС.Количество() = 0 Тогда
					пБезОтбора = Истина;
				ИначеЕсли пМассивСНИЛС.Количество() = 0 и пФизическиеЛица.Использование Тогда
					пБезОтбора = Ложь;
				ИначеЕсли пМассивСНИЛС.Количество() > 0  и Не пФизическиеЛица.Использование Тогда
					пБезОтбора = Истина;
				Иначе 
					пБезОтбора = Ложь;
				КонецЕсли;

			Иначе  //Только по текущему пользователю
				пМассивСНИЛС.Добавить(пТекущийПользователь.ФизическоеЛицо.СтраховойНомерПФР);
				пБезОтбора = Ложь;
			КонецЕсли;
			
			ЗапросПриемникОстаткиОтпусков.УстановитьПараметр("СписокСНИЛС", пМассивСНИЛС);
		  	ЗапросПриемникОстаткиОтпусков.УстановитьПараметр("ДатаОтчета",  ТекущаяДата()); 			
			пПараметрПериод = КомпоновкаДанныхКлиентСервер.ПолучитьПараметр(КомпоновщикНастроек, "Период").Значение;
			ЗапросПриемникОстаткиОтпусков.УстановитьПараметр("БезОтбора", пБезОтбора);

		Попытка

			РезПриемник = ЗапросПриемникОстаткиОтпусков.Выполнить().Выгрузить();
			
			НовТЗ = Новый ТаблицаЗначений;
			пТипСтрока = Новый ОписаниеТипов("Строка");
			пТипДата = Новый ОписаниеТипов("Дата");
			пТипЧисло = Новый ОписаниеТипов("Число");
		    пТипБулево = Новый ОписаниеТипов("Булево"); 
			
			НовТЗ.Колонки.Добавить("Сотрудник",пТипСтрока);
			НовТЗ.Колонки.Добавить("ДнейЕжегодно",пТипЧисло);
			НовТЗ.Колонки.Добавить("ВидОтпуска",пТипСтрока);
			НовТЗ.Колонки.Добавить("РабочийГодДатаНачала",пТипДата);
			НовТЗ.Колонки.Добавить("РабочийГодДатаОкончания",пТипДата);
			НовТЗ.Колонки.Добавить("Дни",пТипЧисло);
			НовТЗ.Колонки.Добавить("Часы",пТипЧисло);
			НовТЗ.Колонки.Добавить("ТабельныйНомер",пТипСтрока);
			НовТЗ.Колонки.Добавить("Организация",пТипСтрока);
			НовТЗ.Колонки.Добавить("Подразделение",пТипСтрока);
			НовТЗ.Колонки.Добавить("Должность",пТипСтрока);
			НовТЗ.Колонки.Добавить("ДатаУвольнения",пТипДата);

			РезПриемник = ПоправитьТаблицу(ДругаяБаза, РезПриемник,,НовТЗ);
		
			ВнешнийНаборДанных = Новый Структура("ОстаткиОтпусков", РезПриемник); 
		Исключение
			Сообщить("Ошибка выполнения запроса к ИБ Приемник: " + ОписаниеОшибки());
			
		КонецПопытки;

		Попытка
			//План-факт отпуска
			ЗапросПриемникПланФактОтпусков.УстановитьПараметр("СписокСНИЛС", пМассивСНИЛС);
			ЗапросПриемникПланФактОтпусков.УстановитьПараметр("НачалоПериода",  пПараметрПериод.ДатаНачала);
			ЗапросПриемникПланФактОтпусков.УстановитьПараметр("ОкончаниеПериода",  пПараметрПериод.ДатаОкончания);
			ЗапросПриемникПланФактОтпусков.УстановитьПараметр("БезОтбора", пБезОтбора);
			
			РезПланФактОтпуска = ЗапросПриемникПланФактОтпусков.Выполнить().Выгрузить();
			
			НовТЗ = Новый ТаблицаЗначений;
			НовТЗ.Колонки.Добавить("СотрудникПланФакт",пТипСтрока);
			НовТЗ.Колонки.Добавить("ВидОтпускаПланФакт",пТипСтрока);
			НовТЗ.Колонки.Добавить("ДатаНачалаПланФакт",пТипДата);
			НовТЗ.Колонки.Добавить("ДатаОкончанияПланФакт",пТипДата);
			НовТЗ.Колонки.Добавить("КоличествоДнейПланФакт",пТипЧисло);
			НовТЗ.Колонки.Добавить("План",пТипСтрока);
			НовТЗ.Колонки.Добавить("ТабельныйНомерПланФакт",пТипСтрока);
			НовТЗ.Колонки.Добавить("ОрганизацияПланФакт",пТипСтрока);

			РезПланФактОтпуска = ПоправитьТаблицу(ДругаяБаза, РезПланФактОтпуска,,НовТЗ);
			ВнешнийНаборДанных.Вставить("ПлановыеФактическиеОтпуска",РезПланФактОтпуска);
			
		Исключение
			Сообщить("Ошибка выполнения запроса к ИБ Приемник: " + ОписаниеОшибки());
		КонецПопытки;

		//Отсутствия
		Попытка
			ЗапросПриемникОтсутствия.УстановитьПараметр("СписокСНИЛС", пМассивСНИЛС);
			ЗапросПриемникОтсутствия.УстановитьПараметр("НачалоПериода",  пПараметрПериод.ДатаНачала);
			ЗапросПриемникОтсутствия.УстановитьПараметр("ОкончаниеПериода",  пПараметрПериод.ДатаОкончания);
			ЗапросПриемникОтсутствия.УстановитьПараметр("БезОтбора", пБезОтбора);
			
			РезОтсутствия = ЗапросПриемникОтсутствия.Выполнить().Выгрузить();
			
			НовТЗ = Новый ТаблицаЗначений;
			НовТЗ.Колонки.Добавить("СотрудникОтсутствия",пТипСтрока);
			НовТЗ.Колонки.Добавить("ПериодОтсутствия",пТипДата);
			НовТЗ.Колонки.Добавить("ДействуетДоОтсутствия",пТипДата);
			НовТЗ.Колонки.Добавить("СостояниеОтсутствия",пТипСтрока);
			НовТЗ.Колонки.Добавить("ОкончаниеПредположительноОтсутствия",пТипДата);
			НовТЗ.Колонки.Добавить("ОрганизацияОтсутствия",пТипДата);

			
			РезОтсутствия = ПоправитьТаблицу(ДругаяБаза, РезОтсутствия,,НовТЗ);
			ВнешнийНаборДанных.Вставить("Отсутствия",РезОтсутствия);
			
			ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных; 
			ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, ВнешнийНаборДанных, ДанныеРасшифровки); 
			
			ДокументРезультат.Очистить();
			
		 	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент; 
			ПроцессорВывода.УстановитьДокумент(ДокументРезультат); 
			ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);

		Исключение
			Сообщить("Ошибка выполнения запроса к ИБ Приемник: " + ОписаниеОшибки());
		КонецПопытки;
			
		
		//РезПриемник = ПоправитьТаблицу(ДругаяБаза, РезПриемник);

	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
КонецПроцедуры


Функция ПоправитьТаблицу(БазаБП, Знач вхТЗ, типТЗ = "",НовТЗ)
	
	//НовТЗ = Новый ТаблицаЗначений;
	//пТипСтрока = Новый ОписаниеТипов("Строка");
	//пТипДата = Новый ОписаниеТипов("Дата");
	//пТипЧисло = Новый ОписаниеТипов("Число");
	//пТипБулево = Новый ОписаниеТипов("Булево"); 
	//НовТЗ.Колонки.Добавить("Сотрудник",пТипСтрока);
	//НовТЗ.Колонки.Добавить("ДнейЕжегодно",пТипЧисло);
	//НовТЗ.Колонки.Добавить("ВидОтпуска",пТипСтрока);
	//НовТЗ.Колонки.Добавить("РабочийГодДатаНачала",пТипДата);
	//НовТЗ.Колонки.Добавить("РабочийГодДатаОкончания",пТипДата);
	//НовТЗ.Колонки.Добавить("Дни",пТипЧисло);
	//НовТЗ.Колонки.Добавить("Часы",пТипЧисло);
	//НовТЗ.Колонки.Добавить("ТабельныйНомер",пТипСтрока);
	//НовТЗ.Колонки.Добавить("Организация",пТипСтрока);
	//НовТЗ.Колонки.Добавить("Подразделение",пТипСтрока);
	//НовТЗ.Колонки.Добавить("Должность",пТипСтрока);
	//НовТЗ.Колонки.Добавить("ДатаУвольнения",пТипДата);
	Для каждого стрТЗ из вхТЗ Цикл
		НовСтр = НовТЗ.Добавить();
		Для каждого Кол Из вхТЗ.Колонки Цикл
			СтрТипЗначенияКолонки = СокрЛП(ТипЗнч(стрТЗ[Кол.Имя]));
			
			Если Найти(ВРег(Кол.Имя), "ДАТА") > 0 Тогда НовСтр[Кол.Имя] = стрТЗ[Кол.Имя];
			ИначеЕсли ВРег(Кол.Имя) = "СУММА" Тогда НовСтр[Кол.Имя] = Число(Формат(стрТЗ[Кол.Имя], "ЧДЦ=2; ЧН=; ЧГ=0"));
			ИначеЕсли ВРег(Кол.Имя) = "КОЛИЧЕСТВО" Тогда НовСтр[Кол.Имя] = Число(Формат(стрТЗ[Кол.Имя], "ЧДЦ=3; ЧН=; ЧГ=0"));
				
			ИначеЕсли СтрТипЗначенияКолонки = "Число" Тогда
			    НовСтр[Кол.Имя] = Окр(СтрТЗ[Кол.Имя], 6);
			ИначеЕсли СтрТипЗначенияКолонки = "Строка" Или СтрТипЗначенияКолонки = "Булево" Или СтрТипЗначенияКолонки = "Дата" Тогда
				НовСтр[Кол.Имя] = СтрТЗ[Кол.Имя];
			Иначе НовСтр[Кол.Имя] = СокрЛП(стрТЗ[Кол.Имя]);
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Возврат НовТЗ;
	
КонецФункции


Функция Подключиться()
	//Объект.ПрямаяВыгрузка = Истина;
	
	База1 = "";

	Рез = glOLEApp81Init(База1,,"SRV1C8b","HRM3", Пользователи.НайтиПоИмени("ОБМЕН"), "Fynbk378");
	Если Рез <> "" Тогда
		Сообщить(Рез);
		Возврат "Ошибка подключения к " + ДругаяБаза + ":" + СокрЛП(Рез);
	Иначе
		//Сообщить("Подключение успешно установлено.");
	КонецЕсли;
		
	
	Возврат "";
	
КонецФункции

//--- OLE81
Функция glOLEApp81Init(V81,pFile="",pSrvr="",pRef="",pUser="",pPassword="") Экспорт
	
	Перем Стр;
	Перем Соеденение;
	
	//V81 = Новый COMОбъект("V82.Application");
	db = Новый COMОбъект("V83.ComConnector");

	
	Если pFile = "" Тогда
		Стр = "Srvr="""+pSrvr+""";Ref="""+pRef+"""";
	Иначе 
		Стр = "File="""+pFile+"""";
	КонецЕсли;
	
	Если Не ПустаяСтрока(pUser) Тогда
		Стр = Стр + ";usr=""" + pUser + """";
	КонецЕсли;
	Если Не ПустаяСтрока(pPassword) Тогда
		Стр = Стр + ";pwd=" + pPassword;
	КонецЕсли;
	
	Попытка 
		ДругаяБаза = db.Connect(Стр); //Соеденение
	Исключение
		Возврат ОписаниеОшибки();
	КонецПопытки;
	
	Возврат "";
	
КонецФункции


