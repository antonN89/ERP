
&Вместо("ПроверитьДоступКОбъекту")
Процедура Рин1_ПроверитьДоступКОбъекту(Источник, ПередЗаписью, ЭтоПолноправныйПользователь, ИдентификаторТранзакции, ПараметрыОграничения, ПараметрыОграниченияДополнительные)
	
	//bercut171219
	Если ТипЗнч(Источник) = тип("Задачаобъект.ЗадачаИсполнителя") и не СтрНайти(Источник.Наименование,"Расхождение цен в") = 0 Тогда
		Возврат; // Доступ разрешен.
	КонецЕсли;	
	//
	
	ЭтоНовый = Не Источник.ДополнительныеСвойства.Свойство(
	"УправлениеДоступомЗначенияПолейДляПроверкиИзмененияПриЗаписи");
	
	УстановитьОтключениеБезопасногоРежима(Истина);
	УстановитьПривилегированныйРежим(Истина);
	
	Если Не ПередЗаписью Тогда
		КлючДоступаОбновлен = Ложь;
		
		ОбновитьКлючДоступаОбъектаПриЗаписи(Источник, ЭтоНовый, ИдентификаторТранзакции,
		ПараметрыОграничения, КлючДоступаОбновлен);
		
		ОбновитьКлючДоступаОбъектаПриЗаписи(Источник, ЭтоНовый, ИдентификаторТранзакции,
		ПараметрыОграниченияДополнительные);
		
		Если Не КлючДоступаОбновлен Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если ПараметрыОграничения.ОграничениеОтключено Или ЭтоПолноправныйПользователь Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = ПараметрыОграничения.ТекстЗапросаПроверкиПравЧтениеИзменение;
	
	ПроверкаДобавления = Ложь;
	Если Не ПередЗаписью Тогда
		УточнитьПравоДобавление(Запрос, ЭтоНовый, ПараметрыОграничения, ПроверкаДобавления);
	КонецЕсли;
	
	ОбновитьРазрешенныеНаборыВПараметрахСеанса();
	
	Запрос.УстановитьПараметр("Объект", Источник.Ссылка);
	УстановитьРазрешенныеНаборыВПараметрыЗапроса(Запрос);
	
	Если ПараметрыОграничения.ПолеВладельца <> Неопределено Тогда
		Запрос.УстановитьПараметр("ИдентификаторТаблицыНастроекПрав",
		ПараметрыОграничения.ИдентификаторТаблицыНастроекПрав);
	КонецЕсли;
	
	Если Не РезультатЗапросаПроверкиДоступа(Запрос, Источник).Пустой() Тогда
		Возврат; // Доступ разрешен.
	КонецЕсли;
	
	Если ПроверкаДобавления Тогда
		Запрос.Текст = ПараметрыОграничения.ТекстЗапросаПроверкиПравЧтениеИзменение;
		ПравоИзменения = Не Запрос.Выполнить().Пустой();
	Иначе
		ПравоИзменения = Ложь;
	КонецЕсли;
	
	Если ПараметрыОграничения.ОграничениеЧтенияОтключено Тогда
		ПравоЧтения = Истина;
	Иначе
		Запрос.Текст = ПараметрыОграничения.ТекстЗапросаПроверкиПраваЧтение;
		ПравоЧтения = Не Запрос.Выполнить().Пустой();
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Ложь);
	УстановитьОтключениеБезопасногоРежима(Ложь);
	
	Данные = ?(ПередЗаписью, Источник.Ссылка, Источник);
	СообщитьОбОшибкеДоступа(Данные, ПередЗаписью, ПравоЧтения, ПравоИзменения, ЭтоНовый);
	
КонецПроцедуры

&Вместо("КомбинацииЗначенийОпорныхПолей")
Функция Рин1_КомбинацииЗначенийОпорныхПолей(Источник, ОтборПоИзмерениям, ПараметрыОграничения)
	
	Поля = СтрСоединить(ПараметрыОграничения.ОпорныеПоля.Используемые, ",");
	Поля = УправлениеДоступомСлужебныйПовтИсп.ПоляВРегистреСимволовМетаданных(ПараметрыОграничения.Список, Поля);
	//bercut171219 - в регистре ДокументыФизическихЛиц, касяк изменение написано как "Физлицо"
	Если Поля = "ФизЛицо" Тогда
	   Поля = "Физлицо";
	КонецЕсли;	
	//
	
	КомбинацииЗначенийОпорныхПолей = Источник.Выгрузить(, Поля);
	КомбинацииЗначенийОпорныхПолей.Свернуть(Поля);
	
	ПоляОтбора = "";
	Для Каждого Поле Из ПараметрыОграничения.ОпорныеПоля.Используемые Цикл
		ПоляОтбора = ПоляОтбора + ?(ПоляОтбора = "", "", ", ") + "ТекущаяТаблица." + Поле;
	КонецЦикла;
	ОтборПоИзмерениям = "(" + ПоляОтбора + ") В (&КомбинацииЗначенийОпорныхПолей)";
	
	Возврат КомбинацииЗначенийОпорныхПолей;
	
КонецФункции
