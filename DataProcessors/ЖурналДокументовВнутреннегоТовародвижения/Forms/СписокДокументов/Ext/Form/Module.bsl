
// + [Rineco], [Киселев А.] [03.12.2021] [Log_Diff][№ 23295 ], [#Изменение статуса] 
&НаКлиенте
&Вместо("Подключаемый_УстановитьСтатус")
Процедура Рин1_Подключаемый_УстановитьСтатус(Команда)
	
	УстановитьСтатус(Команда.Имя, СоответствиеКомандСтатусам, Элементы.СписокДокументыВнутреннегоТовародвижения);
	
КонецПроцедуры

// + [Rineco], [Киселев А.] [03.12.2021] [Log_Diff][№ 23295 ], [#Изменение статуса] 
&НаКлиенте
Процедура УстановитьСтатус(ИмяКоманды, СоответствиеКомандСтатусам, Список)Экспорт 
	
	Отбор = Новый Структура();
	Отбор.Вставить("ИмяКоманды", ИмяКоманды);
	
	НайденныйСтатус = СоответствиеКомандСтатусам.НайтиСтроки(Отбор);
	
	Если НайденныйСтатус.Количество() > 0 Тогда
		
		СтрокаСтатуса = НайденныйСтатус[0];
				
		ВыделенныеСтроки = ВыбратьИзВыделенныхСтрокСпискаДокументыПоИмениМетаданных(СтрокаСтатуса.ДокументСтрока, Список);
		
		Если ВыделенныеСтроки.Количество() = 0 Тогда
			ПоказатьПредупреждение(, НСтр("ru = 'Не выделено ни одного документа, для которого можно установить выбранный статус';
											|en = 'No document for which the selected status can be set is selected'"));
			Возврат;
		КонецЕсли;
		
		ВыделенныеСтрокиСодержатОтгрузку = Ложь;
		ВыделенныеСтрокиСодержатНеТолькоОтгрузку = Ложь;
		Если СтрокаСтатуса.Статус = ПредопределенноеЗначение("Перечисление.СтатусыРеализацийТоваровУслуг.Отгружено") Тогда
			СтруктураСписка = ПродажиВызовСервера.СформироватьСтруктуруСпискаДокументов(ВыделенныеСтроки);
			ВыделенныеСтрокиСодержатОтгрузку = СтруктураСписка.ВыделенныеСтрокиСодержатОтгрузку;
			ВыделенныеСтрокиСодержатНеТолькоОтгрузку = СтруктураСписка.ВыделенныеСтрокиСодержатНеТолькоОтгрузку;
		КонецЕсли;
		
		Если ВыделенныеСтрокиСодержатОтгрузку Тогда
			ПараметрыФормы = Новый Структура();
			ПараметрыФормы.Вставить("ДатаПереходаПраваСобственности", ОбщегоНазначенияКлиент.ДатаСеанса());
			ПараметрыФормы.Вставить("ВыделенныеСтрокиСодержатНеТолькоОтгрузку", ВыделенныеСтрокиСодержатНеТолькоОтгрузку);
			
			СтруктураПараметров = Новый Структура;
			СтруктураПараметров.Вставить("ВыделенныеСтроки", ВыделенныеСтроки);
			СтруктураПараметров.Вставить("ОбрабатываемыйСписок", 	Список);
			СтруктураПараметров.Вставить("СтатусПредставление", 	СтрокаСтатуса.СтатусПредставление);
			СтруктураПараметров.Вставить("СтатусИмяЗначения", 		СтрокаСтатуса.СтатусИмяЗначения);
			
			ОткрытьФорму("Документ.РеализацияТоваровУслуг.Форма.ВопросОСменеСтатуса", 
				ПараметрыФормы,,,,,
				Новый ОписаниеОповещения("УстановитьСтатусРеализованоЗавершение", 
					ЭтотОбъект,
					СтруктураПараметров),
				РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
		Иначе
			ТекстВопроса = НСтр("ru = 'У выделенных в списке документов будет установлен статус ""%ПредставлениеСтатуса%"". Продолжить?';
								|en = 'Status of the documents selected in the list will be set to ""%ПредставлениеСтатуса%"". Continue?'");
			ТекстВопроса = СтрЗаменить(ТекстВопроса, "%ПредставлениеСтатуса%", СтрокаСтатуса.СтатусПредставление);
			
			Режим = Новый СписокЗначений;
			Режим.Добавить(КодВозвратаДиалога.Да,НСтр("ru = 'Установить';
														|en = 'Set'"));
			Режим.Добавить(КодВозвратаДиалога.Нет,НСтр("ru = 'Не устанавливать';
														|en = 'Do not set'"));
			
			ДопПараметры = Новый Структура;
			ДопПараметры.Вставить("ВыделенныеСтроки", 		ВыделенныеСтроки);
			ДопПараметры.Вставить("СтатусПредставление", 	СтрокаСтатуса.СтатусПредставление);
			ДопПараметры.Вставить("СтатусИмяЗначения", 		СтрокаСтатуса.СтатусИмяЗначения);
			ДопПараметры.Вставить("Список", 				Список);
			
			ПоказатьВопрос(Новый ОписаниеОповещения("УстановитьСтатусЗавершение", ЭтотОбъект, ДопПараметры), ТекстВопроса,Режим);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// + [Rineco], [Киселев А.] [03.12.2021] [Log_Diff][№ 23295 ], [#Изменение статуса] 
&НаКлиенте
Процедура УстановитьСтатусЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	ВыделенныеСтроки = ДополнительныеПараметры.ВыделенныеСтроки;
	СтатусПредставление = ДополнительныеПараметры.СтатусПредставление;
	СтатусИмяЗначения = ДополнительныеПараметры.СтатусИмяЗначения;
	Список = ДополнительныеПараметры.Список;
	
	Ответ = РезультатВопроса;
	
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьСтатусЗавершениеФрагмент(ВыделенныеСтроки, СтатусИмяЗначения, СтатусПредставление, Список);
	
КонецПроцедуры

// + [Rineco], [Киселев А.] [03.12.2021] [Log_Diff][№ 23295 ], [#Изменение статуса] 
&НаКлиенте
Процедура УстановитьСтатусЗавершениеФрагмент(Знач ВыделенныеСтроки, СтатусИмяЗначения, Знач СтатусПредставление, Знач Список, ДопПараметры = Неопределено)
	
	Перем КоличествоОбработанных;
	
	ОчиститьСообщения();
	КоличествоОбработанных = УстановитьСтатусДокументов(ВыделенныеСтроки, СтатусИмяЗначения, ДопПараметры);
	ОбщегоНазначенияУТКлиент.ОповеститьПользователяОбУстановкеСтатуса(Список, КоличествоОбработанных, ВыделенныеСтроки.Количество(), СтатусПредставление);

КонецПроцедуры

// + [Rineco], [Киселев А.] [03.12.2021] [Log_Diff][№ 23295 ], [#Изменение статуса] 
&НаКлиенте
Функция ВыбратьИзВыделенныхСтрокСпискаДокументыПоИмениМетаданных(ИмяДокумента, Список)
	
	ВыделенныеСтроки = Список.ВыделенныеСтроки;
	
	ПодходящиеДокументы = Новый Массив();
	
	Тип = Тип("ДокументСсылка." + ИмяДокумента);
	
	Для Каждого Строка Из ВыделенныеСтроки Цикл
		
		ДанныеСтроки = Список.ДанныеСтроки(Строка);
		
		Если ТипЗнч(ДанныеСтроки.Ссылка) = Тип Тогда
			ПодходящиеДокументы.Добавить(ДанныеСтроки.Ссылка);
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ПодходящиеДокументы;
	
КонецФункции

// + [Rineco], [Киселев А.] [03.12.2021] [Log_Diff][№ 23295 ], [#Изменение статуса] 
&НаСервере
Функция УстановитьСтатусДокументов(Знач МассивДокументов, Знач НовыйСтатус, Знач ДополнительныеПараметры=Неопределено) Экспорт
	
	// Получение шаблонов сообщений стандартных ошибок
	ШаблонОшибкиСтатусСовпадает   = НСтр("ru = 'Документу %Документ% уже присвоен статус ""%Статус%""';
										|en = 'The ""%Статус%"" status has already been assigned to the %Документ% document'");
	ШаблонОшибкиНеПроведен        = НСтр("ru = 'Документ %Документ% не проведен. Невозможно изменить статус';
										|en = 'Document %Документ% is not posted. Cannot change the status'");
	ШаблонОшибкиПомеченНаУдаление = НСтр("ru = 'Документ %Документ% помечен на удаление. Невозможно изменить статус';
										|en = 'Document %Документ% is marked for deletion. Cannot change the status'");
	ШаблонОшибкиЗаблокировать     = НСтр("ru = 'Не удалось заблокировать %Документ%. %ОписаниеОшибки%';
										|en = 'Failed to lock %Документ%. %ОписаниеОшибки%'");
	ШаблонОшибкиЗаписать          = НСтр("ru = 'Не удалось записать %Документ%. %ОписаниеОшибки%';
										|en = 'Failed to save %Документ%. %ОписаниеОшибки%'");
	
	// Получение исключаемых типов
	МассивИсключаемыхТипов = Новый Массив;
	Если ДополнительныеПараметры <> Неопределено 
		И ДополнительныеПараметры.Свойство("ИсключаемыеТипы") Тогда
		
		МассивИсключаемыхТипов = ДополнительныеПараметры.ИсключаемыеТипы;
		
	КонецЕсли;
	
	// Получение соответствие типов документов из массива документов разных типов
	СоответствиеТипов = ОбщегоНазначенияУТ.РазложитьМассивСсылокПоТипам(МассивДокументов);
	
	КоличествоОбработанных = 0;
	Для Каждого СоставДокументов Из СоответствиеТипов Цикл
		
		// Пропуск документов исключаемого типа
		Если МассивИсключаемыхТипов.Найти(СоставДокументов.Ключ) <> Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		// Получение менеджера документов данного типа
		МенеджерДокументов = Документы[Метаданные.НайтиПоТипу(СоставДокументов.Ключ).Имя];
		
		// Получение массива ссылок документов данного типа
		МассивСсылок = СоставДокументов.Значение;
		
		// Формирование запроса
		Запрос = МенеджерДокументов.СформироватьЗапросПроверкиПриСменеСтатуса(МассивСсылок, НовыйСтатус, ДополнительныеПараметры);
		УстановитьПривилегированныйРежим(Истина);
		Результат = Запрос.Выполнить();
		УстановитьПривилегированныйРежим(Ложь);
		Если Результат.Пустой() Тогда
			Возврат 0;
		КонецЕсли;
		
		// Цикл обхода выборки
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			// Универсальные проверки
			Если Выборка.ПометкаУдаления Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтрЗаменить(ШаблонОшибкиПомеченНаУдаление, "%Документ%", Выборка.Представление), Выборка.Ссылка);
				Продолжить;
			КонецЕсли;

			Если Не Выборка.Проведен Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтрЗаменить(ШаблонОшибкиНеПроведен, "%Документ%", Выборка.Представление), Выборка.Ссылка);
				Продолжить;
			КонецЕсли;

			Если Выборка.СтатусСовпадает Тогда

				ТекстОшибки = СтрЗаменить(ШаблонОшибкиСтатусСовпадает, "%Документ%", Выборка.Представление);
				ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Статус%", Выборка.ПредставлениеНовогоСтатуса);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, Выборка.Ссылка);
				Продолжить;

			КонецЕсли;
			
			// Проверки уникальные для каждого из типов документов
			Если Не МенеджерДокументов.ПроверкаПередСменойСтатуса(Выборка, НовыйСтатус, ДополнительныеПараметры) Тогда
				Продолжить;
			КонецЕсли;
			
			// Захват объекта для редактирования
			Попытка
				ЗаблокироватьДанныеДляРедактирования(Выборка.Ссылка);
			Исключение
				ТекстОшибки = СтрЗаменить(ШаблонОшибкиЗаблокировать, "%Документ%", Выборка.Представление);
				ТекстОшибки = СтрЗаменить(ТекстОшибки, "%ОписаниеОшибки%", КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, Выборка.Ссылка);
				Продолжить;
			КонецПопытки;
			
			// Получение объекта документа
			Объект = Выборка.Ссылка.ПолучитьОбъект();
			
			// Установка статуса документа
			Если Не Объект.УстановитьСтатус(НовыйСтатус, ДополнительныеПараметры) Тогда
				Продолжить;
			КонецЕсли;
			
			// Запись документа
			Попытка
				Объект.ОбменДанными.Загрузка = Истина;
				Объект.Записать(?(Выборка.ЗаписьПроведением, РежимЗаписиДокумента.Запись, РежимЗаписиДокумента.Запись));
				КоличествоОбработанных = КоличествоОбработанных + 1;
				
			Исключение
				ТекстОшибки = СтрЗаменить(ШаблонОшибкиЗаписать, "%Документ%", Выборка.Представление);
				ТекстОшибки = СтрЗаменить(ТекстОшибки, "%ОписаниеОшибки%", КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, Выборка.Ссылка);
			КонецПопытки
			
		КонецЦикла; // выборки документов данного типа
		
	КонецЦикла; // обхода соответствия типов
	
	Возврат КоличествоОбработанных;
	
КонецФункции 

