
&Вместо("ГИГ_ПолучитьТаблицуДоступныхСхемОбеспечения")
Функция Рин1_ГИГ_ПолучитьТаблицуДоступныхСхемОбеспечения(Склады)
	
	ТаблицаСхем = Новый ТаблицаЗначений;
	ТаблицаСхем.Колонки.Добавить("Склад",Новый ОписаниеТипов("СправочникСсылка.Склады"));
	ТипыИсточника = Новый Массив;
	ТипыИсточника.Добавить(Тип("СправочникСсылка.Склады"));
	ТипыИсточника.Добавить(Тип("СправочникСсылка.ГИГ_СкладыПоставщиков"));
	ТаблицаСхем.Колонки.Добавить("СкладИсточник",Новый ОписаниеТипов(ТипыИсточника));
	ТаблицаСхем.Колонки.Добавить("СхемаОбеспечения",Новый ОписаниеТипов("СправочникСсылка.СхемыОбеспечения"));
	ТаблицаСхем.Колонки.Добавить("СрокОбеспеченияМин",Новый ОписаниеТипов("Число"));
	ТаблицаСхем.Колонки.Добавить("СрокОбеспеченияМакс",Новый ОписаниеТипов("Число"));
	//bercut260619
	ТаблицаСхем.Колонки.Добавить("ЭтоПроизводство",Новый ОписаниеТипов("Булево"));
	//
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СхемыОбеспечения.СхемаОбеспечения КАК СхемаОбеспечения,
	|	СхемыОбеспечения.Склад КАК Склад,
	|	СхемыОбеспечения.СпособОбеспеченияПотребностей КАК СпособОбеспеченияПотребностей
	|ПОМЕСТИТЬ ВТ1
	|ИЗ
	|	Справочник.Склады КАК Склады
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СхемыОбеспечения КАК СхемыОбеспечения
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СхемыОбеспечения КАК ТранзитныеСхемы
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Склады КАК СкладыИсточник
	|				ПО ТранзитныеСхемы.СпособОбеспеченияПотребностей.ИсточникОбеспеченияПотребностей = СкладыИсточник.Ссылка
	|					И (СкладыИсточник.Ссылка В (&Склады))
	|			ПО СхемыОбеспечения.СхемаОбеспечения = ТранзитныеСхемы.СхемаОбеспечения
	|				И (ВЫРАЗИТЬ(ТранзитныеСхемы.Склад КАК Справочник.Склады).ЦеховаяКладовая = ЛОЖЬ)
	|		ПО Склады.Ссылка = СхемыОбеспечения.Склад
	|			И (Склады.Ссылка В (&Склады))
	|			И (НЕ СхемыОбеспечения.СхемаОбеспечения.ПометкаУдаления)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ1.СхемаОбеспечения КАК СхемаОбеспечения,
	|	СхемыОбеспечения.СпособОбеспеченияПотребностей КАК СпособОбеспеченияПотребностей,
	|	СхемыОбеспечения.Склад КАК СкладПолучатель,
	|	СхемыОбеспечения.СпособОбеспеченияПотребностей.ИсточникОбеспеченияПотребностей КАК Источник,
	|	СхемыОбеспечения.СпособОбеспеченияПотребностей.СрокИсполненияЗаказа КАК СрокОбеспеченияМин,
	|	СхемыОбеспечения.СпособОбеспеченияПотребностей.ГарантированныйСрокОтгрузки КАК СрокОбеспеченияМакс,
	|	ВТ1.Склад КАК СкладПотребности,
	|	СхемыОбеспечения.СпособОбеспеченияПотребностей.ТипОбеспечения КАК ТипОбеспечения
	|ИЗ
	|	ВТ1 КАК ВТ1
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СхемыОбеспечения КАК СхемыОбеспечения
	|		ПО ВТ1.СхемаОбеспечения = СхемыОбеспечения.СхемаОбеспечения
	|ИТОГИ
	|	МАКСИМУМ(СкладПотребности)
	|ПО
	|	СхемаОбеспечения";
	
	Запрос.УстановитьПараметр("Склады",Склады);
	Результат = Запрос.Выполнить();
	
	ВыборкаСхемы = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаСхемы.Следующий() Цикл
		
		СтруктураСхемы = ТаблицаСхем.Добавить(); 
		СтруктураСхемы.Склад = ВыборкаСхемы.СкладПотребности;
		СтруктураСхемы.СхемаОбеспечения = ВыборкаСхемы.СхемаОбеспечения;
		СтруктураСхемы.СрокОбеспеченияМин = 0;
		СтруктураСхемы.СрокОбеспеченияМакс = 0;
		
		
		СхемаРасчитана = Ложь;
		СкладЭтапа = ВыборкаСхемы.СкладПотребности; 
		ВыборкаЭтапы = ВыборкаСхемы.Выбрать();
		
		Пока ВыборкаЭтапы.НайтиСледующий(СкладЭтапа,"СкладПолучатель") Цикл
			
			СтруктураСхемы.СрокОбеспеченияМин = СтруктураСхемы.СрокОбеспеченияМин + ВыборкаЭтапы.СрокОбеспеченияМин; 
			СтруктураСхемы.СрокОбеспеченияМакс = СтруктураСхемы.СрокОбеспеченияМакс + ВыборкаЭтапы.СрокОбеспеченияМакс; 
			
			Источник =ВыборкаЭтапы.Источник;
			
			Если ВыборкаЭтапы.ТипОбеспечения = Перечисления.ТипыОбеспечения.Перемещение Тогда
				СкладЭтапа = Источник;
				СтруктураСхемы.СкладИсточник = Источник;
			ИначеЕсли ВыборкаЭтапы.ТипОбеспечения = Перечисления.ТипыОбеспечения.Покупка Тогда 
				СкладЭтапа = Неопределено;
				СтруктураСхемы.СкладИсточник = ВыборкаЭтапы.СхемаОбеспечения.ГИГ_СкладПоставщика;
				
				//bercut260619
			ИначеЕсли ВыборкаЭтапы.ТипОбеспечения = Перечисления.ТипыОбеспечения.Производство Тогда 
				СкладЭтапа = Неопределено;
				СтруктураСхемы.СкладИсточник = ВыборкаЭтапы.СхемаОбеспечения.ГИГ_СкладПоставщика;
				СтруктураСхемы.ЭтоПроизводство = Истина;
				//
				
			Иначе
				СкладЭтапа = Неопределено;
				СтруктураСхемы.СкладИсточник = Неопределено;
			КонецЕсли;
			ВыборкаЭтапы.Сбросить();
		КонецЦикла;
	КонецЦикла;
	
	Возврат ТаблицаСхем;
	
КонецФункции

&Вместо("ГИГ_УстановитьТекстыЗапросовСписковФормыПодбора")
Процедура Рин1_ГИГ_УстановитьТекстыЗапросовСписковФормыПодбора(Форма)
	
	ЭтоФормаПодбораВДокументыЗакупки = ПодборТоваровКлиентСервер.ЭтоФормаПодбораВДокументыЗакупки(Форма);
	
	Форма.СписокНоменклатура.ТекстЗапроса = ГИГ_ТекстЗапросаСпискаФормыПодбора(Форма, "СписокНоменклатура");
	
	Если Форма.ИспользоватьХарактеристикиНоменклатуры Тогда
		Форма.СписокХарактеристики.ТекстЗапроса = ТекстЗапросаСпискаФормыПодбора(Форма, "СписокХарактеристики");
	КонецЕсли;
	
	//bercut121119 после переключения "варианта навигации на форме подбора"  параметры теряются- нужно восстанавливать
	СписокНоменклатура = Форма.СписокНоменклатура;
	СписокХарактеристики = Форма.СписокХарактеристики;
	
	Если Форма.ИмяФормы = "Обработка.ГИГ_ПодборТоваровВДокументПродажи.Форма.Форма" Тогда 
		
		Если Форма.РежимОтбораПоАссортименту Тогда
			ПодборТоваровКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокНоменклатура, "ОбъектПланирования", Форма.ОбъектПланированияАссортимента);
			ПодборТоваровКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокХарактеристики, "ОбъектПланирования", Форма.ОбъектПланированияАссортимента);
		КонецЕсли;
		ПодборТоваровКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокНоменклатура, "СегментНоменклатуры", Форма.СегментНоменклатуры, ЗначениеЗаполнено(Форма.СегментНоменклатуры));
		Если Форма.ИспользоватьСоглашенияСКлиентами
			И Не Форма.РежимПодбораБезСоглашенийСКлиентами Тогда
			ПодборТоваровКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокНоменклатура, "Соглашение", Форма.Соглашение);
		КонецЕсли;
		
		МассивСкидки = Новый Массив;
		Для Каждого Стр из Форма.ПримененнаяСкидка цикл
			МассивСкидки.Добавить(Стр.Значение);
		КонецЦикла;	
		ПодборТоваровКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокНоменклатура, "СписокСкидок", МассивСкидки);
		
		ПодборТоваровКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокНоменклатура, "Валюта", Форма.Валюта);
		ПодборТоваровКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокНоменклатура, "Дата", ТекущаяДата());//Форма.Дата);
		
		Если Форма.ВидыЦен.Количество() = 0 Тогда
			ВидыЦенПараметр = Справочники.ВидыЦен.ПустаяСсылка();
		ИначеЕсли Форма.ВидыЦен.Количество() = 1 Тогда
			ВидыЦенПараметр = Форма.ВидыЦен[0].Значение;
		Иначе
			ВидыЦенПараметр = Форма.ВидыЦен.ВыгрузитьЗначения();
		КонецЕсли;
		
		ПодборТоваровКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокНоменклатура, "ВидыЦен", ВидыЦенПараметр);
		ПодборТоваровКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокНоменклатура, "Назначение", Форма.ОтборПоНазначению);
		
		Если Форма.ИспользоватьХарактеристикиНоменклатуры Тогда
			
			ПодборТоваровКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокХарактеристики, "Номенклатура", Справочники.Номенклатура.ПустаяСсылка());
			ПодборТоваровКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокХарактеристики, "СегментНоменклатуры", Справочники.СегментыНоменклатуры.ПустаяСсылка());
			ПодборТоваровКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокХарактеристики, "НоменклатураСегмента", Справочники.Номенклатура.ПустаяСсылка());
			ПодборТоваровКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокХарактеристики, "ЕдиницаИзмерения", Справочники.УпаковкиЕдиницыИзмерения.ПустаяСсылка());
			ПодборТоваровКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокХарактеристики, "ВладелецХарактеристик", Справочники.Номенклатура.ПустаяСсылка());
			Если Форма.ИспользоватьСоглашенияСКлиентами
				И Не Форма.РежимПодбораБезСоглашенийСКлиентами Тогда
				ПодборТоваровКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокХарактеристики, "Соглашение", Форма.Соглашение);
			КонецЕсли;
			ПодборТоваровКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокХарактеристики, "Валюта", Форма.Валюта);
			ПодборТоваровКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокХарактеристики, "Дата", ТекущаяДата());//Форма.Дата);
			ПодборТоваровКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокХарактеристики, "ВидыЦен", ВидыЦенПараметр);
			ПодборТоваровКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокХарактеристики, "ТипНоменклатуры", Перечисления.ТипыНоменклатуры.ПустаяСсылка());
			ПодборТоваровКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокХарактеристики, "ВидНоменклатуры", Справочники.ВидыНоменклатуры.ПустаяСсылка());
			ПодборТоваровКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокХарактеристики, "ЦеноваяГруппа", Справочники.ЦеновыеГруппы.ПустаяСсылка());
			ПодборТоваровКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокХарактеристики, "Назначение", Форма.ОтборПоНазначению);
			
		КонецЕсли;
		
		Если Не ПраваПользователяПовтИсп.ЭтоПартнер() Тогда
			
			Если Форма.Склады.Количество() = 0 Тогда
				СкладПараметр = Справочники.Склады.ПустаяСсылка();
			ИначеЕсли Форма.Склады.Количество() = 1 Тогда
				СкладПараметр = Форма.Склады[0].Значение;
			Иначе
				СкладПараметр = Форма.Склады.ВыгрузитьЗначения();
			КонецЕсли;
			
			ПодборТоваровКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокНоменклатура, "Склад", СкладПараметр);
			
			Если Форма.ИспользоватьХарактеристикиНоменклатуры Тогда
				ПодборТоваровКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокХарактеристики, "Склад", СкладПараметр);
			КонецЕсли;
			
		КонецЕсли;	
	КонецЕсли;
	//	
	
	Если ЭтоФормаПодбораВДокументыЗакупки И Форма.ИспользоватьНоменклатуруПоставщиков Тогда
		Форма.СписокНоменклатураПоставщика.ТекстЗапроса = ТекстЗапросаСпискаФормыПодбора(Форма, "СписокНоменклатураПоставщика");
	КонецЕсли;
	
КонецПроцедуры

//20200811 ГлазуновДВ Изменили формулы
&Вместо("ОбработатьДанныеЦен")
Процедура Рин1_ОбработатьДанныеЦен(ТаблицаЦенНоменклатуры, ДатаНачалаДействияТарифа, ЗагружатьТолькоИзмененныеЦены, ИмяДействия)
	// Вставить содержимое метода.
//	ПродолжитьВызов(ТаблицаЦенНоменклатуры, ДатаНачалаДействияТарифа, ЗагружатьТолькоИзмененныеЦены, ИмяДействия);
	Если ЗагружатьТолькоИзмененныеЦены = Истина тогда
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ТаблицаИсточник", ТаблицаЦенНоменклатуры);
		Запрос.УстановитьПараметр("ДатаПредущая", НачалоДня(ДатаНачалаДействияТарифа) - 1);
		Запрос.УстановитьПараметр("ПризнакИзменения", Истина);
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТзИсточник.НоменклатураПроизводителя КАК НоменклатураПроизводителя,
		|	ЕСТЬNULL(ТзИсточник.ТарифБезНДС, 0) КАК ТарифБезНДС,
		|	ЕСТЬNULL(ТзИсточник.ТарифСНДС, 0) КАК ТарифСНДС,
		|	ЕСТЬNULL(ТзИсточник.МРЦСНДС, 0) КАК МРЦСНДС,
		|	ТзИсточник.Период,
		|	ТзИсточник.ДатаЗагрузки,
		|	ТзИсточник.ДатаТарифа,
		|	ЕСТЬNULL(ТзИсточник.МРЦБезНДС, 0) КАК МРЦБезНДС,
		|	ТзИсточник.ВалютаТарифа,
		|	ТзИсточник.ТарифБезНДССоздан,
		|	ТзИсточник.ТарифСНДССоздан,
		|	ТзИсточник.ТарифМРЦСНДССоздан,
		|	ТзИсточник.ТарифМРЦБезНДССоздан
		|ПОМЕСТИТЬ ВТ_Источник
		|ИЗ
		|	&ТаблицаИсточник КАК ТзИсточник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТЗИсточник.НоменклатураПроизводителя КАК НоменклатураПроизводителя,
		|	ЕСТЬNULL(ТЗИсточник.ТарифБезНДС, 0) КАК ТарифБезНДС,
		|	ЕСТЬNULL(ТЗИсточник.ТарифСНДС, 0) КАК ТарифСНДС,
		|	ЕСТЬNULL(ТЗИсточник.МРЦСНДС, 0) КАК МРЦСНДС,
		|	ТЗИсточник.Период,
		|	ТЗИсточник.ДатаЗагрузки,
		|	ТЗИсточник.ДатаТарифа,
		|	ЕСТЬNULL(ТЗИсточник.МРЦБезНДС, 0) КАК МРЦБезНДС,
		|	ЕСТЬNULL(ГИГ_ЦеныНоменклатурыПроизводителейСрезПоследних.ТарифБезНДС, 0) КАК ТарифБезНДСПредыдущий,
		|	ЕСТЬNULL(ГИГ_ЦеныНоменклатурыПроизводителейСрезПоследних.ТарифСНДС, 0) КАК ТарифСНДСПредыдущий,
		|	ЕСТЬNULL(ГИГ_ЦеныНоменклатурыПроизводителейСрезПоследних.МРЦСНДС, 0) КАК МРЦСНДСПредыдущий,
		|	ЕСТЬNULL(ГИГ_ЦеныНоменклатурыПроизводителейСрезПоследних.МРЦБезНДС, 0) КАК МРЦБезНДСПредыдущий,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ГИГ_ЦеныНоменклатурыПроизводителейСрезПоследних.ТарифБезНДС, 0) <> ЕСТЬNULL(ТЗИсточник.ТарифБезНДС, 0)
		|				ИЛИ ЕСТЬNULL(ГИГ_ЦеныНоменклатурыПроизводителейСрезПоследних.ТарифСНДС, 0) <> ЕСТЬNULL(ТЗИсточник.ТарифСНДС, 0)
		|				ИЛИ ЕСТЬNULL(ГИГ_ЦеныНоменклатурыПроизводителейСрезПоследних.МРЦСНДС, 0) <> ЕСТЬNULL(ТЗИсточник.МРЦСНДС, 0)
		|				ИЛИ ЕСТЬNULL(ГИГ_ЦеныНоменклатурыПроизводителейСрезПоследних.МРЦБезНДС, 0) <> ЕСТЬNULL(ТЗИсточник.МРЦБезНДС, 0)
		|				ИЛИ ГИГ_ЦеныНоменклатурыПроизводителейСрезПоследних.ВалютаТарифа <> ТЗИсточник.ВалютаТарифа
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ПризнакИзменения,
		|	ТЗИсточник.ВалютаТарифа,
		|	ТЗИсточник.ТарифБезНДССоздан,
		|	ТЗИсточник.ТарифСНДССоздан,
		|	ТЗИсточник.ТарифМРЦСНДССоздан,
		|	ТЗИсточник.ТарифМРЦБезНДССоздан
		|ПОМЕСТИТЬ ВТ_ДанныеАктуальныхИзменений
		|ИЗ
		|	ВТ_Источник КАК ТЗИсточник
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГИГ_ЦеныНоменклатурыПроизводителей.СрезПоследних(&ДатаПредущая, ) КАК ГИГ_ЦеныНоменклатурыПроизводителейСрезПоследних
		|		ПО ТЗИсточник.НоменклатураПроизводителя = ГИГ_ЦеныНоменклатурыПроизводителейСрезПоследних.НоменклатураПроизводителя
		|			И ТЗИсточник.ВалютаТарифа = ГИГ_ЦеныНоменклатурыПроизводителейСрезПоследних.ВалютаТарифа
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ДанныеАктуальныхИзменений.НоменклатураПроизводителя,
		|	ВТ_ДанныеАктуальныхИзменений.ВалютаТарифа,
		|	ВТ_ДанныеАктуальныхИзменений.Период,
		|	ВТ_ДанныеАктуальныхИзменений.ДатаЗагрузки,
		|	ВТ_ДанныеАктуальныхИзменений.ДатаТарифа,
		|	ВТ_ДанныеАктуальныхИзменений.ТарифБезНДС,
		|	ВТ_ДанныеАктуальныхИзменений.ТарифСНДС,
		|	ВТ_ДанныеАктуальныхИзменений.МРЦСНДС,
		|	ВТ_ДанныеАктуальныхИзменений.МРЦБезНДС,
		|	ВТ_ДанныеАктуальныхИзменений.ТарифБезНДССоздан,
		|	ВТ_ДанныеАктуальныхИзменений.ТарифСНДССоздан,
		|	ВТ_ДанныеАктуальныхИзменений.ТарифМРЦСНДССоздан,
		|	ВТ_ДанныеАктуальныхИзменений.ТарифМРЦБезНДССоздан
		|ИЗ
		|	ВТ_ДанныеАктуальныхИзменений КАК ВТ_ДанныеАктуальныхИзменений
		|ГДЕ
		|	ВТ_ДанныеАктуальныхИзменений.ПризнакИзменения = &ПризнакИзменения";
		
		ТаблицаДанныхКОбработке = Запрос.Выполнить().Выгрузить();
	Иначе
		ТаблицаДанныхКОбработке = ТаблицаЦенНоменклатуры;
	КонецЕсли;
	
	Если ИмяДействия = "ДобавитьЗаписьВРегистрЦены" тогда
		
		ОчиститьДублиЗаписейРегистра(ТаблицаДанныхКОбработке,ДатаНачалаДействияТарифа);
		
		НаборЗаписейИсторииЦен = РегистрыСведений.ГИГ_ЦеныНоменклатурыПроизводителей.СоздатьНаборЗаписей();
		НаборЗаписейИсторииЦен.Отбор.Период.Установить(ДатаНачалаДействияТарифа);
		НаборЗаписейИсторииЦен.Прочитать();
		НаборЗаписейИсторииЦен.Загрузить(ТаблицаДанныхКОбработке);
		НаборЗаписейИсторииЦен.Записать(Ложь);

	ИначеЕсли  ИмяДействия = "ДобавитьЗаписьВКорректировкуЦенНоменклатуры" Тогда
		Если ТаблицаДанныхКОбработке.Количество() <> 0 Тогда 
			
			ВидЦеныТарифаБезНДС = Константы.ГИГ_ОсновнойВидЦеныТарифаНоменклатуры.Получить();
			ВидЦеныТарифаСНДС   = Константы.ГИГ_ОсновнойВидЦеныТарифаНоменклатурыСНДС.Получить();
			ВидЦеныМРЦСНДС      = Константы.ГИГ_ОсновнойВидЦеныМРЦСНДС.Получить();
			ВидЦеныМРЦБезНДС    = Константы.ГИГ_ОсновнойВидЦеныМРЦБезНДС.Получить();
			
			ДокументУстановки = Документы.КорректировкаРегистров.СоздатьДокумент();
			ДокументУстановки.Дата = ДатаНачалаДействияТарифа;
			ДокументУстановки.Комментарий = "Обновление цен номенклатуры на дату: "+ДатаНачалаДействияТарифа;  
			СтрокаРегистра = ДокументУстановки.ТаблицаРегистров.Добавить();
			СтрокаРегистра.Имя = "ЦеныНоменклатуры";
			ДокументУстановки.Ответственный = Пользователи.ТекущийПользователь();
			ДокументУстановки.Записать(РежимЗаписиДокумента.Запись);
			ДокументУстановки.Движения.ЦеныНоменклатуры.Записывать = Истина;
			
			Для Каждого СтрокаТаблицы из  ТаблицаДанныхКОбработке цикл
				Номенклатура = СтрокаТаблицы.НоменклатураПроизводителя.Номенклатура;
				
				//bercut090120
				Упаковка = Справочники.УпаковкиЕдиницыИзмерения.ПустаяСсылка();
				Если СтрокаТаблицы.НоменклатураПроизводителя.КоэффициентЕдИзмТарифа > 1 Тогда
					Запрос = Новый Запрос;
					Запрос.Текст = 
					"ВЫБРАТЬ
					|	УпаковкиЕдиницыИзмерения.Владелец КАК Владелец,
					|	УпаковкиЕдиницыИзмерения.Ссылка КАК Ссылка,
					|	УпаковкиЕдиницыИзмерения.Числитель КАК Числитель
					|ИЗ
					|	Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиЕдиницыИзмерения
					|ГДЕ
					|	УпаковкиЕдиницыИзмерения.Владелец = &Владелец
				//{{20200716 ГлазуновДВ Изменил условия отбора	
					|	И УпаковкиЕдиницыИзмерения.ЕдиницаИзмерения = &ЕдиницаИзмерения
					|	И УпаковкиЕдиницыИзмерения.Числитель = &Числитель
					|	И УпаковкиЕдиницыИзмерения.Знаменатель = &Знаменатель";
				//}}20200716 ГлазуновДВ
//Отключил 20200716 ГлазуновДВ				|	И УпаковкиЕдиницыИзмерения.Родитель = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)";
					Запрос.УстановитьПараметр("Владелец", Номенклатура);
					Запрос.УстановитьПараметр("ЕдиницаИзмерения", СтрокаТаблицы.НоменклатураПроизводителя.ЕдиницаИзмеренияТарифа);
					Запрос.УстановитьПараметр("Числитель", СтрокаТаблицы.НоменклатураПроизводителя.КоэффициентЕдИзмТарифа);
					Запрос.УстановитьПараметр("Знаменатель", 1);
					
					РезультатЗапроса = Запрос.Выполнить();
					
					Если РезультатЗапроса.Пустой() Тогда
						Попытка
							НоваяУпаковка = Справочники.УпаковкиЕдиницыИзмерения.СоздатьЭлемент();
							НоваяУпаковка.Владелец = Номенклатура;
							НоваяУпаковка.ЕдиницаИзмерения = СтрокаТаблицы.НоменклатураПроизводителя.ЕдиницаИзмеренияТарифа; 
							НоваяУпаковка.Числитель = СтрокаТаблицы.НоменклатураПроизводителя.КоэффициентЕдИзмТарифа;
							НоваяУпаковка.Знаменатель = 1;
							НоваяУпаковка.ТипИзмеряемойВеличины = Перечисления.ТипыИзмеряемыхВеличин.Упаковка;
							НоваяУпаковка.ТипУпаковки = Перечисления.ТипыУпаковокНоменклатуры.Конечная;
							НоваяУпаковка.Наименование = Строка(СтрокаТаблицы.НоменклатураПроизводителя.ЕдиницаИзмеренияТарифа) + " (" + 
							СтрокаТаблицы.НоменклатураПроизводителя.КоэффициентЕдИзмТарифа + " " + Строка(Номенклатура.ЕдиницаИзмерения) + ")";
							НоваяУпаковка.Записать();
							Упаковка = НоваяУпаковка.Ссылка;
							Если не Номенклатура.ИспользоватьУпаковки Тогда
								ЭлементНоменклатуры = Номенклатура.ПолучитьОбъект();
								ЭлементНоменклатуры.ИспользоватьУпаковки = Истина;
								ЭлементНоменклатуры.НаборУпаковок = ПредопределенноеЗначение("Справочник.НаборыУпаковок.ИндивидуальныйДляНоменклатуры");
								ЭлементНоменклатуры.ПоставляетсяВМногооборотнойТаре   = Ложь;
								ЭлементНоменклатуры.НоменклатураМногооборотнаяТара    = Неопределено;
								ЭлементНоменклатуры.ХарактеристикаМногооборотнаяТара  = Неопределено;
								ЭлементНоменклатуры.Записать();	
							КонецЕсли;
						Исключение
						КонецПопытки;
					Иначе
						Упаковка = РезультатЗапроса.Выгрузить()[0].Ссылка;
					КонецЕсли;
				КонецЕсли;
				//
				
				Если СтрокаТаблицы.ТарифБезНДС > 0 или СтрокаТаблицы.ТарифСНДС > 0  или СтрокаТаблицы.МРЦСНДС > 0 или СтрокаТаблицы.МРЦБезНДС > 0 Тогда 
					
					Если СтрокаТаблицы.ТарифБезНДС > 0  Тогда
						Движение = ДокументУстановки.Движения.ЦеныНоменклатуры.Добавить();
						Движение.Активность   = Истина;
						Движение.Номенклатура = Номенклатура;
						Движение.ВидЦены      = ВидЦеныТарифаБезНДС;
						Движение.Период       = ДокументУстановки.Дата;
						Движение.Цена         = СтрокаТаблицы.ТарифБезНДС;
						Движение.Валюта       = СтрокаТаблицы.ВалютаТарифа;
						Движение.Регистратор  = ДокументУстановки.Ссылка;
						//bercut090120
						Движение.Цена = Движение.Цена / ?(СтрокаТаблицы.НоменклатураПроизводителя.КоличествоЕдиницВТарифе=0,1,СтрокаТаблицы.НоменклатураПроизводителя.КоличествоЕдиницВТарифе);
						Движение.Упаковка = Упаковка;
						//
					КонецЕсли;
					
					Если СтрокаТаблицы.МРЦБезНДС > 0  Тогда
						Движение = ДокументУстановки.Движения.ЦеныНоменклатуры.Добавить();
						Движение.Активность   = Истина;
						Движение.Номенклатура = Номенклатура;
						Движение.ВидЦены      = ВидЦеныМРЦБезНДС;
						Движение.Период       = ДокументУстановки.Дата;
						Движение.Цена         = СтрокаТаблицы.МРЦБезНДС;
						Движение.Валюта       = СтрокаТаблицы.ВалютаТарифа;
						Движение.Регистратор  = ДокументУстановки.Ссылка;
						//bercut090120
						Движение.Цена = Движение.Цена / ?(СтрокаТаблицы.НоменклатураПроизводителя.КоличествоЕдиницВТарифе=0,1,СтрокаТаблицы.НоменклатураПроизводителя.КоличествоЕдиницВТарифе);
						Движение.Упаковка = Упаковка;
						//
					КонецЕсли;
					
					Если СтрокаТаблицы.ТарифСНДС > 0 Тогда 
						Движение = ДокументУстановки.Движения.ЦеныНоменклатуры.Добавить();
						Движение.Активность   = Истина;
						Движение.Номенклатура = Номенклатура;
						Движение.ВидЦены      = ВидЦеныТарифаСНДС;
						Движение.Период       = ДокументУстановки.Дата;
						Движение.Цена         = СтрокаТаблицы.ТарифСНДС;
						Движение.Валюта       = СтрокаТаблицы.ВалютаТарифа;
						Движение.Регистратор  = ДокументУстановки.Ссылка;
						//bercut090120
						Движение.Цена = Движение.Цена / ?(СтрокаТаблицы.НоменклатураПроизводителя.КоличествоЕдиницВТарифе=0,1,СтрокаТаблицы.НоменклатураПроизводителя.КоличествоЕдиницВТарифе);
						Движение.Упаковка = Упаковка;
						//
					КонецЕсли;
					
					Если СтрокаТаблицы.МРЦСНДС > 0 Тогда 
						Движение = ДокументУстановки.Движения.ЦеныНоменклатуры.Добавить();
						Движение.Активность   = Истина;
						Движение.Номенклатура = Номенклатура;
						Движение.ВидЦены      = ВидЦеныМРЦСНДС;
						Движение.Период       = ДокументУстановки.Дата;
						Движение.Цена         = СтрокаТаблицы.МРЦСНДС;
						Движение.Валюта       = СтрокаТаблицы.ВалютаТарифа;
						Движение.Регистратор  = ДокументУстановки.Ссылка;
						//bercut090120
						Движение.Цена = Движение.Цена / ?(СтрокаТаблицы.НоменклатураПроизводителя.КоличествоЕдиницВТарифе=0,1,СтрокаТаблицы.НоменклатураПроизводителя.КоличествоЕдиницВТарифе);
						Движение.Упаковка = Упаковка;
						//
					КонецЕсли;
					
				//Исходное	ТекПроцентНДС = ЦенообразованиеКлиентСервер.ПолучитьСтавкуНДСЧислом(СтрокаТаблицы.НоменклатураПроизводителя.СтавкаНДС)*100;
				//{{20200716 ГлазуновДВ Исправили
					ТекПроцентНДС = ЦенообразованиеКлиентСервер.ПолучитьСтавкуНДСЧислом(СтрокаТаблицы.НоменклатураПроизводителя.СтавкаНДС);
				//}}20200716 ГлазуновДВ
					Если ТекПроцентНДС <> 0 Тогда 
						
						Если СтрокаТаблицы.ТарифБезНДС > 0 и СтрокаТаблицы.ТарифСНДС = 0 и СтрокаТаблицы.ТарифСНДССоздан = 0 Тогда 
							// расчитываем сумму с НДС
				//Исходное			СуммаКУстановке = Окр(СтрокаТаблицы.ТарифБезНДС+((СтрокаТаблицы.ТарифБезНДС * ТекПроцентНДС)/(100+ТекПроцентНДС)),2,1);
						//{{20200716 ГлазуновДВ Исправили
							СуммаКУстановке = Окр(СтрокаТаблицы.ТарифБезНДС + (СтрокаТаблицы.ТарифБезНДС * ТекПроцентНДС / 100),2,1);
						//}}20200716 ГлазуновДВ
							Движение = ДокументУстановки.Движения.ЦеныНоменклатуры.Добавить();
							Движение.Активность   = Истина;
							Движение.Номенклатура = Номенклатура;
							Движение.ВидЦены      = ВидЦеныТарифаСНДС;
							Движение.Период       = ДокументУстановки.Дата;
							Движение.Цена         = СуммаКУстановке;
							Движение.Валюта       = СтрокаТаблицы.ВалютаТарифа;
							Движение.Регистратор  = ДокументУстановки.Ссылка;
							//bercut090120
							Движение.Цена = Движение.Цена / ?(СтрокаТаблицы.НоменклатураПроизводителя.КоличествоЕдиницВТарифе=0,1,СтрокаТаблицы.НоменклатураПроизводителя.КоличествоЕдиницВТарифе);
							Движение.Упаковка = Упаковка;
							//
						КонецЕсли;
						
						Если СтрокаТаблицы.ТарифСНДС > 0 и СтрокаТаблицы.ТарифБезНДС = 0 и СтрокаТаблицы.ТарифБезНДССоздан = 0 Тогда 
							// расчитываем сумму без НДС
				//Исходное			СуммаКУстановке = Окр(СтрокаТаблицы.ТарифСНДС-((СтрокаТаблицы.ТарифСНДС * ТекПроцентНДС)/(100+ТекПроцентНДС)),2,1);
						//{{20200716 ГлазуновДВ Исправили
							СуммаКУстановке = Окр(СтрокаТаблицы.ТарифСНДС * 100 / (100 + ТекПроцентНДС),2,1);
						//}}20200716 ГлазуновДВ
							Движение = ДокументУстановки.Движения.ЦеныНоменклатуры.Добавить();
							Движение.Активность = Истина;
							Движение.Номенклатура = Номенклатура;
							Движение.ВидЦены      = ВидЦеныТарифаБезНДС;
							Движение.Период       = ДокументУстановки.Дата;
							Движение.Цена         = СуммаКУстановке;
							Движение.Валюта       = СтрокаТаблицы.ВалютаТарифа;
							Движение.Регистратор  = ДокументУстановки.Ссылка;
							//bercut090120
							Движение.Цена = Движение.Цена / ?(СтрокаТаблицы.НоменклатураПроизводителя.КоличествоЕдиницВТарифе=0,1,СтрокаТаблицы.НоменклатураПроизводителя.КоличествоЕдиницВТарифе);
							Движение.Упаковка = Упаковка;
							//
						КонецЕсли;
						
						Если СтрокаТаблицы.МРЦБезНДС > 0 и СтрокаТаблицы.МРЦСНДС = 0 и СтрокаТаблицы.ТарифМРЦСНДССоздан = 0 Тогда 
							// расчитываем сумму с НДС
				//Исходное			СуммаКУстановке = Окр(СтрокаТаблицы.МРЦБезНДС+((СтрокаТаблицы.МРЦБезНДС * ТекПроцентНДС)/(100+ТекПроцентНДС)),2,1);
						//{{20200716 ГлазуновДВ Исправили
							СуммаКУстановке = Окр(СтрокаТаблицы.МРЦБезНДС + (СтрокаТаблицы.МРЦБезНДС * ТекПроцентНДС / 100),2,1);
						//}}20200716 ГлазуновДВ
							Движение = ДокументУстановки.Движения.ЦеныНоменклатуры.Добавить();
							Движение.Активность   = Истина;
							Движение.Номенклатура = Номенклатура;
							Движение.ВидЦены      = ВидЦеныМРЦСНДС;
							Движение.Период       = ДокументУстановки.Дата;
							Движение.Цена         = СуммаКУстановке;
							Движение.Валюта       = СтрокаТаблицы.ВалютаТарифа;
							Движение.Регистратор  = ДокументУстановки.Ссылка;
							//bercut090120
							Движение.Цена = Движение.Цена / ?(СтрокаТаблицы.НоменклатураПроизводителя.КоличествоЕдиницВТарифе=0,1,СтрокаТаблицы.НоменклатураПроизводителя.КоличествоЕдиницВТарифе);
							Движение.Упаковка = Упаковка;
							//
						КонецЕсли;
						
						Если СтрокаТаблицы.МРЦСНДС > 0 и СтрокаТаблицы.МРЦБезНДС = 0 и СтрокаТаблицы.ТарифМРЦБезНДССоздан = 0 Тогда 
							// расчитываем сумму без НДС
				//Исходное			СуммаКУстановке = Окр(СтрокаТаблицы.МРЦСНДС-((СтрокаТаблицы.МРЦСНДС * ТекПроцентНДС)/(100+ТекПроцентНДС)),2,1);
						//{{20200716 ГлазуновДВ Исправили
							СуммаКУстановке = Окр(СтрокаТаблицы.МРЦСНДС * 100 / (100 + ТекПроцентНДС),2,1);
						//}}20200716 ГлазуновДВ
							Движение = ДокументУстановки.Движения.ЦеныНоменклатуры.Добавить();
							Движение.Активность = Истина;
							Движение.Номенклатура = Номенклатура;
							Движение.ВидЦены      = ВидЦеныМРЦБезНДС;
							Движение.Период       = ДокументУстановки.Дата;
							Движение.Цена         = СуммаКУстановке;
							Движение.Валюта       = СтрокаТаблицы.ВалютаТарифа;
							Движение.Регистратор  = ДокументУстановки.Ссылка;
							//bercut090120
							Движение.Цена = Движение.Цена / ?(СтрокаТаблицы.НоменклатураПроизводителя.КоличествоЕдиницВТарифе=0,1,СтрокаТаблицы.НоменклатураПроизводителя.КоличествоЕдиницВТарифе);
							Движение.Упаковка = Упаковка;
							//
						КонецЕсли;
						
					КонецЕсли;
										
				КонецЕсли;
			КонецЦикла;
			ДокументУстановки.Записать(РежимЗаписиДокумента.Запись);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&Вместо("ОчиститьДублиЗаписейРегистра")
Процедура Рин1_ОчиститьДублиЗаписейРегистра(ТаблицаДанныхКЗаписи, ДатаНачалаДействияТарифа)
	// Вставить содержимое метода.
	//ПродолжитьВызов(ТаблицаДанныхКЗаписи, ДатаНачалаДействияТарифа);
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТаблицаИсточник", ТаблицаДанныхКЗаписи);
	Запрос.УстановитьПараметр("ДатаЗапроса", НачалоДня(ДатаНачалаДействияТарифа));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаДанныхКЗаписи.НоменклатураПроизводителя КАК НоменклатураПроизводителя,
	|	ТаблицаДанныхКЗаписи.Период КАК Период,
	|	ТаблицаДанныхКЗаписи.ВалютаТарифа КАК ВалютаТарифа
	|ПОМЕСТИТЬ ВТ_Источник
	|ИЗ
	|	&ТаблицаИсточник КАК ТаблицаДанныхКЗаписи
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ГИГ_ЦеныНоменклатурыПроизводителейСрезПоследних.НоменклатураПроизводителя КАК НоменклатураПроизводителя,
	|	ГИГ_ЦеныНоменклатурыПроизводителейСрезПоследних.ВалютаТарифа КАК ВалютаТарифа
	|ИЗ
	|	РегистрСведений.ГИГ_ЦеныНоменклатурыПроизводителей.СрезПоследних(
	|			&ДатаЗапроса,
	|			(НоменклатураПроизводителя, ВалютаТарифа) В
	|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					ВТ_Источник.НоменклатураПроизводителя КАК НоменклатураПроизводителя,
	|					ВТ_Источник.ВалютаТарифа КАК ВалютаТарифа
	|				ИЗ
	|					ВТ_Источник КАК ВТ_Источник)) КАК ГИГ_ЦеныНоменклатурыПроизводителейСрезПоследних
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Источник КАК ВТ_Источник
	|		ПО ГИГ_ЦеныНоменклатурыПроизводителейСрезПоследних.Период = ВТ_Источник.Период
	|			И ГИГ_ЦеныНоменклатурыПроизводителейСрезПоследних.НоменклатураПроизводителя = ВТ_Источник.НоменклатураПроизводителя
	|			И ГИГ_ЦеныНоменклатурыПроизводителейСрезПоследних.ВалютаТарифа = ВТ_Источник.ВалютаТарифа
	|
	|СГРУППИРОВАТЬ ПО
	|	ГИГ_ЦеныНоменклатурыПроизводителейСрезПоследних.НоменклатураПроизводителя,
	|	ГИГ_ЦеныНоменклатурыПроизводителейСрезПоследних.ВалютаТарифа" ;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Набор = РегистрыСведений.ГИГ_ЦеныНоменклатурыПроизводителей.СоздатьНаборЗаписей();
		Набор.Отбор.Период.Установить(ДатаНачалаДействияТарифа);
		Набор.Отбор.НоменклатураПроизводителя.Установить(Выборка.НоменклатураПроизводителя);
		//Набор.Отбор.ВалютаТарифа.Установить(Выборка.ВалютаТарифа);
		Набор.Записать();
	КонецЦикла;  
	
КонецПроцедуры

//{{20201026 ГлазуновДВ
&Вместо("ГИГ_ТекстЗапросаДоступныхОстатковПроизводителяДляПодбора")
Функция Рин1_ГИГ_ТекстЗапросаДоступныхОстатковПроизводителяДляПодбора(ЕстьХарактеристика, ХарактеристикиИспользуются, СоставРазделовЗапроса)
	// Вставить содержимое метода.
	//Результат = ПродолжитьВызов(ЕстьХарактеристика, ХарактеристикиИспользуются, СоставРазделовЗапроса);
	//Возврат Результат;
	Если СоставРазделовЗапроса = Неопределено Тогда
		СоставРазделовЗапроса = Новый Массив();
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ГИГ_НоменклатураНаСкладеПоставщика.Номенклатура КАК Номенклатура,
	|	ГИГ_НоменклатураНаСкладеПоставщика.Количество КАК Доступно,
	|	ВТдоступныеСхемы.Склад КАК Склад,
	|	ВТдоступныеСхемы.СхемаОбеспечения КАК СхемаОбеспечения,
	|	ВТдоступныеСхемы.СрокОбеспеченияМин КАК СрокОбеспеченияМин,
	|	ВТдоступныеСхемы.СрокОбеспеченияМакс КАК СрокОбеспеченияМакс,
	|	ДОБАВИТЬКДАТЕ(&ТекущаяДата, ДЕНЬ, ВТдоступныеСхемы.СрокОбеспеченияМакс) КАК Период,
//{{20201026 ГлазуновДВ
	|	ВЫБОР
	|		КОГДА ГИГ_НоменклатураНаСкладеПоставщика.ДатаЗаписи = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА 0
	|		ИНАЧЕ РАЗНОСТЬДАТ(ГИГ_НоменклатураНаСкладеПоставщика.ДатаЗаписи, &ТекущаяДатаСеанса, МИНУТА)
	|	КОНЕЦ КАК АктуальностьЗагрузки,
//}}20201026 ГлазуновДВ
	|	ВТдоступныеСхемы.СкладИсточник КАК ИсточникОбеспечения
	|ИЗ
	|	РегистрСведений.ГИГ_НоменклатураНаСкладеПоставщика КАК ГИГ_НоменклатураНаСкладеПоставщика
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СхемыОбеспечения КАК СхемыОбеспечения
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТдоступныеСхемы КАК ВТдоступныеСхемы
	|			ПО СхемыОбеспечения.Ссылка = ВТдоступныеСхемы.СхемаОбеспечения
	|		ПО ГИГ_НоменклатураНаСкладеПоставщика.Склад = СхемыОбеспечения.ГИГ_СкладПоставщика
	|			И (ГИГ_НоменклатураНаСкладеПоставщика.Номенклатура = &Номенклатура)
	|			И (НЕ СхемыОбеспечения.ГИГ_ЗакупкаСПроизводства)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ГИГ_СрокиПоставкиНаСкладПоставщикаСПроизводства.Номенклатура,
	|	0,
	|	ВТдоступныеСхемы.Склад,
	|	ВТдоступныеСхемы.СхемаОбеспечения,
	|	ГИГ_СрокиПоставкиНаСкладПоставщикаСПроизводства.СрокПоставки + ВТдоступныеСхемы.СрокОбеспеченияМин,
	|	ГИГ_СрокиПоставкиНаСкладПоставщикаСПроизводства.СрокПоставки + ВТдоступныеСхемы.СрокОбеспеченияМакс,
	|	ДОБАВИТЬКДАТЕ(&ТекущаяДата, ДЕНЬ, ГИГ_СрокиПоставкиНаСкладПоставщикаСПроизводства.СрокПоставки + ВТдоступныеСхемы.СрокОбеспеченияМакс),
//{{20201026 ГлазуновДВ
	|	0,
//}}20201026 ГлазуновДВ
	|	ВТдоступныеСхемы.СкладИсточник
	|ИЗ
	|	РегистрСведений.ГИГ_СрокиПоставкиНаСкладПоставщикаСПроизводства КАК ГИГ_СрокиПоставкиНаСкладПоставщикаСПроизводства
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СхемыОбеспечения КАК СхемыОбеспечения
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТдоступныеСхемы КАК ВТдоступныеСхемы
	|			ПО СхемыОбеспечения.Ссылка = ВТдоступныеСхемы.СхемаОбеспечения
	|		ПО ГИГ_СрокиПоставкиНаСкладПоставщикаСПроизводства.СкладПоставщика = СхемыОбеспечения.ГИГ_СкладПоставщика
	|			И (ГИГ_СрокиПоставкиНаСкладПоставщикаСПроизводства.Номенклатура = &Номенклатура)
	|			И (СхемыОбеспечения.ГИГ_ЗакупкаСПроизводства)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Склад,
	|	Период";
	
	СоставРазделовЗапроса.Добавить("ДоступныеТоварыПроизводителя");
	
	Если ЕстьХарактеристика Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "И (ГИГ_НоменклатураНаСкладеПоставщика.Номенклатура = &Номенклатура)",
		"И (ГИГ_НоменклатураНаСкладеПоставщика.Номенклатура = &Номенклатура И Характеристика = &Характеристика)");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "И (ГИГ_СрокиПоставкиНаСкладПоставщикаСПроизводства.Номенклатура = &Номенклатура)",
		"И (ГИГ_СрокиПоставкиНаСкладПоставщикаСПроизводства.Номенклатура = &Номенклатура И Характеристика = &Характеристика)");
	КонецЕсли;

	Возврат ТекстЗапроса;
	
КонецФункции
//}}20201026 ГлазуновДВ


&Вместо("СнятиеРезерваСверхПотребности")
Процедура Рин1_СнятиеРезерваСверхПотребности()//++Шерстюк Ю.Ю. 26.03.2021 исправление ошибки в регл задании Задача № 7063 в снятие резерва попадают предопред.назначения Брак,Излишек,ЗаменаБрака
		// Параметры работы процедуры
	Назначение              = Справочники.Назначения.ПустаяСсылка();
	Заказ                   = Неопределено;
	ВидОперации             = Перечисления.ВидыОперацийКорректировкиНазначения.СнятьРезервПоМногимНазначениям;
	КорректировкаНазначения = Документы.КорректировкаНазначенияТоваров.ПустаяСсылка();
	
	// Получаем таблицу остатков типовыми средствами
	СтруктураЗаполнения = Документы.КорректировкаНазначенияТоваров.ЗаполнитьТаблицуСнятияУстановкиРезервов(ВидОперации, Назначение, Заказ, 
		КорректировкаНазначения, Ложь, Неопределено);
		
	ТаблицаТовары = СтруктураЗаполнения.ТаблицаЗаполненияКорректировки;
	
	// Отберем строки со сверх потребностью
	МассивСтрок = Новый Массив();
	Для Каждого Строка Из ТаблицаТовары Цикл
		Если Строка.Количество > 0 И Строка.Отметка Тогда
			МассивСтрок.Добавить(Строка);
		КонецЕсли;
	КонецЦикла;
	
	ТоварыКПереносу = ТаблицаТовары.Скопировать(МассивСтрок);
	Если ТоварыКПереносу.Количество() = 0 Тогда // сверх потребности нет
		Возврат;
	КонецЕсли;
	
	//начало блока изменений @гигабайт Яшин В.В. 31.05.2019 
	//СтруктураДействий = Новый Структура;
	//СтруктураДействий.Вставить("ПересчитатьКоличествоУпаковок");
	СтруктураДействий = Новый Структура;
		СтруктураДействий.Вставить(
			"ПересчитатьКоличествоУпаковок",
			ОбработкаТабличнойЧастиКлиентСервер.СтруктураПересчетаКоличестваУпаковок());
	//конец блока изменений @гигабайт Яшин В.В. 31.05.2019
	
	// В таблице остатков данные по всем организациям.
	// Обходим и создаем для каждой организации документ корректировки назначения
	ВыборкаОрганизаций = Справочники.Организации.Выбрать();
	Пока ВыборкаОрганизаций.Следующий() Цикл
		
		Организация = ВыборкаОрганизаций.Ссылка;
		
		ТоварыПоОрганизации = ТоварыКПереносу.Скопировать();
		
		//++Шерстюк Ю.Ю. 26.03.2021 исключаем из таблицы спец.назначения
		ТоварыПоОрганизации = УдалитьСпецНазначения(ТоварыПоОрганизации);		
		//--Шерстюк Ю.Ю. 26.03.2021
		
		Документы.КорректировкаНазначенияТоваров.ПостобработкаТаблицыТовары(ТоварыПоОрганизации, ВидОперации, Организация);
		
		Если ТоварыПоОрганизации.Количество() = 0 Тогда // По текущей организации нет данных - пропускаем
			Продолжить;
		КонецЕсли;	
		
		// Создаем и заполняем документ
		Документ = Документы.КорректировкаНазначенияТоваров.СоздатьДокумент();
		
		Документ.Комментарий = "Автоматическое снятие резерва сверх потребности";
		
		Документ.Назначение  = Назначение;
		Документ.ВидОперации = ВидОперации;
		Документ.Организация = Организация;
		Документ.Дата        = ТекущаяДатаСеанса();
		
		Документ.УстановитьНовыйНомер();
		
		Документ.Товары.Загрузить(ТоварыПоОрганизации);
		
		ОбработкаТабличнойЧастиСервер.ОбработатьТЧ(Документ.Товары, СтруктураДействий, Неопределено);
		
		//bercut040220 по тз
		Для каждого Строка Из Документ.Товары Цикл
			Строка.Помещение = Справочники.СкладскиеПомещения.НайтиПоНаименованию("Ручной отбор (мезонин)");
		КонецЦикла;
		//
		
		ПараметрыУказанияСерий = Документы.КорректировкаНазначенияТоваров.ПараметрыУказанияСерий(Документ);
		НоменклатураСервер.ЗаполнитьСтатусыУказанияСерий(Документ, ПараметрыУказанияСерий);
		
		Попытка
			Документ.Записать(РежимЗаписиДокумента.Проведение);
			Комментарий = "Успешно записан документ снятия резерва сверх потребности: " + Документ;
			ЗаписьЖурналаРегистрации("ГИГ_СнятиеРезерваСверхПотребности", УровеньЖурналаРегистрации.Информация, Метаданные.РегламентныеЗадания.ГИГ_СнятиеРезерваСверхПотребности, Документ.Ссылка, Комментарий);
		Исключение
			Комментарий = "Ошибка проведения документа! Описание: " + Символы.ПС + ОписаниеОшибки();
			ЗаписьЖурналаРегистрации("ГИГ_СнятиеРезерваСверхПотребности", УровеньЖурналаРегистрации.Ошибка, Метаданные.РегламентныеЗадания.ГИГ_СнятиеРезерваСверхПотребности, , Комментарий);
		КонецПопытки;
		
	КонецЦикла;

КонецПроцедуры

//++Шерстюк Ю.Ю. 26.03.2021
Функция УдалитьСпецНазначения(ТоварыПоОрганизации) Экспорт
	пЗапрос = Новый Запрос("ВЫБРАТЬ
	                       |	Таблица.Номенклатура КАК Номенклатура,
	                       |	Таблица.Характеристика КАК Характеристика,
	                       |	Таблица.ВНаличии КАК ВНаличии,
	                       |	Таблица.Заказ КАК Заказ,
	                       |	Таблица.ЗаказИсточник КАК ЗаказИсточник,
	                       |	Таблица.ИсточникПредставление КАК ИсточникПредставление,
	                       |	Таблица.ИсходноеНазначение КАК ИсходноеНазначение,
	                       |	Таблица.Количество КАК Количество,
	                       |	Таблица.Назначение КАК Назначение,
	                       |	Таблица.НазначениеИсточник КАК НазначениеИсточник,
	                       |	Значение(Справочник.Назначения.ПустаяСсылка) КАК НовоеНазначение,
	                       |	Таблица.ОбеспеченоОжидается КАК ОбеспеченоОжидается,
	                       |	Таблица.Отметка КАК Отметка,
	                       |	Таблица.Потребность КАК Потребность,
	                       |	Таблица.ПотребностьОсновногоСклада КАК ПотребностьОсновногоСклада,
	                       |	Таблица.СвободныйОстаток КАК СвободныйОстаток,
	                       |	Таблица.Склад КАК Склад,
	                       |	Таблица.СкладЗаказИсточник КАК СкладЗаказИсточник,
	                       |	Таблица.СкладПредставление КАК СкладПредставление,
	                       |	Таблица.СортировкаСклада КАК СортировкаСклада
	                       |ПОМЕСТИТЬ ТаблицаЗначений
	                       |ИЗ
	                       |	&Таблица КАК Таблица
	                       |;
	                       |
	                       |////////////////////////////////////////////////////////////////////////////////
	                       |ВЫБРАТЬ
	                       |	ТаблицаЗначений.Номенклатура КАК Номенклатура,
	                       |	ТаблицаЗначений.Характеристика КАК Характеристика,
	                       |	ТаблицаЗначений.ВНаличии КАК ВНаличии,
	                       |	ТаблицаЗначений.Заказ КАК Заказ,
	                       |	ТаблицаЗначений.ЗаказИсточник КАК ЗаказИсточник,
	                       |	ТаблицаЗначений.ИсточникПредставление КАК ИсточникПредставление,
	                       |	ТаблицаЗначений.ИсходноеНазначение КАК ИсходноеНазначение,
	                       |	ТаблицаЗначений.Количество КАК Количество,
	                       |	ТаблицаЗначений.Назначение КАК Назначение,
	                       |	ТаблицаЗначений.НазначениеИсточник КАК НазначениеИсточник,
	                       |	ТаблицаЗначений.НовоеНазначение КАК НовоеНазначение,
	                       |	ТаблицаЗначений.ОбеспеченоОжидается КАК ОбеспеченоОжидается,
	                       |	ТаблицаЗначений.Отметка КАК Отметка,
	                       |	ТаблицаЗначений.Потребность КАК Потребность,
	                       |	ТаблицаЗначений.ПотребностьОсновногоСклада КАК ПотребностьОсновногоСклада,
	                       |	ТаблицаЗначений.СвободныйОстаток КАК СвободныйОстаток,
	                       |	ТаблицаЗначений.Склад КАК Склад,
	                       |	ТаблицаЗначений.СкладЗаказИсточник КАК СкладЗаказИсточник,
	                       |	ТаблицаЗначений.СкладПредставление КАК СкладПредставление,
	                       |	ТаблицаЗначений.СортировкаСклада КАК СортировкаСклада
	                       |ИЗ
	                       |	ТаблицаЗначений КАК ТаблицаЗначений
						   |ГДЕ
							|	ТаблицаЗначений.ИсходноеНазначение <> ЗНАЧЕНИЕ(Справочник.Назначения.Излишки)
							|			И ТаблицаЗначений.ИсходноеНазначение <> ЗНАЧЕНИЕ(Справочник.Назначения.Брак)
							|			И ТаблицаЗначений.ИсходноеНазначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ЗаменаБрака)
							|");
	пЗапрос.УстановитьПараметр("Таблица",ТоварыПоОрганизации);
	Возврат пЗапрос.Выполнить().Выгрузить();
КонецФункции


//--Шерстюк Ю.Ю. 26.03.2021


// + [Rineco], [Киселев А.] [22.07.2021] 
// Задача: [№ ], [# Модификация запроса убираем соединения с Соглашениями]
&Вместо("ГИГ_ШаблонТекстаЗапросаСпискаНоменклатурыПоПараметрамСоглашенияСПокупателем")
Функция Рин1_ГИГ_ШаблонТекстаЗапросаСпискаНоменклатурыПоПараметрамСоглашенияСПокупателем(Форма)
	ВариантРасчетаЦен = Форма.ВариантРасчетаЦен;
	Если ВариантРасчетаЦен <> Перечисления.ВариантыРасчетаЦенПоСоглашениямСКлиентами.ВидЦенВШапкеВидыЦенПоЦеновымГруппам Тогда 
		ВариантРасчетаЦен =  Перечисления.ВариантыРасчетаЦенПоСоглашениямСКлиентами.ВидЦенВШапкеВидыЦенПоЦеновымГруппам;
	КонецЕсли;	
	
	Если ВариантРасчетаЦен = Перечисления.ВариантыРасчетаЦенПоСоглашениямСКлиентами.БезЦен Тогда
		
		ШаблонТекстаЗапроса = 
		"ВЫБРАТЬ
		
		|	{СправочникНоменклатураОбщиеПоля}
		
		|	ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка) КАК Упаковка,
		|	0 КАК Цена,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка) КАК ВидЦены,
		
		|	ВЫРАЗИТЬ({СвободныеОстаткиВНаличии} КАК ЧИСЛО(15, 3)) КАК ВНаличииОстаток,
		|	{СвободныеОстаткиВНаличии} КАК ВНаличииВБазовыхЕдиницах,
		|	ВЫРАЗИТЬ({ВсеОстаткиДоступно} КАК ЧИСЛО(15, 3)) КАК Доступно
		
		|ИЗ
		
		|	{СправочникНоменклатура}
		|	{ВсеОстатки}
		
		|ГДЕ
		
		|	{ОтборНоменклатурыПоГруппе}
		|	{ОтборНоменклатурыПоСегменту}
		
		|";
		
	ИначеЕсли ВариантРасчетаЦен = Перечисления.ВариантыРасчетаЦенПоСоглашениямСКлиентами.ВидЦенВШапкеВидыЦенПоЦеновымГруппам Тогда
		
		ШаблонТекстаЗапроса = 
		"ВЫБРАТЬ
		
		|	{СправочникНоменклатураОбщиеПоля}
		
		|	ЕСТЬNULL(ЦеныНоменклатуры.Упаковка, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) КАК Упаковка,
		|   ВЫБОР 
		|		КОГДА СоглашениеЦеновыеГруппы.ВидЦен ЕСТЬ NULL
		|			ТОГДА ВЫРАЗИТЬ(&Соглашение КАК Справочник.СоглашенияСКлиентами).ВидЦен
		|       КОГДА СоглашениеЦеновыеГруппы.ВидЦен = ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
		|			ТОГДА ВЫРАЗИТЬ(&Соглашение КАК Справочник.СоглашенияСКлиентами).ВидЦен
		|		ИНАЧЕ СоглашениеЦеновыеГруппы.ВидЦен
		|	КОНЕЦ КАК ВидЦены,

		
		|	ВЫРАЗИТЬ(ВЫБОР
		|			КОГДА ВЫБОР
		|						КОГДА ЕСТЬNULL(СоглашениеЦеновыеГруппы.ВидЦен, ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
		|							ТОГДА СоглашениеЦеновыеГруппы.ВидЦен
		|						КОГДА ЕСТЬNULL(СоглашениеЦеновыеГруппы.ВидЦен, ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
		|							ТОГДА ЕСТЬNULL(ВЫРАЗИТЬ(&Соглашение КАК Справочник.СоглашенияСКлиентами).ВидЦен, ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка))
		|					КОНЕЦ <> ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
		|					И ЕСТЬNULL(ЦеныНоменклатуры.Цена, 0) > 0
		|				ТОГДА ЦеныНоменклатуры.Цена * ВЫБОР
		|						КОГДА &Валюта <> ЦеныНоменклатуры.Валюта
		|							ТОГДА ВЫБОР
		|									КОГДА ЕСТЬNULL(КурсыСрезПоследнихВалютаЦены.Кратность, 0) > 0
		|											И ЕСТЬNULL(КурсыСрезПоследнихВалютаЦены.Курс, 0) > 0
		|											И ЕСТЬNULL(КурсыСрезПоследнихВалютаДокумента.Кратность, 0) > 0
		|											И ЕСТЬNULL(КурсыСрезПоследнихВалютаДокумента.Курс, 0) > 0
		|										ТОГДА КурсыСрезПоследнихВалютаЦены.Курс * КурсыСрезПоследнихВалютаДокумента.Кратность / (КурсыСрезПоследнихВалютаДокумента.Курс * КурсыСрезПоследнихВалютаЦены.Кратность)
		|									ИНАЧЕ 0
		|								КОНЕЦ
		|						ИНАЧЕ 1
		|					КОНЕЦ
		|			ИНАЧЕ 0
		|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК Цена,
		|	{ПоляЗапросаАвтоматическойСкидки}
		
		|	ВЫРАЗИТЬ({СвободныеОстаткиВНаличии} / ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1) КАК ЧИСЛО(15, 3)) КАК ВНаличииОстаток,
		|	{СвободныеОстаткиВНаличии} КАК ВНаличииВБазовыхЕдиницах,
		|	ВЫРАЗИТЬ({ВсеОстаткиДоступно} / ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1) КАК ЧИСЛО(15, 3)) КАК Доступно
		
		|ИЗ
		
		|	{СправочникНоменклатура}
		
		
		
		
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СоглашенияСКлиентами.ЦеновыеГруппы КАК СоглашениеЦеновыеГруппы
		|	ПО (&Соглашение = СоглашениеЦеновыеГруппы.Ссылка)
		|		И СправочникНоменклатура.ЦеноваяГруппа = СоглашениеЦеновыеГруппы.ЦеноваяГруппа
		
		|	{ЦеныНоменклатуры}
		|	И (ЦеныНоменклатуры.ВидЦены = ВЫБОР
		|			КОГДА ЕСТЬNULL(СоглашениеЦеновыеГруппы.ВидЦен, ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
		|				ТОГДА СоглашениеЦеновыеГруппы.ВидЦен
		|			КОГДА ЕСТЬNULL(СоглашениеЦеновыеГруппы.ВидЦен, ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
		|				ТОГДА ЕСТЬNULL(ВЫРАЗИТЬ(&Соглашение КАК Справочник.СоглашенияСКлиентами).ВидЦен, ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка))
		|		КОНЕЦ)
		
		|	{КурсВалютыЦены}
		|	{КурсВалютыДокумента}
		|	{ВсеОстатки}
		|   {ТаблицаЗапросаАвтСкидки}
		
		|ГДЕ
		
		|	{ОтборНоменклатурыПоГруппе}
		|	{ОтборНоменклатурыПоСегменту}
		
		|";
		
	ИначеЕсли ВариантРасчетаЦен = Перечисления.ВариантыРасчетаЦенПоСоглашениямСКлиентами.ВидЦенВШапкеВидыЦенПоНоменклатуре Тогда
		
		ШаблонТекстаЗапроса = 
		
		"ВЫБРАТЬ
		
		|	{СправочникНоменклатураОбщиеПоля}
		
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(СоглашениеТовары.ВидЦены, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
		|			ТОГДА СоглашениеТовары.ВидЦены
		|		ИНАЧЕ ЕСТЬNULL(ВЫРАЗИТЬ(&Соглашение КАК Справочник.СоглашенияСКлиентами).ВидЦен, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка))
		|	КОНЕЦ КАК ВидЦены,
		
		|	ВЫРАЗИТЬ(ВЫБОР
		|			КОГДА ВЫБОР
		|						КОГДА ЕСТЬNULL(СоглашениеТовары.ВидЦены, ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
		|							ТОГДА СоглашениеТовары.ВидЦены
		|						КОГДА ЕСТЬNULL(СоглашениеТовары.ВидЦены, ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
		|							ТОГДА ЕСТЬNULL(ВЫРАЗИТЬ(&Соглашение КАК Справочник.СоглашенияСКлиентами).ВидЦен, ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка))
		|					КОНЕЦ <> ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
		|					И ЕСТЬNULL(ЦеныНоменклатуры.Цена, 0) > 0
		|				ТОГДА ЦеныНоменклатуры.Цена * ВЫБОР
		|						КОГДА &Валюта <> ЦеныНоменклатуры.Валюта
		|							ТОГДА ВЫБОР
		|									КОГДА ЕСТЬNULL(КурсыСрезПоследнихВалютаЦены.Кратность, 0) > 0
		|											И ЕСТЬNULL(КурсыСрезПоследнихВалютаЦены.Курс, 0) > 0
		|											И ЕСТЬNULL(КурсыСрезПоследнихВалютаДокумента.Кратность, 0) > 0
		|											И ЕСТЬNULL(КурсыСрезПоследнихВалютаДокумента.Курс, 0) > 0
		|										ТОГДА КурсыСрезПоследнихВалютаЦены.Курс * КурсыСрезПоследнихВалютаДокумента.Кратность / (КурсыСрезПоследнихВалютаДокумента.Курс * КурсыСрезПоследнихВалютаЦены.Кратность)
		|									ИНАЧЕ 0
		|								КОНЕЦ
		|						ИНАЧЕ 1
		|					КОНЕЦ
		|			ИНАЧЕ 0
		|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК Цена,
		
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(СоглашениеТовары.Упаковка, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
		|			ТОГДА СоглашениеТовары.Упаковка
		|		ИНАЧЕ ЕСТЬNULL(ЦеныНоменклатуры.Упаковка, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка))
		|	КОНЕЦ КАК Упаковка,
		
		|	ВЫРАЗИТЬ({СвободныеОстаткиВНаличии} / 
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(СоглашениеТовары.Упаковка, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
		|			ТОГДА ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки3, 1)
		|		ИНАЧЕ ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1)
		|	КОНЕЦ КАК ЧИСЛО(15, 3)) КАК ВНаличииОстаток,
		
		|	{СвободныеОстаткиВНаличии} КАК ВНаличииВБазовыхЕдиницах,
		
		|	ВЫРАЗИТЬ({ВсеОстаткиДоступно} / 
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(СоглашениеТовары.Упаковка, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
		|			ТОГДА ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки3, 1)
		|		ИНАЧЕ ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1)
		|	КОНЕЦ КАК ЧИСЛО(15, 3)) КАК Доступно
		
		
		|ИЗ
		
		|	{СправочникНоменклатура}
		
		
		
		
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СоглашенияСКлиентами.Товары КАК СоглашениеТовары
		|	ПО (СоглашениеТовары.Ссылка = &Соглашение)
		|		И СправочникНоменклатура.Ссылка = СоглашениеТовары.Номенклатура
		|		И (СоглашениеТовары.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
		
		|	{ЦеныНоменклатуры}
		|	И (ЦеныНоменклатуры.ВидЦены = ВЫБОР
		|			КОГДА ЕСТЬNULL(СоглашениеТовары.ВидЦены, ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
		|				ТОГДА СоглашениеТовары.ВидЦены
		|			КОГДА ЕСТЬNULL(СоглашениеТовары.ВидЦены, ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
		|				ТОГДА ЕСТЬNULL(ВЫРАЗИТЬ(&Соглашение КАК Справочник.СоглашенияСКлиентами).ВидЦен, ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка))
		|		КОНЕЦ)
		
		|	{КурсВалютыЦены}
		|	{КурсВалютыДокумента}
		|	{ВсеОстатки}
		
		|ГДЕ
		
		|	{ОтборНоменклатурыПоГруппе}
		|	{ОтборНоменклатурыПоСегменту}
		
		|";
		
	ИначеЕсли ВариантРасчетаЦен = Перечисления.ВариантыРасчетаЦенПоСоглашениямСКлиентами.ВидЦенВШапкеВидыЦенПоНоменклатуреУточненныеЦеныПоНоменклатуре Тогда
		
		ШаблонТекстаЗапроса = 
		"ВЫБРАТЬ
		
		|	{СправочникНоменклатураОбщиеПоля}
		
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(СоглашениеТовары.Цена, 0) > 0
		|			ТОГДА ЕСТЬNULL(СоглашениеТовары.Упаковка, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка))
		|		КОГДА ЕСТЬNULL(СоглашениеТовары.ВидЦены, ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
		|			ТОГДА ЕСТЬNULL(СоглашениеТовары.Упаковка, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка))
		|		ИНАЧЕ ЕСТЬNULL(ЦеныНоменклатуры.Упаковка, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка))
		|	КОНЕЦ КАК Упаковка,
		
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(СоглашениеТовары.Цена, 0) > 0
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
		|		КОГДА ЕСТЬNULL(СоглашениеТовары.ВидЦены, ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
		|			ТОГДА СоглашениеТовары.ВидЦены
		|		ИНАЧЕ ЕСТЬNULL(ВЫРАЗИТЬ(&Соглашение КАК Справочник.СоглашенияСКлиентами).ВидЦен, ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка))
		|	КОНЕЦ КАК ВидЦены,
		
		|	ВЫРАЗИТЬ(ВЫБОР
		|			КОГДА ЕСТЬNULL(СоглашениеТовары.Цена, 0) > 0
		|				ТОГДА СоглашениеТовары.Цена * ВЫБОР
		|						КОГДА &Валюта <> СоглашениеТовары.Ссылка.Валюта
		|							ТОГДА ВЫБОР
		|									КОГДА ЕСТЬNULL(КурсыСрезПоследнихВалютаСоглашения.Кратность, 0) > 0
		|											И ЕСТЬNULL(КурсыСрезПоследнихВалютаСоглашения.Курс, 0) > 0
		|											И ЕСТЬNULL(КурсыСрезПоследнихВалютаДокумента.Кратность, 0) > 0
		|											И ЕСТЬNULL(КурсыСрезПоследнихВалютаДокумента.Курс, 0) > 0
		|										ТОГДА КурсыСрезПоследнихВалютаСоглашения.Курс * КурсыСрезПоследнихВалютаДокумента.Кратность / (КурсыСрезПоследнихВалютаДокумента.Курс * КурсыСрезПоследнихВалютаСоглашения.Кратность)
		|									ИНАЧЕ 0
		|								КОНЕЦ
		|						ИНАЧЕ 1
		|					КОНЕЦ
		|			КОГДА ВЫБОР
		|						КОГДА ЕСТЬNULL(СоглашениеТовары.Цена, 0) > 0
		|							ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
		|						КОГДА ЕСТЬNULL(СоглашениеТовары.ВидЦены, ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
		|							ТОГДА СоглашениеТовары.ВидЦены
		|						КОГДА ЕСТЬNULL(СоглашениеТовары.ВидЦены, ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
		|							ТОГДА ЕСТЬNULL(ВЫРАЗИТЬ(&Соглашение КАК Справочник.СоглашенияСКлиентами).ВидЦен, ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка))
		|					КОНЕЦ <> ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
		|					И ЕСТЬNULL(ЦеныНоменклатуры.Цена, 0) > 0
		|				ТОГДА ЦеныНоменклатуры.Цена * ВЫБОР
		|						КОГДА &Валюта <> ЦеныНоменклатуры.Валюта
		|							ТОГДА ВЫБОР
		|									КОГДА ЕСТЬNULL(КурсыСрезПоследнихВалютаЦены.Кратность, 0) > 0
		|											И ЕСТЬNULL(КурсыСрезПоследнихВалютаЦены.Курс, 0) > 0
		|											И ЕСТЬNULL(КурсыСрезПоследнихВалютаДокумента.Кратность, 0) > 0
		|											И ЕСТЬNULL(КурсыСрезПоследнихВалютаДокумента.Курс, 0) > 0
		|										ТОГДА КурсыСрезПоследнихВалютаЦены.Курс * КурсыСрезПоследнихВалютаДокумента.Кратность / (КурсыСрезПоследнихВалютаДокумента.Курс * КурсыСрезПоследнихВалютаЦены.Кратность)
		|									ИНАЧЕ 0
		|								КОНЕЦ
		|						ИНАЧЕ 1
		|					КОНЕЦ
		|			ИНАЧЕ 0
		|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК Цена,
		
		|	ВЫРАЗИТЬ({СвободныеОстаткиВНаличии} / 
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(СоглашениеТовары.Цена, 0) > 0
		|			ТОГДА ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки3, 1)
		|		КОГДА ЕСТЬNULL(СоглашениеТовары.ВидЦены, ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
		|			ТОГДА ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки3, 1)
		|		ИНАЧЕ ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1)
		|	КОНЕЦ КАК ЧИСЛО(15, 3)) КАК ВНаличииОстаток,
		
		|	{СвободныеОстаткиВНаличии} КАК ВНаличииВБазовыхЕдиницах,
		
		|	ВЫРАЗИТЬ({ВсеОстаткиДоступно} / 
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(СоглашениеТовары.Цена, 0) > 0
		|			ТОГДА ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки3, 1)
		|		ИНАЧЕ ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1)
		|	КОНЕЦ КАК ЧИСЛО(15, 3)) КАК Доступно
		
		|ИЗ
		
		|	{СправочникНоменклатура}
		
		
		
		
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СоглашенияСКлиентами.Товары КАК СоглашениеТовары
		|	ПО (СоглашениеТовары.Ссылка = &Соглашение)
		|		И СправочникНоменклатура.Ссылка = СоглашениеТовары.Номенклатура
		|		И (СоглашениеТовары.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
		
		|	{ЦеныНоменклатуры}
		|	И (ЦеныНоменклатуры.ВидЦены = ВЫБОР
		|			КОГДА ЕСТЬNULL(СоглашениеТовары.Цена, 0) > 0
		|				ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
		|			КОГДА ЕСТЬNULL(СоглашениеТовары.ВидЦены, ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
		|				ТОГДА СоглашениеТовары.ВидЦены
		|			КОГДА ЕСТЬNULL(СоглашениеТовары.ВидЦены, ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
		|				ТОГДА ЕСТЬNULL(ВЫРАЗИТЬ(&Соглашение КАК Справочник.СоглашенияСКлиентами).ВидЦен, ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка))
		|		КОНЕЦ)
		
		|	{КурсВалютыСоглашения}
		|	{КурсВалютыЦены}
		|	{КурсВалютыДокумента}
		
		|	{ВсеОстатки}
		
		|ГДЕ
		
		|	{ОтборНоменклатурыПоГруппе}
		|	{ОтборНоменклатурыПоСегменту}
		
		|";
		
	ИначеЕсли ВариантРасчетаЦен = Перечисления.ВариантыРасчетаЦенПоСоглашениямСКлиентами.ВидЦенВШапкеУточненныеЦеныПоНоменклатуре Тогда
		
		ШаблонТекстаЗапроса = 
		"ВЫБРАТЬ
		
		|	{СправочникНоменклатураОбщиеПоля}
		
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(СоглашениеТовары.Цена, 0) > 0
		|			ТОГДА ЕСТЬNULL(СоглашениеТовары.Упаковка, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка))
		|		ИНАЧЕ ЕСТЬNULL(ЦеныНоменклатуры.Упаковка, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка))
		|	КОНЕЦ КАК Упаковка,
		
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(СоглашениеТовары.Цена, 0) > 0
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
		|		КОГДА ЕСТЬNULL(СоглашениеТовары.ВидЦены, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
		|			ТОГДА СоглашениеТовары.ВидЦены
		|		ИНАЧЕ ЕСТЬNULL(ВЫРАЗИТЬ(&Соглашение КАК Справочник.СоглашенияСКлиентами).ВидЦен, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка))
		|	КОНЕЦ КАК ВидЦены,
		
		|	ВЫРАЗИТЬ(ВЫБОР
		|			КОГДА ЕСТЬNULL(СоглашениеТовары.Цена, 0) > 0
		|				ТОГДА СоглашениеТовары.Цена * ВЫБОР
		|						КОГДА &Валюта <> СоглашениеТовары.Ссылка.Валюта
		|							ТОГДА ВЫБОР
		|									КОГДА ЕСТЬNULL(КурсыСрезПоследнихВалютаСоглашения.Кратность, 0) > 0
		|											И ЕСТЬNULL(КурсыСрезПоследнихВалютаСоглашения.Курс, 0) > 0
		|											И ЕСТЬNULL(КурсыСрезПоследнихВалютаДокумента.Кратность, 0) > 0
		|											И ЕСТЬNULL(КурсыСрезПоследнихВалютаДокумента.Курс, 0) > 0
		|										ТОГДА КурсыСрезПоследнихВалютаСоглашения.Курс * КурсыСрезПоследнихВалютаДокумента.Кратность / (КурсыСрезПоследнихВалютаДокумента.Курс * КурсыСрезПоследнихВалютаСоглашения.Кратность)
		|									ИНАЧЕ 0
		|								КОНЕЦ
		|						ИНАЧЕ 1
		|					КОНЕЦ
		|			КОГДА ВЫБОР
		|						КОГДА ЕСТЬNULL(СоглашениеТовары.Цена, 0) > 0
		|							ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
		|						КОГДА ЕСТЬNULL(СоглашениеТовары.ВидЦены, ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
		|							ТОГДА СоглашениеТовары.ВидЦены
		|						КОГДА ЕСТЬNULL(СоглашениеТовары.ВидЦены, ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
		|							ТОГДА ЕСТЬNULL(ВЫРАЗИТЬ(&Соглашение КАК Справочник.СоглашенияСКлиентами).ВидЦен, ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка))
		|					КОНЕЦ <> ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
		|					И ЕСТЬNULL(ЦеныНоменклатуры.Цена, 0) > 0
		|				ТОГДА ЦеныНоменклатуры.Цена * ВЫБОР
		|						КОГДА &Валюта <> ЦеныНоменклатуры.Валюта
		|							ТОГДА ВЫБОР
		|									КОГДА ЕСТЬNULL(КурсыСрезПоследнихВалютаЦены.Кратность, 0) > 0
		|											И ЕСТЬNULL(КурсыСрезПоследнихВалютаЦены.Курс, 0) > 0
		|											И ЕСТЬNULL(КурсыСрезПоследнихВалютаДокумента.Кратность, 0) > 0
		|											И ЕСТЬNULL(КурсыСрезПоследнихВалютаДокумента.Курс, 0) > 0
		|										ТОГДА КурсыСрезПоследнихВалютаЦены.Курс * КурсыСрезПоследнихВалютаДокумента.Кратность / (КурсыСрезПоследнихВалютаДокумента.Курс * КурсыСрезПоследнихВалютаЦены.Кратность)
		|									ИНАЧЕ 0
		|								КОНЕЦ
		|						ИНАЧЕ 1
		|					КОНЕЦ
		|			ИНАЧЕ 0
		|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК Цена,
		
		|	ВЫРАЗИТЬ({СвободныеОстаткиВНаличии} / 
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(СоглашениеТовары.Цена, 0) > 0
		|			ТОГДА ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки3, 1)
		|		ИНАЧЕ ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1)
		|	КОНЕЦ КАК ЧИСЛО(15, 3)) КАК ВНаличииОстаток,
		
		|	{СвободныеОстаткиВНаличии} КАК ВНаличииВБазовыхЕдиницах,
		
		|	ВЫРАЗИТЬ({ВсеОстаткиДоступно} / 
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(СоглашениеТовары.Цена, 0) > 0
		|			ТОГДА ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки3, 1)
		|		ИНАЧЕ ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1)
		|	КОНЕЦ КАК ЧИСЛО(15, 3)) КАК Доступно

		
		|ИЗ
		
		|	{СправочникНоменклатура}
		
		
		
		
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СоглашенияСКлиентами.Товары КАК СоглашениеТовары
		|	ПО (СоглашениеТовары.Ссылка = &Соглашение)
		|		И СправочникНоменклатура.Ссылка = СоглашениеТовары.Номенклатура
		|		И (СоглашениеТовары.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
		
		|	{ЦеныНоменклатуры}
		|	И (ЦеныНоменклатуры.ВидЦены = ВЫБОР
		|			КОГДА ЕСТЬNULL(СоглашениеТовары.Цена, 0) > 0
		|				ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
		|			КОГДА ЕСТЬNULL(СоглашениеТовары.ВидЦены, ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
		|				ТОГДА СоглашениеТовары.ВидЦены
		|			КОГДА ЕСТЬNULL(СоглашениеТовары.ВидЦены, ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
		|				ТОГДА ЕСТЬNULL(ВЫРАЗИТЬ(&Соглашение КАК Справочник.СоглашенияСКлиентами).ВидЦен, ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка))
		|		КОНЕЦ)
		
		|	{КурсВалютыСоглашения}
		|	{КурсВалютыЦены}
		|	{КурсВалютыДокумента}
		
		|	{ВсеОстатки}
		
		|ГДЕ
		
		|	{ОтборНоменклатурыПоГруппе}
		|	{ОтборНоменклатурыПоСегменту}
		
		|";
		
	ИначеЕсли ВариантРасчетаЦен = Перечисления.ВариантыРасчетаЦенПоСоглашениямСКлиентами.ВидЦенВШапкеВидыЦенПоЦеновымГруппамВидыЦенПоНоменклатуре Тогда
		
		ШаблонТекстаЗапроса = 
		"ВЫБРАТЬ
		
		|	{СправочникНоменклатураОбщиеПоля}
		
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(СоглашениеТовары.Упаковка, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
		|			ТОГДА СоглашениеТовары.Упаковка
		|		ИНАЧЕ ЕСТЬNULL(ЦеныНоменклатуры.Упаковка, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка))
		|	КОНЕЦ КАК Упаковка,
		
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(СоглашениеТовары.ВидЦены, ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
		|			ТОГДА СоглашениеТовары.ВидЦены
		|		КОГДА ЕСТЬNULL(СоглашениеЦеновыеГруппы.ВидЦен, ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
		|			ТОГДА СоглашениеЦеновыеГруппы.ВидЦен
		|		ИНАЧЕ ЕСТЬNULL(ВЫРАЗИТЬ(&Соглашение КАК Справочник.СоглашенияСКлиентами).ВидЦен, ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка))
		|	КОНЕЦ КАК ВидЦены,
		
		|	ВЫРАЗИТЬ(ВЫБОР
		|			КОГДА ВЫБОР
		|						КОГДА ЕСТЬNULL(СоглашениеТовары.ВидЦены, ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
		|							ТОГДА СоглашениеТовары.ВидЦены
		|						КОГДА ЕСТЬNULL(СоглашениеЦеновыеГруппы.ВидЦен, ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
		|							ТОГДА СоглашениеЦеновыеГруппы.ВидЦен
		|						ИНАЧЕ ЕСТЬNULL(ВЫРАЗИТЬ(&Соглашение КАК Справочник.СоглашенияСКлиентами).ВидЦен, ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка))
		|					КОНЕЦ <> ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
		|					И ЕСТЬNULL(ЦеныНоменклатуры.Цена, 0) > 0
		|				ТОГДА ЦеныНоменклатуры.Цена * ВЫБОР
		|						КОГДА &Валюта <> ЦеныНоменклатуры.Валюта
		|							ТОГДА ВЫБОР
		|									КОГДА ЕСТЬNULL(КурсыСрезПоследнихВалютаЦены.Кратность, 0) > 0
		|											И ЕСТЬNULL(КурсыСрезПоследнихВалютаЦены.Курс, 0) > 0
		|											И ЕСТЬNULL(КурсыСрезПоследнихВалютаДокумента.Кратность, 0) > 0
		|											И ЕСТЬNULL(КурсыСрезПоследнихВалютаДокумента.Курс, 0) > 0
		|										ТОГДА КурсыСрезПоследнихВалютаЦены.Курс * КурсыСрезПоследнихВалютаДокумента.Кратность / (КурсыСрезПоследнихВалютаДокумента.Курс * КурсыСрезПоследнихВалютаЦены.Кратность)
		|									ИНАЧЕ 0
		|								КОНЕЦ
		|						ИНАЧЕ 1
		|					КОНЕЦ
		|			ИНАЧЕ 0
		|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК Цена,
		|	{ПоляЗапросаАвтоматическойСкидки}
		
		|	ВЫРАЗИТЬ({СвободныеОстаткиВНаличии} / 
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(СоглашениеТовары.Упаковка, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
		|			ТОГДА ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки3, 1)
		|		ИНАЧЕ ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1)
		|	КОНЕЦ КАК ЧИСЛО(15, 3)) КАК ВНаличииОстаток,
		
		|	{СвободныеОстаткиВНаличии} КАК ВНаличииВБазовыхЕдиницах,
		
		|	ВЫРАЗИТЬ({ВсеОстаткиДоступно} / 
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(СоглашениеТовары.Упаковка, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
		|			ТОГДА ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки3, 1)
		|		ИНАЧЕ ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1)
		|	КОНЕЦ КАК ЧИСЛО(15, 3)) КАК Доступно
		
		|ИЗ
		
		|	{СправочникНоменклатура}
		
		
		
		
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СоглашенияСКлиентами.Товары КАК СоглашениеТовары
		|	ПО (СоглашениеТовары.Ссылка = &Соглашение)
		|		И СправочникНоменклатура.Ссылка = СоглашениеТовары.Номенклатура
		|		И (СоглашениеТовары.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
		
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СоглашенияСКлиентами.ЦеновыеГруппы КАК СоглашениеЦеновыеГруппы
		|	ПО (СоглашениеЦеновыеГруппы.Ссылка = &Соглашение)
		|		И СправочникНоменклатура.ЦеноваяГруппа = СоглашениеЦеновыеГруппы.ЦеноваяГруппа
		
		|	{ЦеныНоменклатуры}
		|	И (ЦеныНоменклатуры.ВидЦены = ВЫБОР
		|			КОГДА ЕСТЬNULL(СоглашениеТовары.ВидЦены, ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
		|				ТОГДА СоглашениеТовары.ВидЦены
		|			КОГДА ЕСТЬNULL(СоглашениеЦеновыеГруппы.ВидЦен, ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
		|				ТОГДА СоглашениеЦеновыеГруппы.ВидЦен
		|			ИНАЧЕ ЕСТЬNULL(ВЫРАЗИТЬ(&Соглашение КАК Справочник.СоглашенияСКлиентами).ВидЦен, ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка))
		|		КОНЕЦ)
		
		|	{КурсВалютыЦены}
		|	{КурсВалютыДокумента}
		|	{ВсеОстатки}
		|   {ТаблицаЗапросаАвтСкидки}
		
		|ГДЕ
		
		|	{ОтборНоменклатурыПоГруппе}
		|	{ОтборНоменклатурыПоСегменту}
		
		|";
		
	ИначеЕсли ВариантРасчетаЦен = Перечисления.ВариантыРасчетаЦенПоСоглашениямСКлиентами.ВидЦенВШапкеВидыЦенПоЦеновымГруппамВидыЦенПоНоменклатуреУточненныеЦеныПоНоменклатуре Тогда
		
		ШаблонТекстаЗапроса = 
		"ВЫБРАТЬ
		
		|	{СправочникНоменклатураОбщиеПоля}
		
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(СоглашениеТовары.Упаковка, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
		|			ТОГДА СоглашениеТовары.Упаковка
		|		ИНАЧЕ ЕСТЬNULL(ЦеныНоменклатуры.Упаковка, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка))
		|	КОНЕЦ КАК Упаковка,
		
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(СоглашениеТовары.Цена, 0) > 0
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
		|		КОГДА ЕСТЬNULL(СоглашениеТовары.ВидЦены, ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
		|			ТОГДА СоглашениеТовары.ВидЦены
		|		КОГДА ЕСТЬNULL(СоглашениеЦеновыеГруппы.ВидЦен, ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
		|			ТОГДА СоглашениеЦеновыеГруппы.ВидЦен
		|		ИНАЧЕ ЕСТЬNULL(ВЫРАЗИТЬ(&Соглашение КАК Справочник.СоглашенияСКлиентами).ВидЦен, ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка))
		|	КОНЕЦ КАК ВидЦены,
		
		|	ВЫРАЗИТЬ(ВЫБОР
		|			КОГДА ЕСТЬNULL(СоглашениеТовары.Цена, 0) > 0
		|				ТОГДА СоглашениеТовары.Цена * ВЫБОР
		|						КОГДА &Валюта <> СоглашениеТовары.Ссылка.Валюта
		|							ТОГДА ВЫБОР
		|									КОГДА ЕСТЬNULL(КурсыСрезПоследнихВалютаСоглашения.Кратность, 0) > 0
		|											И ЕСТЬNULL(КурсыСрезПоследнихВалютаСоглашения.Курс, 0) > 0
		|											И ЕСТЬNULL(КурсыСрезПоследнихВалютаДокумента.Кратность, 0) > 0
		|											И ЕСТЬNULL(КурсыСрезПоследнихВалютаДокумента.Курс, 0) > 0
		|										ТОГДА КурсыСрезПоследнихВалютаСоглашения.Курс * КурсыСрезПоследнихВалютаДокумента.Кратность / (КурсыСрезПоследнихВалютаДокумента.Курс * КурсыСрезПоследнихВалютаСоглашения.Кратность)
		|									ИНАЧЕ 0
		|								КОНЕЦ
		|						ИНАЧЕ 1
		|					КОНЕЦ
		|			КОГДА ВЫБОР
		|						КОГДА ЕСТЬNULL(СоглашениеТовары.ВидЦены, ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
		|							ТОГДА СоглашениеТовары.ВидЦены
		|						КОГДА ЕСТЬNULL(СоглашениеЦеновыеГруппы.ВидЦен, ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
		|							ТОГДА СоглашениеЦеновыеГруппы.ВидЦен
		|						ИНАЧЕ ЕСТЬNULL(ВЫРАЗИТЬ(&Соглашение КАК Справочник.СоглашенияСКлиентами).ВидЦен, ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка))
		|					КОНЕЦ <> ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
		|					И ЕСТЬNULL(ЦеныНоменклатуры.Цена, 0) > 0
		|				ТОГДА ЦеныНоменклатуры.Цена * ВЫБОР
		|						КОГДА &Валюта <> ЦеныНоменклатуры.Валюта
		|							ТОГДА ВЫБОР
		|									КОГДА ЕСТЬNULL(КурсыСрезПоследнихВалютаЦены.Кратность, 0) > 0
		|											И ЕСТЬNULL(КурсыСрезПоследнихВалютаЦены.Курс, 0) > 0
		|											И ЕСТЬNULL(КурсыСрезПоследнихВалютаДокумента.Кратность, 0) > 0
		|											И ЕСТЬNULL(КурсыСрезПоследнихВалютаДокумента.Курс, 0) > 0
		|										ТОГДА КурсыСрезПоследнихВалютаЦены.Курс * КурсыСрезПоследнихВалютаДокумента.Кратность / (КурсыСрезПоследнихВалютаДокумента.Курс * КурсыСрезПоследнихВалютаЦены.Кратность)
		|									ИНАЧЕ 0
		|								КОНЕЦ
		|						ИНАЧЕ 1
		|					КОНЕЦ
		|			ИНАЧЕ 0
		|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК Цена,
		|	{ПоляЗапросаАвтоматическойСкидки}
		
		|	ВЫРАЗИТЬ({СвободныеОстаткиВНаличии} / 
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(СоглашениеТовары.Упаковка, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
		|			ТОГДА ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки3, 1)
		|		ИНАЧЕ ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1)
		|	КОНЕЦ КАК ЧИСЛО(15, 3)) КАК ВНаличииОстаток,
		
		|	{СвободныеОстаткиВНаличии} КАК ВНаличииВБазовыхЕдиницах,
		
		|	ВЫРАЗИТЬ({ВсеОстаткиДоступно} / 
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(СоглашениеТовары.Упаковка, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
		|			ТОГДА ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки3, 1)
		|		ИНАЧЕ ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1)
		|	КОНЕЦ КАК ЧИСЛО(15, 3)) КАК Доступно
		
		|ИЗ
		
		|	{СправочникНоменклатура}
		
		
		
		
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СоглашенияСКлиентами.Товары КАК СоглашениеТовары
		|	ПО (СоглашениеТовары.Ссылка = &Соглашение)
		|		И СправочникНоменклатура.Ссылка = СоглашениеТовары.Номенклатура
		|		И (СоглашениеТовары.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
		
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СоглашенияСКлиентами.ЦеновыеГруппы КАК СоглашениеЦеновыеГруппы
		|	ПО (СоглашениеЦеновыеГруппы.Ссылка = &Соглашение)
		|		И СправочникНоменклатура.ЦеноваяГруппа = СоглашениеЦеновыеГруппы.ЦеноваяГруппа
		
		|	{ЦеныНоменклатуры}
		|	И (ЦеныНоменклатуры.ВидЦены = ВЫБОР
		|			КОГДА ЕСТЬNULL(СоглашениеТовары.Цена, 0) > 0
		|				ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
		|			КОГДА ЕСТЬNULL(СоглашениеТовары.ВидЦены, ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
		|				ТОГДА СоглашениеТовары.ВидЦены
		|			КОГДА ЕСТЬNULL(СоглашениеЦеновыеГруппы.ВидЦен, ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
		|				ТОГДА СоглашениеЦеновыеГруппы.ВидЦен
		|			ИНАЧЕ ЕСТЬNULL(ВЫРАЗИТЬ(&Соглашение КАК Справочник.СоглашенияСКлиентами).ВидЦен, ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка))
		|		КОНЕЦ)
		
		|	{КурсВалютыСоглашения}
		|	{КурсВалютыЦены}
		|	{КурсВалютыДокумента}
		
		|	{ВсеОстатки}
		|   {ТаблицаЗапросаАвтСкидки}
		
		|ГДЕ
		
		|	{ОтборНоменклатурыПоГруппе}
		|	{ОтборНоменклатурыПоСегменту}
		
		|";
		
	ИначеЕсли ВариантРасчетаЦен = Перечисления.ВариантыРасчетаЦенПоСоглашениямСКлиентами.ВидЦенВШапкеВидыЦенПоЦеновымГруппамУточненныеЦеныПоНоменклатуре Тогда
		
		ШаблонТекстаЗапроса = 
		"ВЫБРАТЬ
		
		|	{СправочникНоменклатураОбщиеПоля}
		
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(СоглашениеТовары.Упаковка, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
		|			ТОГДА СоглашениеТовары.Упаковка
		|		ИНАЧЕ ЕСТЬNULL(ЦеныНоменклатуры.Упаковка, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка))
		|	КОНЕЦ КАК Упаковка,
		
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(СоглашениеТовары.Цена, 0) > 0
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
		|		КОГДА ЕСТЬNULL(СоглашениеЦеновыеГруппы.ВидЦен, ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
		|			ТОГДА СоглашениеЦеновыеГруппы.ВидЦен
		|		ИНАЧЕ ЕСТЬNULL(ВЫРАЗИТЬ(&Соглашение КАК Справочник.СоглашенияСКлиентами).ВидЦен, ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка))
		|	КОНЕЦ КАК ВидЦены,
		
		|	ВЫРАЗИТЬ(ВЫБОР
		|			КОГДА ЕСТЬNULL(СоглашениеТовары.Цена, 0) > 0
		|				ТОГДА СоглашениеТовары.Цена * ВЫБОР
		|						КОГДА &Валюта <> СоглашениеТовары.Ссылка.Валюта
		|							ТОГДА ВЫБОР
		|									КОГДА ЕСТЬNULL(КурсыСрезПоследнихВалютаСоглашения.Кратность, 0) > 0
		|											И ЕСТЬNULL(КурсыСрезПоследнихВалютаСоглашения.Курс, 0) > 0
		|											И ЕСТЬNULL(КурсыСрезПоследнихВалютаДокумента.Кратность, 0) > 0
		|											И ЕСТЬNULL(КурсыСрезПоследнихВалютаДокумента.Курс, 0) > 0
		|										ТОГДА КурсыСрезПоследнихВалютаСоглашения.Курс * КурсыСрезПоследнихВалютаДокумента.Кратность / (КурсыСрезПоследнихВалютаДокумента.Курс * КурсыСрезПоследнихВалютаСоглашения.Кратность)
		|									ИНАЧЕ 0
		|								КОНЕЦ
		|						ИНАЧЕ 1
		|					КОНЕЦ
		|			КОГДА ВЫБОР
		|						КОГДА ЕСТЬNULL(СоглашениеЦеновыеГруппы.ВидЦен, ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
		|							ТОГДА СоглашениеЦеновыеГруппы.ВидЦен
		|						ИНАЧЕ ЕСТЬNULL(ВЫРАЗИТЬ(&Соглашение КАК Справочник.СоглашенияСКлиентами).ВидЦен, ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка))
		|					КОНЕЦ <> ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
		|					И ЕСТЬNULL(ЦеныНоменклатуры.Цена, 0) > 0
		|				ТОГДА ЦеныНоменклатуры.Цена * ВЫБОР
		|						КОГДА &Валюта <> ЦеныНоменклатуры.Валюта
		|							ТОГДА ВЫБОР
		|									КОГДА ЕСТЬNULL(КурсыСрезПоследнихВалютаЦены.Кратность, 0) > 0
		|											И ЕСТЬNULL(КурсыСрезПоследнихВалютаЦены.Курс, 0) > 0
		|											И ЕСТЬNULL(КурсыСрезПоследнихВалютаДокумента.Кратность, 0) > 0
		|											И ЕСТЬNULL(КурсыСрезПоследнихВалютаДокумента.Курс, 0) > 0
		|										ТОГДА КурсыСрезПоследнихВалютаЦены.Курс * КурсыСрезПоследнихВалютаДокумента.Кратность / (КурсыСрезПоследнихВалютаДокумента.Курс * КурсыСрезПоследнихВалютаЦены.Кратность)
		|									ИНАЧЕ 0
		|								КОНЕЦ
		|						ИНАЧЕ 1
		|					КОНЕЦ
		|			ИНАЧЕ 0
		|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК Цена,
		|	{ПоляЗапросаАвтоматическойСкидки}
		
		|	ВЫРАЗИТЬ({СвободныеОстаткиВНаличии} / 
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(СоглашениеТовары.Упаковка, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
		|			ТОГДА ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки3, 1)
		|		ИНАЧЕ ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1)
		|	КОНЕЦ КАК ЧИСЛО(15, 3)) КАК ВНаличииОстаток,
		
		|	{СвободныеОстаткиВНаличии} КАК ВНаличииВБазовыхЕдиницах,
		
		|	ВЫРАЗИТЬ({ВсеОстаткиДоступно} / 
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(СоглашениеТовары.Упаковка, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
		|			ТОГДА ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки3, 1)
		|		ИНАЧЕ ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1)
		|	КОНЕЦ КАК ЧИСЛО(15, 3)) КАК Доступно
		
		|ИЗ
		
		|	{СправочникНоменклатура}
		
		
		
		
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СоглашенияСКлиентами.Товары КАК СоглашениеТовары
		|	ПО (СоглашениеТовары.Ссылка = &Соглашение)
		|		И СправочникНоменклатура.Ссылка = СоглашениеТовары.Номенклатура
		|		И (СоглашениеТовары.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
		
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СоглашенияСКлиентами.ЦеновыеГруппы КАК СоглашениеЦеновыеГруппы
		|	ПО (СоглашениеЦеновыеГруппы.Ссылка = &Соглашение)
		|		И СправочникНоменклатура.ЦеноваяГруппа = СоглашениеЦеновыеГруппы.ЦеноваяГруппа
		
		|	{ЦеныНоменклатуры}
		|	И (ЦеныНоменклатуры.ВидЦены = ВЫБОР
		|			КОГДА ЕСТЬNULL(СоглашениеТовары.Цена, 0) > 0
		|				ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
		|			КОГДА ЕСТЬNULL(СоглашениеЦеновыеГруппы.ВидЦен, ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
		|				ТОГДА СоглашениеЦеновыеГруппы.ВидЦен
		|			ИНАЧЕ ЕСТЬNULL(ВЫРАЗИТЬ(&Соглашение КАК Справочник.СоглашенияСКлиентами).ВидЦен, ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка))
		|		КОНЕЦ)
		
		|	{КурсВалютыСоглашения}
		|	{КурсВалютыЦены}
		|	{КурсВалютыДокумента}
		
		|	{ВсеОстатки}
		|   {ТаблицаЗапросаАвтСкидки}
		
		|ГДЕ
		
		|	{ОтборНоменклатурыПоГруппе}
		|	{ОтборНоменклатурыПоСегменту}
		
		|";
		
	ИначеЕсли ВариантРасчетаЦен = Перечисления.ВариантыРасчетаЦенПоСоглашениямСКлиентами.ВидыЦенПоЦеновымГруппамВидыЦенПоНоменклатуре Тогда
		
		ШаблонТекстаЗапроса = 
		"ВЫБРАТЬ
		
		|	{СправочникНоменклатураОбщиеПоля}
		
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(СоглашениеТовары.Упаковка, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
		|			ТОГДА СоглашениеТовары.Упаковка
		|		ИНАЧЕ ЕСТЬNULL(ЦеныНоменклатуры.Упаковка, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка))
		|	КОНЕЦ КАК Упаковка,
		
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(СоглашениеТовары.ВидЦены, ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
		|			ТОГДА СоглашениеТовары.ВидЦены
		|		ИНАЧЕ ЕСТЬNULL(СоглашениеЦеновыеГруппы.ВидЦен, ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка))
		|	КОНЕЦ КАК ВидЦены,
		
		|	ВЫРАЗИТЬ(ВЫБОР
		|			КОГДА ВЫБОР
		|						КОГДА ЕСТЬNULL(СоглашениеТовары.ВидЦены, ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
		|							ТОГДА СоглашениеТовары.ВидЦены
		|						ИНАЧЕ ЕСТЬNULL(СоглашениеЦеновыеГруппы.ВидЦен, ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка))
		|					КОНЕЦ <> ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
		|					И ЕСТЬNULL(ЦеныНоменклатуры.Цена, 0) > 0
		|				ТОГДА ЦеныНоменклатуры.Цена * ВЫБОР
		|						КОГДА &Валюта <> ЦеныНоменклатуры.Валюта
		|							ТОГДА ВЫБОР
		|									КОГДА ЕСТЬNULL(КурсыСрезПоследнихВалютаЦены.Кратность, 0) > 0
		|											И ЕСТЬNULL(КурсыСрезПоследнихВалютаЦены.Курс, 0) > 0
		|											И ЕСТЬNULL(КурсыСрезПоследнихВалютаДокумента.Кратность, 0) > 0
		|											И ЕСТЬNULL(КурсыСрезПоследнихВалютаДокумента.Курс, 0) > 0
		|										ТОГДА КурсыСрезПоследнихВалютаЦены.Курс * КурсыСрезПоследнихВалютаДокумента.Кратность / (КурсыСрезПоследнихВалютаДокумента.Курс * КурсыСрезПоследнихВалютаЦены.Кратность)
		|									ИНАЧЕ 0
		|								КОНЕЦ
		|						ИНАЧЕ 1
		|					КОНЕЦ
		|			ИНАЧЕ 0
		|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК Цена,
		|	{ПоляЗапросаАвтоматическойСкидки}
		
		|	ВЫРАЗИТЬ({СвободныеОстаткиВНаличии} / 
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(СоглашениеТовары.Упаковка, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
		|			ТОГДА ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки3, 1)
		|		ИНАЧЕ ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1)
		|	КОНЕЦ КАК ЧИСЛО(15, 3)) КАК ВНаличииОстаток,
		
		|	{СвободныеОстаткиВНаличии} КАК ВНаличииВБазовыхЕдиницах,
		
		|	ВЫРАЗИТЬ({ВсеОстаткиДоступно} / 
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(СоглашениеТовары.Упаковка, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
		|			ТОГДА ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки3, 1)
		|		ИНАЧЕ ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1)
		|	КОНЕЦ КАК ЧИСЛО(15, 3)) КАК Доступно
		
		|ИЗ
		
		|	{СправочникНоменклатура}
		
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СоглашенияСКлиентами.Товары КАК СоглашениеТовары
		|	ПО (СоглашениеТовары.Ссылка = &Соглашение)
		|		И СправочникНоменклатура.Ссылка = СоглашениеТовары.Номенклатура
		|		И (СоглашениеТовары.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
		
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СоглашенияСКлиентами.ЦеновыеГруппы КАК СоглашениеЦеновыеГруппы
		|	ПО (СоглашениеЦеновыеГруппы.Ссылка = &Соглашение)
		|		И СправочникНоменклатура.ЦеноваяГруппа = СоглашениеЦеновыеГруппы.ЦеноваяГруппа
		
		|	{ЦеныНоменклатуры}
		|	И (ЦеныНоменклатуры.ВидЦены = ВЫБОР
		|			КОГДА ЕСТЬNULL(СоглашениеТовары.ВидЦены, ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
		|				ТОГДА СоглашениеТовары.ВидЦены
		|			ИНАЧЕ ЕСТЬNULL(СоглашениеЦеновыеГруппы.ВидЦен, ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка))
		|		КОНЕЦ)
		
		|	{КурсВалютыЦены}
		|	{КурсВалютыДокумента}
		|	{ВсеОстатки}
		|   {ТаблицаЗапросаАвтСкидки}
		
		|ГДЕ
		
		|	{ОтборНоменклатурыПоГруппе}
		|	{ОтборНоменклатурыПоСегменту}
		
		|";
		
	КонецЕсли;
	
	Если ВариантРасчетаЦен = Перечисления.ВариантыРасчетаЦенПоСоглашениямСКлиентами.ВидыЦенПоЦеновымГруппамВидыЦенПоНоменклатуреУточненныеЦеныПоНоменклатуре Тогда
		
		ШаблонТекстаЗапроса = 
		"ВЫБРАТЬ
		
		|	{СправочникНоменклатураОбщиеПоля}
		
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(СоглашениеТовары.Упаковка, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
		|			ТОГДА СоглашениеТовары.Упаковка
		|		ИНАЧЕ ЕСТЬNULL(ЦеныНоменклатуры.Упаковка, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка))
		|	КОНЕЦ КАК Упаковка,
		
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(СоглашениеТовары.Цена, 0) > 0
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
		|		КОГДА ЕСТЬNULL(СоглашениеТовары.ВидЦены, ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
		|			ТОГДА СоглашениеТовары.ВидЦены
		|		ИНАЧЕ ЕСТЬNULL(СоглашениеЦеновыеГруппы.ВидЦен, ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка))
		|	КОНЕЦ КАК ВидЦены,
		
		|	ВЫРАЗИТЬ(ВЫБОР
		|			КОГДА ЕСТЬNULL(СоглашениеТовары.Цена, 0) > 0
		|				ТОГДА СоглашениеТовары.Цена * ВЫБОР
		|						КОГДА &Валюта <> СоглашениеТовары.Ссылка.Валюта
		|							ТОГДА ВЫБОР
		|									КОГДА ЕСТЬNULL(КурсыСрезПоследнихВалютаСоглашения.Кратность, 0) > 0
		|											И ЕСТЬNULL(КурсыСрезПоследнихВалютаСоглашения.Курс, 0) > 0
		|											И ЕСТЬNULL(КурсыСрезПоследнихВалютаДокумента.Кратность, 0) > 0
		|											И ЕСТЬNULL(КурсыСрезПоследнихВалютаДокумента.Курс, 0) > 0
		|										ТОГДА КурсыСрезПоследнихВалютаСоглашения.Курс * КурсыСрезПоследнихВалютаДокумента.Кратность / (КурсыСрезПоследнихВалютаДокумента.Курс * КурсыСрезПоследнихВалютаСоглашения.Кратность)
		|									ИНАЧЕ 0
		|								КОНЕЦ
		|						ИНАЧЕ 1
		|					КОНЕЦ
		|			КОГДА ВЫБОР
		|						КОГДА ЕСТЬNULL(СоглашениеТовары.ВидЦены, ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
		|							ТОГДА СоглашениеТовары.ВидЦены
		|						ИНАЧЕ ЕСТЬNULL(СоглашениеЦеновыеГруппы.ВидЦен, ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка))
		|					КОНЕЦ <> ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
		|					И ЕСТЬNULL(ЦеныНоменклатуры.Цена, 0) > 0
		|				ТОГДА ЦеныНоменклатуры.Цена * ВЫБОР
		|						КОГДА &Валюта <> ЦеныНоменклатуры.Валюта
		|							ТОГДА ВЫБОР
		|									КОГДА ЕСТЬNULL(КурсыСрезПоследнихВалютаЦены.Кратность, 0) > 0
		|											И ЕСТЬNULL(КурсыСрезПоследнихВалютаЦены.Курс, 0) > 0
		|											И ЕСТЬNULL(КурсыСрезПоследнихВалютаДокумента.Кратность, 0) > 0
		|											И ЕСТЬNULL(КурсыСрезПоследнихВалютаДокумента.Курс, 0) > 0
		|										ТОГДА КурсыСрезПоследнихВалютаЦены.Курс * КурсыСрезПоследнихВалютаДокумента.Кратность / (КурсыСрезПоследнихВалютаДокумента.Курс * КурсыСрезПоследнихВалютаЦены.Кратность)
		|									ИНАЧЕ 0
		|								КОНЕЦ
		|						ИНАЧЕ 1
		|					КОНЕЦ
		|			ИНАЧЕ 0
		|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК Цена,
		|	{ПоляЗапросаАвтоматическойСкидки}
		|	ВЫРАЗИТЬ({СвободныеОстаткиВНаличии} / 
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(СоглашениеТовары.Упаковка, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
		|			ТОГДА ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки3, 1)
		|		ИНАЧЕ ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1)
		|	КОНЕЦ КАК ЧИСЛО(15, 3)) КАК ВНаличииОстаток,
		
		|	{СвободныеОстаткиВНаличии} КАК ВНаличииВБазовыхЕдиницах,
		
		|	ВЫРАЗИТЬ({ВсеОстаткиДоступно} / 
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(СоглашениеТовары.Упаковка, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
		|			ТОГДА ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки3, 1)
		|		ИНАЧЕ ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1)
		|	КОНЕЦ КАК ЧИСЛО(15, 3)) КАК Доступно
		
		
		|ИЗ
		
		|	{СправочникНоменклатура}
		
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СоглашенияСКлиентами.Товары КАК СоглашениеТовары
		|	ПО (СоглашениеТовары.Ссылка = &Соглашение)
		|		И СправочникНоменклатура.Ссылка = СоглашениеТовары.Номенклатура
		|		И (СоглашениеТовары.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
		
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СоглашенияСКлиентами.ЦеновыеГруппы КАК СоглашениеЦеновыеГруппы
		|	ПО (СоглашениеЦеновыеГруппы.Ссылка = &Соглашение)
		|		И СправочникНоменклатура.ЦеноваяГруппа = СоглашениеЦеновыеГруппы.ЦеноваяГруппа
		
		|	{ЦеныНоменклатуры}
		|	И (ЦеныНоменклатуры.ВидЦены = ВЫБОР
		|			КОГДА ЕСТЬNULL(СоглашениеТовары.Цена, 0) > 0
		|				ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
		|			КОГДА ЕСТЬNULL(СоглашениеТовары.ВидЦены, ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
		|				ТОГДА СоглашениеТовары.ВидЦены
		|			ИНАЧЕ ЕСТЬNULL(СоглашениеЦеновыеГруппы.ВидЦен, ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка))
		|		КОНЕЦ)
		
		|	{КурсВалютыСоглашения}
		|	{КурсВалютыЦены}
		|	{КурсВалютыДокумента}
		
		|	{ВсеОстатки}
		|   {ТаблицаЗапросаАвтСкидки}
		
		|ГДЕ
		
		|	{ОтборНоменклатурыПоГруппе}
		|	{ОтборНоменклатурыПоСегменту}
		
		|";
		
	ИначеЕсли ВариантРасчетаЦен = Перечисления.ВариантыРасчетаЦенПоСоглашениямСКлиентами.ВидыЦенПоЦеновымГруппамУточненныеЦеныПоНоменклатуре Тогда
		
		ШаблонТекстаЗапроса = 
		"ВЫБРАТЬ
		
		|	{СправочникНоменклатураОбщиеПоля}
		
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(СоглашениеТовары.Цена, 0) > 0
		|			ТОГДА ЕСТЬNULL(СоглашениеТовары.Упаковка, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка))
		|		ИНАЧЕ ЕСТЬNULL(ЦеныНоменклатуры.Упаковка, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка))
		|	КОНЕЦ КАК Упаковка,
		
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(СоглашениеТовары.Цена, 0) > 0
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
		|		ИНАЧЕ ЕСТЬNULL(СоглашениеЦеновыеГруппы.ВидЦен, ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка))
		|	КОНЕЦ КАК ВидЦены,
		
		|	ВЫРАЗИТЬ(ВЫБОР
		|			КОГДА ЕСТЬNULL(СоглашениеТовары.Цена, 0) > 0
		|				ТОГДА СоглашениеТовары.Цена * ВЫБОР
		|						КОГДА &Валюта <> СоглашениеТовары.Ссылка.Валюта
		|							ТОГДА ВЫБОР
		|									КОГДА ЕСТЬNULL(КурсыСрезПоследнихВалютаСоглашения.Кратность, 0) > 0
		|											И ЕСТЬNULL(КурсыСрезПоследнихВалютаСоглашения.Курс, 0) > 0
		|											И ЕСТЬNULL(КурсыСрезПоследнихВалютаДокумента.Кратность, 0) > 0
		|											И ЕСТЬNULL(КурсыСрезПоследнихВалютаДокумента.Курс, 0) > 0
		|										ТОГДА КурсыСрезПоследнихВалютаСоглашения.Курс * КурсыСрезПоследнихВалютаДокумента.Кратность / (КурсыСрезПоследнихВалютаДокумента.Курс * КурсыСрезПоследнихВалютаСоглашения.Кратность)
		|									ИНАЧЕ 0
		|								КОНЕЦ
		|						ИНАЧЕ 1
		|					КОНЕЦ
		|			КОГДА ВЫБОР
		|						КОГДА ЕСТЬNULL(СоглашениеТовары.Цена, 0) > 0
		|							ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
		|						ИНАЧЕ ЕСТЬNULL(СоглашениеЦеновыеГруппы.ВидЦен, ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка))
		|					КОНЕЦ <> ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
		|					И ЕСТЬNULL(ЦеныНоменклатуры.Цена, 0) > 0
		|				ТОГДА ЦеныНоменклатуры.Цена * ВЫБОР
		|						КОГДА &Валюта <> ЦеныНоменклатуры.Валюта
		|							ТОГДА ВЫБОР
		|									КОГДА ЕСТЬNULL(КурсыСрезПоследнихВалютаЦены.Кратность, 0) > 0
		|											И ЕСТЬNULL(КурсыСрезПоследнихВалютаЦены.Курс, 0) > 0
		|											И ЕСТЬNULL(КурсыСрезПоследнихВалютаДокумента.Кратность, 0) > 0
		|											И ЕСТЬNULL(КурсыСрезПоследнихВалютаДокумента.Курс, 0) > 0
		|										ТОГДА КурсыСрезПоследнихВалютаЦены.Курс * КурсыСрезПоследнихВалютаДокумента.Кратность / (КурсыСрезПоследнихВалютаДокумента.Курс * КурсыСрезПоследнихВалютаЦены.Кратность)
		|									ИНАЧЕ 0
		|								КОНЕЦ
		|						ИНАЧЕ 1
		|					КОНЕЦ
		|			ИНАЧЕ 0
		|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК Цена,
		|	{ПоляЗапросаАвтоматическойСкидки}
		|	ВЫРАЗИТЬ({СвободныеОстаткиВНаличии} / 
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(СоглашениеТовары.Цена, 0) > 0
		|			ТОГДА ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки3, 1)
		|		ИНАЧЕ ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1)
		|	КОНЕЦ КАК ЧИСЛО(15, 3)) КАК ВНаличииОстаток,
		
		|	{СвободныеОстаткиВНаличии} КАК ВНаличииВБазовыхЕдиницах,
		
		|	ВЫРАЗИТЬ({ВсеОстаткиДоступно} / 
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(СоглашениеТовары.Цена, 0) > 0
		|			ТОГДА ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки3, 1)
		|		ИНАЧЕ ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1)
		|	КОНЕЦ КАК ЧИСЛО(15, 3)) КАК Доступно
		
		|ИЗ
		
		|	{СправочникНоменклатура}
		
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СоглашенияСКлиентами.Товары КАК СоглашениеТовары
		|	ПО (СоглашениеТовары.Ссылка = &Соглашение)
		|		И СправочникНоменклатура.Ссылка = СоглашениеТовары.Номенклатура
		|		И (СоглашениеТовары.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
		
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СоглашенияСКлиентами.ЦеновыеГруппы КАК СоглашениеЦеновыеГруппы
		|	ПО (СоглашениеЦеновыеГруппы.Ссылка = &Соглашение)
		|		И СправочникНоменклатура.ЦеноваяГруппа = СоглашениеЦеновыеГруппы.ЦеноваяГруппа
		
		|	{ЦеныНоменклатуры}
		|	И (ЦеныНоменклатуры.ВидЦены = ВЫБОР
		|			КОГДА ЕСТЬNULL(СоглашениеТовары.Цена, 0) > 0
		|				ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
		|				ИНАЧЕ ЕСТЬNULL(СоглашениеЦеновыеГруппы.ВидЦен, ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка))
		|		КОНЕЦ)
		
		|	{КурсВалютыСоглашения}
		|	{КурсВалютыЦены}
		|	{КурсВалютыДокумента}
		
		|	{ВсеОстатки}
		|   {ТаблицаЗапросаАвтСкидки}
		
		|ГДЕ
		
		|	{ОтборНоменклатурыПоГруппе}
		|	{ОтборНоменклатурыПоСегменту}
		
		|";
		
	ИначеЕсли ВариантРасчетаЦен = Перечисления.ВариантыРасчетаЦенПоСоглашениямСКлиентами.ВидЦенВШапке Тогда
		
		ШаблонТекстаЗапроса = 
		"ВЫБРАТЬ
		
		|	{СправочникНоменклатураОбщиеПоля}
		
		|	&ВидыЦен КАК ВидЦены,
		
		|	ЕСТЬNULL(ЦеныНоменклатуры.Упаковка, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) КАК Упаковка,
		
		|	ВЫРАЗИТЬ(ЕСТЬNULL(ЦеныНоменклатуры.Цена, 0) * ВЫБОР
		|			КОГДА &Валюта <> ЦеныНоменклатуры.Валюта
		|				ТОГДА ВЫБОР
		|						КОГДА ЕСТЬNULL(КурсыСрезПоследнихВалютаЦены.Кратность, 0) > 0
		|								И ЕСТЬNULL(КурсыСрезПоследнихВалютаЦены.Курс, 0) > 0
		|								И ЕСТЬNULL(КурсыСрезПоследнихВалютаДокумента.Кратность, 0) > 0
		|								И ЕСТЬNULL(КурсыСрезПоследнихВалютаДокумента.Курс, 0) > 0
		|							ТОГДА КурсыСрезПоследнихВалютаЦены.Курс * КурсыСрезПоследнихВалютаДокумента.Кратность / (КурсыСрезПоследнихВалютаДокумента.Курс * КурсыСрезПоследнихВалютаЦены.Кратность)
		|						ИНАЧЕ 0
		|					КОНЕЦ
		|			ИНАЧЕ 1
		|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК Цена,
		|	ВЫРАЗИТЬ({СвободныеОстаткиВНаличии} / ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1) КАК ЧИСЛО(15, 3)) КАК ВНаличииОстаток,
		|	{СвободныеОстаткиВНаличии} КАК ВНаличииВБазовыхЕдиницах,
		|	ВЫРАЗИТЬ({ВсеОстаткиДоступно} / ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1) КАК ЧИСЛО(15, 3)) КАК Доступно
		
		|ИЗ
		
		|	{СправочникНоменклатура}
		
		|	{ЦеныНоменклатуры}
		|	И (ЦеныНоменклатуры.ВидЦены = &ВидыЦен)
		
		|	{КурсВалютыЦены}
		|	{КурсВалютыДокумента}
		|	{ВсеОстатки}
		
		|ГДЕ
		
		|	{ОтборНоменклатурыПоГруппе}
		|	{ОтборНоменклатурыПоСегменту}
		
		|";
		
	ИначеЕсли ВариантРасчетаЦен = Перечисления.ВариантыРасчетаЦенПоСоглашениямСКлиентами.ВидыЦенПоЦеновымГруппам Тогда
		
		ШаблонТекстаЗапроса = 
		"ВЫБРАТЬ
		
		|	{СправочникНоменклатураОбщиеПоля}
		
		|	ЕСТЬNULL(ЦеныНоменклатуры.Упаковка, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) КАК Упаковка,
		|	ЕСТЬNULL(СоглашениеЦеновыеГруппы.ВидЦен, ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)) КАК ВидЦены,
		
		|	ВЫРАЗИТЬ(ЕСТЬNULL(ЦеныНоменклатуры.Цена, 0) * ВЫБОР
		|			КОГДА &Валюта <> ЦеныНоменклатуры.Валюта
		|				ТОГДА ВЫБОР
		|						КОГДА ЕСТЬNULL(КурсыСрезПоследнихВалютаЦены.Кратность, 0) > 0
		|								И ЕСТЬNULL(КурсыСрезПоследнихВалютаЦены.Курс, 0) > 0
		|								И ЕСТЬNULL(КурсыСрезПоследнихВалютаДокумента.Кратность, 0) > 0
		|								И ЕСТЬNULL(КурсыСрезПоследнихВалютаДокумента.Курс, 0) > 0
		|							ТОГДА КурсыСрезПоследнихВалютаЦены.Курс * КурсыСрезПоследнихВалютаДокумента.Кратность / (КурсыСрезПоследнихВалютаДокумента.Курс * КурсыСрезПоследнихВалютаЦены.Кратность)
		|						ИНАЧЕ 0
		|					КОНЕЦ
		|			ИНАЧЕ 1
		|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК Цена,
		|	{ПоляЗапросаАвтоматическойСкидки}
		|	ВЫРАЗИТЬ({СвободныеОстаткиВНаличии} / ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1) КАК ЧИСЛО(15, 3)) КАК ВНаличииОстаток,
		|	{СвободныеОстаткиВНаличии} КАК ВНаличииВБазовыхЕдиницах,
		|	ВЫРАЗИТЬ({ВсеОстаткиДоступно} / ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1) КАК ЧИСЛО(15, 3)) КАК Доступно
		
		|ИЗ
		
		|	{СправочникНоменклатура}
		
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СоглашенияСКлиентами.ЦеновыеГруппы КАК СоглашениеЦеновыеГруппы
		|	ПО (СоглашениеЦеновыеГруппы.Ссылка = &Соглашение)
		|		И СправочникНоменклатура.ЦеноваяГруппа = СоглашениеЦеновыеГруппы.ЦеноваяГруппа
		
		|	{ЦеныНоменклатуры}
		|	И (ЦеныНоменклатуры.ВидЦены = СоглашениеЦеновыеГруппы.ВидЦен)
		
		|	{КурсВалютыЦены}
		|	{КурсВалютыДокумента}
		|	{ВсеОстатки}
		|   {ТаблицаЗапросаАвтСкидки}
		
		|ГДЕ
		
		|	{ОтборНоменклатурыПоГруппе}
		|	{ОтборНоменклатурыПоСегменту}
		
		|";
		
	ИначеЕсли ВариантРасчетаЦен = Перечисления.ВариантыРасчетаЦенПоСоглашениямСКлиентами.ВидыЦенПоНоменклатуре Тогда
		
		ШаблонТекстаЗапроса = 
		"ВЫБРАТЬ
		
		|	{СправочникНоменклатураОбщиеПоля}
		
		|	ЕСТЬNULL(СоглашениеТовары.Упаковка, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) КАК Упаковка,
		|	ЕСТЬNULL(СоглашениеТовары.ВидЦены, ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)) КАК ВидЦены,
		|	ВЫРАЗИТЬ(ЕСТЬNULL(ЦеныНоменклатуры.Цена, 0) * ВЫБОР
		|			КОГДА &Валюта <> ЦеныНоменклатуры.Валюта
		|				ТОГДА ВЫБОР
		|						КОГДА ЕСТЬNULL(КурсыСрезПоследнихВалютаЦены.Кратность, 0) > 0
		|								И ЕСТЬNULL(КурсыСрезПоследнихВалютаЦены.Курс, 0) > 0
		|								И ЕСТЬNULL(КурсыСрезПоследнихВалютаДокумента.Кратность, 0) > 0
		|								И ЕСТЬNULL(КурсыСрезПоследнихВалютаДокумента.Курс, 0) > 0
		|							ТОГДА КурсыСрезПоследнихВалютаЦены.Курс * КурсыСрезПоследнихВалютаДокумента.Кратность / (КурсыСрезПоследнихВалютаДокумента.Курс * КурсыСрезПоследнихВалютаЦены.Кратность)
		|						ИНАЧЕ 0
		|					КОНЕЦ
		|			ИНАЧЕ 1
		|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК Цена,
		|	ВЫРАЗИТЬ({СвободныеОстаткиВНаличии} / ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки3, 1) КАК ЧИСЛО(15, 3)) КАК ВНаличииОстаток,
		|	{СвободныеОстаткиВНаличии} КАК ВНаличииВБазовыхЕдиницах,
		|	ВЫРАЗИТЬ({ВсеОстаткиДоступно} / ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки3, 1) КАК ЧИСЛО(15, 3)) КАК Доступно
		
		|ИЗ
		
		|	{СправочникНоменклатура}
		
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СоглашенияСКлиентами.Товары КАК СоглашениеТовары
		|	ПО (СоглашениеТовары.Ссылка = &Соглашение)
		|		И СправочникНоменклатура.Ссылка = СоглашениеТовары.Номенклатура
		|		И (СоглашениеТовары.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
		
		|	{ЦеныНоменклатуры}
		|	И (ЦеныНоменклатуры.ВидЦены = СоглашениеТовары.ВидЦены) 
		
		|	{КурсВалютыЦены}
		|	{КурсВалютыДокумента}
		|	{ВсеОстатки}
		
		|ГДЕ
		
		|	{ОтборНоменклатурыПоГруппе}
		|	{ОтборНоменклатурыПоСегменту}
		
		|";
		
	ИначеЕсли ВариантРасчетаЦен = Перечисления.ВариантыРасчетаЦенПоСоглашениямСКлиентами.ВидыЦенПоНоменклатуреУточненныеЦеныПоНоменклатуре Тогда
		
		ШаблонТекстаЗапроса = 
		"ВЫБРАТЬ
		
		|	{СправочникНоменклатураОбщиеПоля}
		
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(СоглашениеТовары.Цена, 0) > 0
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
		|		ИНАЧЕ ЕСТЬNULL(СоглашениеТовары.ВидЦены, ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка))
		|	КОНЕЦ КАК ВидЦены,
		
		|	ВЫРАЗИТЬ(ВЫБОР
		|			КОГДА ЕСТЬNULL(СоглашениеТовары.Цена, 0) > 0
		|				ТОГДА СоглашениеТовары.Цена * ВЫБОР
		|						КОГДА &Валюта <> СоглашениеТовары.Ссылка.Валюта
		|							ТОГДА ВЫБОР
		|									КОГДА ЕСТЬNULL(КурсыСрезПоследнихВалютаСоглашения.Кратность, 0) > 0
		|											И ЕСТЬNULL(КурсыСрезПоследнихВалютаСоглашения.Курс, 0) > 0
		|											И ЕСТЬNULL(КурсыСрезПоследнихВалютаДокумента.Кратность, 0) > 0
		|											И ЕСТЬNULL(КурсыСрезПоследнихВалютаДокумента.Курс, 0) > 0
		|										ТОГДА КурсыСрезПоследнихВалютаСоглашения.Курс * КурсыСрезПоследнихВалютаДокумента.Кратность / (КурсыСрезПоследнихВалютаДокумента.Курс * КурсыСрезПоследнихВалютаСоглашения.Кратность)
		|									ИНАЧЕ 0
		|								КОНЕЦ
		|						ИНАЧЕ 1
		|					КОНЕЦ
		|			КОГДА ВЫБОР
		|					КОГДА ЕСТЬNULL(СоглашениеТовары.Цена, 0) > 0
		|						ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
		|					КОГДА ЕСТЬNULL(СоглашениеТовары.ВидЦены, ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
		|						ТОГДА СоглашениеТовары.ВидЦены
		|				КОНЕЦ <> ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
		|				ТОГДА ЕСТЬNULL(ЦеныНоменклатуры.Цена, 0) * ВЫБОР
		|						КОГДА &Валюта <> ЦеныНоменклатуры.Валюта
		|							ТОГДА ВЫБОР
		|									КОГДА ЕСТЬNULL(КурсыСрезПоследнихВалютаЦены.Кратность, 0) > 0
		|											И ЕСТЬNULL(КурсыСрезПоследнихВалютаЦены.Курс, 0) > 0
		|											И ЕСТЬNULL(КурсыСрезПоследнихВалютаДокумента.Кратность, 0) > 0
		|											И ЕСТЬNULL(КурсыСрезПоследнихВалютаДокумента.Курс, 0) > 0
		|										ТОГДА КурсыСрезПоследнихВалютаЦены.Курс * КурсыСрезПоследнихВалютаДокумента.Кратность / (КурсыСрезПоследнихВалютаДокумента.Курс * КурсыСрезПоследнихВалютаЦены.Кратность)
		|									ИНАЧЕ 0
		|								КОНЕЦ
		|						ИНАЧЕ 1
		|					КОНЕЦ
		|			ИНАЧЕ 0
		|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК Цена,
		
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(СоглашениеТовары.Цена, 0) > 0
		|				ИЛИ ЕСТЬNULL(СоглашениеТовары.ВидЦены, ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
		|			ТОГДА ЕСТЬNULL(СоглашениеТовары.Упаковка, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка))
		|		ИНАЧЕ ЕСТЬNULL(ЦеныНоменклатуры.Упаковка, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка))
		|	КОНЕЦ КАК Упаковка,
		|	ВЫРАЗИТЬ({СвободныеОстаткиВНаличии} / 
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(СоглашениеТовары.Цена, 0) > 0
		|				ИЛИ ЕСТЬNULL(СоглашениеТовары.ВидЦены, ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
		|			ТОГДА ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки3, 1)
		|		ИНАЧЕ ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1)
		|	КОНЕЦ КАК ЧИСЛО(15, 3)) КАК ВНаличииОстаток,
		
		|	{СвободныеОстаткиВНаличии} КАК ВНаличииВБазовыхЕдиницах,
		
		|	ВЫРАЗИТЬ({ВсеОстаткиДоступно} / 
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(СоглашениеТовары.Цена, 0) > 0
		|				ИЛИ ЕСТЬNULL(СоглашениеТовары.ВидЦены, ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
		|			ТОГДА ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки3, 1)
		|		ИНАЧЕ ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1)
		|	КОНЕЦ КАК ЧИСЛО(15, 3)) КАК Доступно
		
		|ИЗ
		
		|	{СправочникНоменклатура}
		
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СоглашенияСКлиентами.Товары КАК СоглашениеТовары
		|	ПО (СоглашениеТовары.Ссылка = &Соглашение)
		|		И СправочникНоменклатура.Ссылка = СоглашениеТовары.Номенклатура
		|		И (СоглашениеТовары.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
		
		|	{ЦеныНоменклатуры}
		|	И (ЦеныНоменклатуры.ВидЦены = ВЫБОР
		|			КОГДА ЕСТЬNULL(СоглашениеТовары.Цена, 0) > 0
		|				ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
		|			КОГДА ЕСТЬNULL(СоглашениеТовары.ВидЦены, ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
		|				ТОГДА СоглашениеТовары.ВидЦены
		|		КОНЕЦ)
		
		|	{КурсВалютыСоглашения}
		|	{КурсВалютыЦены}
		|	{КурсВалютыДокумента}
		
		|	{ВсеОстатки}
		
		|ГДЕ
		
		|	{ОтборНоменклатурыПоГруппе}
		|	{ОтборНоменклатурыПоСегменту}
		
		|";
		
	ИначеЕсли ВариантРасчетаЦен = Перечисления.ВариантыРасчетаЦенПоСоглашениямСКлиентами.УточненныеЦеныПоНоменклатуре Тогда
		
		ШаблонТекстаЗапроса = 
		"ВЫБРАТЬ
		
		|	{СправочникНоменклатураОбщиеПоля}
		
		|	ЕСТЬNULL(СоглашениеТовары.Упаковка, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) КАК Упаковка,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка) КАК ВидЦены,
		
		|	ВЫРАЗИТЬ(ЕСТЬNULL(СоглашениеТовары.Цена, 0) * ВЫБОР
		|						КОГДА &Валюта <> СоглашениеТовары.Ссылка.Валюта
		|							ТОГДА ВЫБОР
		|									КОГДА ЕСТЬNULL(КурсыСрезПоследнихВалютаСоглашения.Кратность, 0) > 0
		|											И ЕСТЬNULL(КурсыСрезПоследнихВалютаСоглашения.Курс, 0) > 0
		|											И ЕСТЬNULL(КурсыСрезПоследнихВалютаДокумента.Кратность, 0) > 0
		|											И ЕСТЬNULL(КурсыСрезПоследнихВалютаДокумента.Курс, 0) > 0
		|										ТОГДА КурсыСрезПоследнихВалютаСоглашения.Курс * КурсыСрезПоследнихВалютаДокумента.Кратность / (КурсыСрезПоследнихВалютаДокумента.Курс * КурсыСрезПоследнихВалютаСоглашения.Кратность)
		|									ИНАЧЕ 0
		|								КОНЕЦ
		|						ИНАЧЕ 1
		|					КОНЕЦ КАК ЧИСЛО(15, 2)) КАК Цена,
		|	ВЫРАЗИТЬ({СвободныеОстаткиВНаличии} / ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки3, 1) КАК ЧИСЛО(15, 3)) КАК ВНаличииОстаток,
		|	{СвободныеОстаткиВНаличии} КАК ВНаличииВБазовыхЕдиницах,
		|	ВЫРАЗИТЬ({ВсеОстаткиДоступно} / ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки3, 1) КАК ЧИСЛО(15, 3)) КАК Доступно
		
		|ИЗ
		
		|	{СправочникНоменклатура}
		
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СоглашенияСКлиентами.Товары КАК СоглашениеТовары
		|	ПО (СоглашениеТовары.Ссылка = &Соглашение)
		|		И СправочникНоменклатура.Ссылка = СоглашениеТовары.Номенклатура
		|		И (СоглашениеТовары.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
		
		|	{КурсВалютыСоглашения}
		|	{КурсВалютыДокумента}
		
		|	{ВсеОстатки}
		
		|ГДЕ
		
		|	{ОтборНоменклатурыПоГруппе}
		|	{ОтборНоменклатурыПоСегменту}
		
		|";
		
	КонецЕсли;
	
	ШаблонТекстаЗапроса = СтрЗаменить(ШаблонТекстаЗапроса,
		"&ТекстЗапросаКоэффициентУпаковки1",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
		"ЦеныНоменклатуры.Упаковка",
		"ЦеныНоменклатуры.Номенклатура"));
	ШаблонТекстаЗапроса = СтрЗаменить(ШаблонТекстаЗапроса,
		"&ТекстЗапросаКоэффициентУпаковки3",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
		"СоглашениеТовары.Упаковка",
		"СоглашениеТовары.Номенклатура"));
	
	Возврат ШаблонТекстаЗапроса;
	//ТестРазница
КонецФункции
// - [Rineco], [Киселев А.] [22.07.2021]