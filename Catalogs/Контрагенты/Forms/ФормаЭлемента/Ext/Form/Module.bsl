//++Шерстюк Ю.Ю. 23.03.21 Задача № 6699 переносим в модуль объекта, чтобы проверка проходила при любом создании объекта
//&НаКлиенте
//Процедура Рин1_ПередЗаписьюПеред(Отказ, ПараметрыЗаписи)
//	
//	КоллекцияКонтактнойИнформации = ЭтаФорма.КонтактнаяИнформацияОписаниеДополнительныхРеквизитов;
//	
//	ФактАдресЗаполнен = Ложь;
//	ЮрАдресЗаполнен = Ложь;
////{{20200826 ГлазуновДВ	
//	Если ВидКонтрагента = "ФизЛицо" тогда
//		ФактАдресЗаполнен = Истина;
//		ЮрАдресЗаполнен = Истина;
//	КонецЕсли;
////}}20200826 ГлазуновДВ	

//	Для каждого ВидКонтактнойИнформации Из КоллекцияКонтактнойИнформации Цикл
//		Если не ЗначениеЗаполнено(ВидКонтактнойИнформации.Представление) Тогда
//			Продолжить;
//		КонецЕсли;
//		Если Строка(ВидКонтактнойИнформации.Вид) = "Фактический адрес" Тогда
//			ФактАдресЗаполнен = Истина;
//		КонецЕсли;
//		Если Строка(ВидКонтактнойИнформации.Вид) = "Юридический адрес" Тогда
//			ЮрАдресЗаполнен = Истина;
//		КонецЕсли
//	КонецЦикла;
//	
//	Если не ФактАдресЗаполнен или не ЮрАдресЗаполнен Тогда
//		
//		ТекстСообщения1 = ?(ФактАдресЗаполнен,"","Фактический адрес контрагента обязателен для заполнения!");
//		ТекстСообщения2 = ?(ЮрАдресЗаполнен,"","Юридический адрес контрагента обязателен для заполнения!");
//		ТекстСообщения = ТекстСообщения1 + ?(ТекстСообщения1 = "" или ТекстСообщения2 = "","",Символы.ПС) + ТекстСообщения2;  
//		
//		Сообщить(ТекстСообщения);
//		Отказ = Истина;
//	КонецЕсли;
//	
//КонецПроцедуры
//--Шерстюк Ю.Ю. 23.03.21
&НаСервере
&После("ПриСозданииНаСервере")
Процедура Рин1_ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	// Вставить содержимое метода.
	//bercut030720 Задача № 1521
	Для каждого ЭлементФормы Из Элементы Цикл
		
		Если не ТипЗнч(ЭлементФормы) = Тип("ГруппаФормы") Тогда
			Продолжить;
		КонецЕсли;
		
		Если не СтрНайти(ЭлементФормы.Имя,"ГруппаКонтактнаяИнформацияПоле") = 0 Тогда
			Если не СтрНайти(НРег(ЭлементФормы.Заголовок),"адрес") = 0 Тогда
				Попытка
					ИмяЭлемента = СокрЛП(СтрЗаменить(ЭлементФормы.Имя,"Группа",""));
					ЭлементФормы.ПодчиненныеЭлементы[ИмяЭлемента].РедактированиеТекста = Ложь;
				Исключение					
				КонецПопытки;
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	//
	
	//bercut 080720 Задача № 1495	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ТЗ_Рин1_РегионКлиента = РегистрыСведений.Рин1_РегионКлиента.СрезПоследних(,Новый Структура("Контрагент",Объект.Ссылка));
		Если не ТЗ_Рин1_РегионКлиента.Количество() = 0 Тогда
			ТЗ_Рин1_РегионКлиента.Сортировать("Период убыв");
			Рин1_РегионКлиента = ТЗ_Рин1_РегионКлиента[0].Рин1_РегионКлиента;
		КонецЕсли;	
	КонецЕсли;
	//
	
КонецПроцедуры

&НаСервере
Процедура Рин1_ПослеЗаписиНаСервереПосле(ТекущийОбъект, ПараметрыЗаписи)
	
	//bercut 080720 Задача № 1495
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КонтрагентыКонтактнаяИнформация.Регион КАК Регион
	|ИЗ
	|	Справочник.Контрагенты.КонтактнаяИнформация КАК КонтрагентыКонтактнаяИнформация
	|ГДЕ
	|	КонтрагентыКонтактнаяИнформация.Ссылка = &Ссылка
	|	И КонтрагентыКонтактнаяИнформация.Вид = &Вид";
	
	Запрос.УстановитьПараметр("Ссылка",Объект.Ссылка);
	Запрос.УстановитьПараметр("Вид",Справочники.ВидыКонтактнойИнформации.ФактАдресКонтрагента);
	РезультатЗапроса = Запрос.Выполнить();
	Если не РезультатЗапроса.Пустой() Тогда
		Рин1_РегионКлиента = РезультатЗапроса.Выгрузить()[0].Регион;
	КонецЕсли;
	
	Если не Рин1_РегионКлиента = "" Тогда
		ТЗ_Рин1_РегионКлиента = РегистрыСведений.Рин1_РегионКлиента.СрезПоследних(,Новый Структура("Контрагент,Рин1_РегионКлиента",Объект.Ссылка,Рин1_РегионКлиента));
		Если ТЗ_Рин1_РегионКлиента.Количество() = 0 Тогда
			МЗ_РегионКлиента = РегистрыСведений.Рин1_РегионКлиента.СоздатьМенеджерЗаписи();
			МЗ_РегионКлиента.Период =  ТекущаяДата();
			МЗ_РегионКлиента.Контрагент = Объект.Ссылка;
			МЗ_РегионКлиента.Рин1_РегионКлиента = Рин1_РегионКлиента;
			МЗ_РегионКлиента.Записать(Ложь);
		КонецЕсли;
	КонецЕсли;	
	//
	
КонецПроцедуры

