//////////////////////////////////////////////////////////////////////////////////////////
// Обработчики событий

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	РежимИспользованияМодальностиБулево = Параметры.РежимИспользованияМодальностиБулево;
	
	ОтборЖурналаРегистрации = Новый Структура;
	СтруктураПараметровОтбора = ПолучитьЗначенияОтбораЖурналаРегистрации("Событие");
	ЗначенияОтбораПоСобытию = СтруктураПараметровОтбора.Событие;
	СписокСобытий = Новый СписокЗначений;
	Для Каждого ЗначениеОтбораПоСобытию ИЗ ЗначенияОтбораПоСобытию Цикл
		Если Найти(ЗначениеОтбораПоСобытию.Значение, "Транзакция.") = 1 Тогда
			Продолжить;
		КонецЕсли;
		Если Найти(ЗначениеОтбораПоСобытию.Значение, "Transaction.") = 1 Тогда
			Продолжить;
		КонецЕсли;
		СписокСобытий.Добавить(ЗначениеОтбораПоСобытию.Ключ, СтрЗаменить(ЗначениеОтбораПоСобытию.Значение, ". ", "."));
	КонецЦикла;
	Если СписокСобытий.Количество() <> 0 Тогда
		ОтборЖурналаРегистрации.Вставить("Событие", СписокСобытий);
	КонецЕсли;
	
	Если Параметры.Пользователь <> Неопределено Тогда
		ИмяПользователя = Параметры.Пользователь;
		ОтборПоПользователю = Новый СписокЗначений;
		ПоПользователю = ОтборПоПользователю.Добавить(ИмяПользователя);
		Если ПустаяСтрока(ИмяПользователя) Тогда
			ПоПользователю.Представление = НСтр("ru = '<Пользователь по умолчанию>'", "ru");
		Иначе
			ПоПользователю.Представление = ИмяПользователя;
		КонецЕсли;
		
		ОтборЖурналаРегистрации.Вставить("Пользователь", ОтборПоПользователю);
	КонецЕсли;
	
	Если Параметры.ОбъектБД <> Неопределено Тогда
		ОбъектБД = Параметры.ОбъектБД;
		
		ОтборЖурналаРегистрации.Вставить("Данные", ОбъектБД);
	КонецЕсли;
	
	КоличествоПоказываемыхСобытий = 100;
	
	ПрочитатьЖурнал(ОтборЖурналаРегистрации);
	
КонецПроцедуры

&НаКлиенте
Процедура ПросмотрТекущегоСобытияВОтдельномОкне()
	
	Данные = Элементы.Журнал.ТекущиеДанные;
	Если Данные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ФормаСобытия = ПолучитьФорму("ВнешняяОбработка.Администратор1С.Форма.ФормаСобытия");
	ФормаСобытия.ДатаВремя    = Данные.Дата;
	ФормаСобытия.Пользователь = Данные.ИмяПользователя;
	ФормаСобытия.Приложение   = Данные.ПредставлениеПриложения;
	ФормаСобытия.Компьютер    = Данные.Компьютер;
	ФормаСобытия.Событие      = Данные.ПредставлениеСобытия;
	ФормаСобытия.Комментарий  = Данные.Комментарий;
	ФормаСобытия.Метаданные   = Данные.ПредставлениеМетаданных;
	ФормаСобытия.Данные       = Данные.Данные;
	ФормаСобытия.ПредставлениеДанных        = Данные.ПредставлениеДанных;
	ФормаСобытия.ИдентификаторТранзакции    = Данные.Транзакция;
	ФормаСобытия.СтатусЗавершенияТранзакции = Данные.СтатусТранзакции;
	ФормаСобытия.Сеанс         = Данные.Сеанс;
	ФормаСобытия.РабочийСервер = Данные.РабочийСервер;
	ФормаСобытия.ОсновнойIPПорт        = Данные.ОсновнойIPПорт;
	ФормаСобытия.ВспомогательныйIPПорт = Данные.ВспомогательныйIPПорт;
	ФормаСобытия.Открыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьДанныеДляПросмотра()
	ТекущиеДанные = Элементы.Журнал.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено ИЛИ ТекущиеДанные.Данные = Неопределено Тогда
		Возврат;
	КонецЕсли;

	ОткрытьЗначение(ТекущиеДанные.Данные);
КонецПроцедуры

&НаКлиенте
Процедура УстановитьИнтервалДатДляПросмотра()
	
	Диалог = Новый ДиалогРедактированияСтандартногоПериода;
	ДатаНачала    = Неопределено;
	ДатаОкончания = Неопределено;
	ОтборЖурналаРегистрации.Свойство("ДатаНачала", ДатаНачала);
	ОтборЖурналаРегистрации.Свойство("ДатаОкончания", ДатаОкончания);
	ДатаНачала    = ?(ТипЗнч(ДатаНачала)    = Тип("Дата"), ДатаНачала, '00010101000000');
	ДатаОкончания = ?(ТипЗнч(ДатаОкончания) = Тип("Дата"), ДатаОкончания, '00010101000000');
	Если ИнтервалДат.ДатаНачала <> ДатаНачала Тогда
		ИнтервалДат.ДатаНачала = ДатаНачала;
	КонецЕсли;
	Если ИнтервалДат.ДатаОкончания <> ДатаОкончания Тогда
		ИнтервалДат.ДатаОкончания = ДатаОкончания;
	КонецЕсли;
	Диалог.Период = ИнтервалДат;
	Если Диалог.Редактировать() Тогда
		ИнтервалДат = Диалог.Период;
		Если ИнтервалДат.ДатаНачала = '00010101000000' Тогда
			ОтборЖурналаРегистрации.Удалить("ДатаНачала");
		Иначе
			ОтборЖурналаРегистрации.Вставить("ДатаНачала", ИнтервалДат.ДатаНачала);
		КонецЕсли;
		Если ИнтервалДат.ДатаОкончания = '00010101000000' Тогда
			ОтборЖурналаРегистрации.Удалить("ДатаОкончания");
		Иначе
			ОтборЖурналаРегистрации.Вставить("ДатаОкончания", ИнтервалДат.ДатаОкончания);
		КонецЕсли;
		ОбновитьТекущийСписок();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьУстановитьОтбор()
	Перем ПараметрФормы, ФормаОтбора, Ответ, Оповещение;
	
	ПараметрФормы = Новый Структура("Отбор", ОтборЖурналаРегистрации);
	ФормаОтбора   = ПолучитьФорму("ВнешняяОбработка.Администратор1С.Форма.ОтборЖурналаРегистрации", ПараметрФормы);
	
	Если ИспользоватьРежимМодальности() Тогда
		// Стандартно в модальном режиме (8.2/8.3) с обработкой результата.
		Ответ = ФормаОтбора.ОткрытьМодально();
		ОтборЖурналаРегистрацииОбъектаЗавершение(Ответ, ФормаОтбора);
	Иначе
		// Стандартно в немодальном режиме (8.3) с обработкой результата.
		//+yuraos, 10.09.2015 - для обратной совместимости лучше использовать атрибут "ЭтаФорма", "ЭтотОбъект" появляется в режиме совместимости "Версия 8.3.3" и выше.
		Оповещение = Вычислить("Новый ОписаниеОповещения(""ОтборЖурналаРегистрацииОбъектаЗавершение"", ЭтаФормаЭтотОбъект(), ФормаОтбора)");
		Выполнить("ФормаОтбора.ОписаниеОповещенияОЗакрытии = Оповещение");
		ФормаОтбора.Открыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборЖурналаРегистрацииОбъектаЗавершение(Ответ, ФормаОтбора) Экспорт
	Перем ЗначениеОтвета;
	
	ЗначениеОтвета = ПолучитьКодВозвратаДиалога(Ответ);
	Если ЗначениеОтвета = Неопределено ИЛИ ЗначениеОтвета = КодВозвратаДиалога.НЕТ ИЛИ ЗначениеОтвета = КодВозвратаДиалога.Отмена ИЛИ ЗначениеОтвета = КодВозвратаДиалога.Таймаут Тогда
		Возврат;
	КонецЕсли;
	
	ОтборЖурналаРегистрации = ФормаОтбора.ОтборЖурналаРегистрации;
	ОбновитьТекущийСписок();
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьКодВозвратаДиалога(Ответ)
	Перем ЗначениеОтвета;
	
	Если ТипЗнч(Ответ) = Тип("Структура") Тогда
		ЗначениеОтвета = Ответ.Значение;
	Иначе
		ЗначениеОтвета = Ответ;
	КонецЕсли;
	
	Возврат ЗначениеОтвета;
	
КонецФункции

&НаКлиенте
Функция ЭтаФормаЭтотОбъект()
	Попытка
		Возврат Вычислить("ЭтаФорма");
	Исключение
		Возврат Вычислить("ЭтотОбъект");
	КонецПопытки;
КонецФункции

&НаКлиенте
Процедура ОтключитьОтбор()
	ОтборЖурналаРегистрации.Очистить();
	ОбновитьТекущийСписок();
КонецПроцедуры

&НаКлиенте
Процедура АктивныеПользователи()
	
	Попытка
		// Форма типовой конфигурации.
		ОткрытьФорму("Обработка.АктивныеПользователи.Форма", , ЭтаФорма, ЭтаФорма.КлючУникальности);
	Исключение
		Попытка
			ОткрытьФорму("ВнешняяОбработка.Администратор1С.Форма.АктивныеПользователи", , ЭтаФорма, ЭтаФорма.КлючУникальности);
		Исключение
			Сообщить(ОписаниеОшибки(), СтатусСообщения.Информация);
		КонецПопытки;
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьТекущийСписок() Экспорт
	
	ПрочитатьЖурнал(ОтборЖурналаРегистрации);
	// Позиционирование в конец списка
	Если Журнал.Количество() Тогда
		Элементы.Журнал.ТекущаяСтрока = Журнал[Журнал.Количество() - 1].ПолучитьИдентификатор();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КоличествоПоказываемыхСобытийПриИзменении(Элемент)
	ОбновитьТекущийСписок();
КонецПроцедуры

&НаКлиенте
Процедура ЖурналВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.Журнал.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Если Поле.Имя = "Данные" ИЛИ Поле.Имя = "ПредставлениеДанных" Тогда
		Если ТекущиеДанные.Данные <> Неопределено И (НЕ ТекущиеДанные.Данные.Пустая()) Тогда
			ОткрытьДанныеДляПросмотра();
			Возврат;
		КонецЕсли;
	КонецЕсли;
	ПросмотрТекущегоСобытияВОтдельномОкне();
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура ПрочитатьЖурнал(Знач ОтборЖурналаНаКлиенте)
	
	// Выгрузка ототборованных событий в таблицу
	Отбор = Новый Структура;
	Для Каждого ЭлементОтбора ИЗ ОтборЖурналаНаКлиенте Цикл
		Отбор.Вставить(ЭлементОтбора.Ключ, ЭлементОтбора.Значение);
	КонецЦикла;
	ТаблицаЗначенийСобытия = Новый ТаблицаЗначений;
	ПреобразованиеОтбора(Отбор);
	ВыгрузитьЖурналРегистрации(ТаблицаЗначенийСобытия, Отбор, , , КоличествоПоказываемыхСобытий);
	ТаблицаЗначенийСобытия.Колонки.Добавить("НомерРисунка", Новый ОписаниеТипов("Число"));
	Для Каждого СтрокаТаблицыЗначенийСобытия ИЗ ТаблицаЗначенийСобытия Цикл
		СтрокаТаблицыЗначенийСобытия.НомерРисунка = -1;
		Если СтрокаТаблицыЗначенийСобытия.Уровень = УровеньЖурналаРегистрации.Информация Тогда
			СтрокаТаблицыЗначенийСобытия.НомерРисунка = 0;
		ИначеЕсли СтрокаТаблицыЗначенийСобытия.Уровень = УровеньЖурналаРегистрации.Предупреждение Тогда
			СтрокаТаблицыЗначенийСобытия.НомерРисунка = 1;
		ИначеЕсли СтрокаТаблицыЗначенийСобытия.Уровень = УровеньЖурналаРегистрации.Ошибка Тогда
			СтрокаТаблицыЗначенийСобытия.НомерРисунка = 2;
		КонецЕсли;
		СтрокаТаблицыЗначенийСобытия.Пользователь = СтрокаТаблицыЗначенийСобытия.ИмяПользователя;
		Если СтрокаТаблицыЗначенийСобытия.ИмяПользователя = "" Тогда
			СтрокаТаблицыЗначенийСобытия.ИмяПользователя = НСтр("ru = '<Пользователь по умолчанию>'", "ru");
		КонецЕсли;
	КонецЦикла;
	
	// Преобразование в универсальный объект
	ЗначениеВРеквизитФормы(ТаблицаЗначенийСобытия, "Журнал");
	// Показать параметры отбора
	СформироватьПредставлениеОтбора();
	
КонецПроцедуры

&НаСервере
Процедура ПреобразованиеОтбора(Отбор)
	Для Каждого ЭлементОтбора ИЗ Отбор Цикл
		Если ТипЗнч(ЭлементОтбора.Значение) = Тип("СписокЗначений") Тогда
			ПреобразованиеЭлементаОтбора(Отбор, ЭлементОтбора);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ПреобразованиеЭлементаОтбора(Отбор, ЭлементОтбора)
	
	// Эта процедура вызывается, если элемент отбора является списком значений,
	// в отборе же должен быть массив значений. Преобразуем список в массив
	НовоеЗначение = Новый Массив;
	
	Для Каждого ЗначениеИзСписка ИЗ ЭлементОтбора.Значение Цикл
		Если ЭлементОтбора.Ключ = "Уровень" Тогда
			// Уровни сообщений представлены строкой, требуется преобразование в значение перечисления
			Обработка = РеквизитФормыВЗначение("Объект");
			НовоеЗначение.Добавить(Обработка.УровеньЖурналаРегистрацииЗначениеПоИмени(ЗначениеИзСписка.Значение));
		ИначеЕсли ЭлементОтбора.Ключ = "СтатусТранзакции" Тогда
			// Статусы транзакций представлены строкой, требуется преобразование в значение перечисления
			Обработка = РеквизитФормыВЗначение("Объект");
			НовоеЗначение.Добавить(Обработка.СтатусТранзакцииЗаписиЖурналаРегистрацииЗначениеПоИмени(ЗначениеИзСписка.Значение));
		Иначе
			НовоеЗначение.Добавить(ЗначениеИзСписка.Значение);
		КонецЕсли;
	КонецЦикла;
	
	Отбор.Вставить(ЭлементОтбора.Ключ, НовоеЗначение);
	
КонецПроцедуры
	
&НаСервере
Процедура СформироватьПредставлениеОтбора()
	
	ПредставлениеОтбора = "";
	// Интервал
	ДатаНачалаИнтервала    = Неопределено;
	ДатаОкончанияИнтервала = Неопределено;
	Если НЕ ОтборЖурналаРегистрации.Свойство("ДатаНачала", ДатаНачалаИнтервала) ИЛИ
		 ДатаНачалаИнтервала = Неопределено Тогда 
		ДатаНачалаИнтервала    = '00010101000000';
	КонецЕсли;
	Если НЕ ОтборЖурналаРегистрации.Свойство("ДатаОкончания", ДатаОкончанияИнтервала) ИЛИ
		 ДатаОкончанияИнтервала = Неопределено Тогда 
		ДатаОкончанияИнтервала = '00010101000000';
	КонецЕсли;
	Если НЕ (ДатаНачалаИнтервала = '00010101000000' И ДатаОкончанияИнтервала = '00010101000000') Тогда
		ПредставлениеОтбора = НСтр("ru = 'Интервал ('", "ru");
		СтрБезОграничений = НСтр("ru = 'без ограничений'", "ru");
		ПредставлениеОтбора = ПредставлениеОтбора + Формат(ДатаНачалаИнтервала,    "ДЛФ=DT; ДП='" + СтрБезОграничений + "'") + " - ";
		ПредставлениеОтбора = ПредставлениеОтбора + Формат(ДатаОкончанияИнтервала, "ДЛФ=DT; ДП='" + СтрБезОграничений + "'") + ")";
	КонецЕсли;
	
	// Остальные ограничения указываем просто по представлением, без указания значений ограничения
	Для Каждого ЭлементОтбора ИЗ ОтборЖурналаРегистрации Цикл
		ИмяОграничения = ЭлементОтбора.Ключ;
		Если ИмяОграничения = "ДатаНачала" ИЛИ ИмяОграничения = "ДатаОкончания" Тогда
			Продолжить; // Интервал уже выводили
		КонецЕсли;
		
		// Для некоторых ограничений меняем представление
		Если ИмяОграничения = "ИмяПриложения" Тогда
			ИмяОграничения = НСтр("ru = 'Приложение'", "ru");
		ИначеЕсли ИмяОграничения = "СтатусТранзакции" Тогда
			ИмяОграничения = ИмяОграничения = НСтр("ru = 'Статус транзакции'", "ru");
		ИначеЕсли ИмяОграничения = "ПредставлениеДанных" Тогда
			ИмяОграничения = ИмяОграничения = НСтр("ru = 'Представление данных'", "ru");
		ИначеЕсли ИмяОграничения = "РабочийСервер" Тогда
			ИмяОграничения = ИмяОграничения = НСтр("ru = 'Рабочий сервер'", "ru");
		ИначеЕсли ИмяОграничения = "ОсновнойIPПорт" Тогда
			ИмяОграничения = ИмяОграничения = НСтр("ru = 'Основной IP порт'", "ru");
		ИначеЕсли ИмяОграничения = "ВспомогательныйIPПорт" Тогда
			ИмяОграничения = ИмяОграничения = НСтр("ru = 'Вспомогательный IP порт'", "ru");
		КонецЕсли;
		
		Если НЕ ПустаяСтрока(ПредставлениеОтбора) Тогда 
			ПредставлениеОтбора = ПредставлениеОтбора + "; ";
		КонецЕсли;
		ПредставлениеОтбора = ПредставлениеОтбора + ИмяОграничения;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Функция ИспользоватьРежимМодальности()
	Возврат РежимИспользованияМодальностиБулево;
КонецФункции
