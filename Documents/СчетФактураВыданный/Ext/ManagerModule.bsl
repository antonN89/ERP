
////{{20201202 ГлазуновДВ Исправлена Ошибка, взято из релиза 2.4.12.71
//&Вместо("ПолучитьТаблицуТоваров")
//Функция Рин1_ПолучитьТаблицуТоваров(ПараметрыЗаполнения)
//	// Вставить содержимое метода.
//	//Результат = ПродолжитьВызов(ПараметрыЗаполнения);
//	//Возврат Результат;
//	// Заполняем табличную часть Товары только для Корректировочных или исправленных счетов-фактур.
//	// Если признаки переданы в данных заполнения, то берем оттуда, иначе из реквизитов заполняемого документа.
//	
//	ЭтоКорректировочный = ПараметрыЗаполнения.Корректировочный;
//	ЭтоИсправление = ПараметрыЗаполнения.Исправление;
//	ВалютаСчетаФактуры = ПараметрыЗаполнения.Валюта;
//	
//	Результат = Новый Структура("СчетФактураОснование,Корректировочный,Товары");
//	Результат.СчетФактураОснование = Документы.СчетФактураВыданный.ПустаяСсылка();
//	Результат.Корректировочный = ПараметрыЗаполнения.Корректировочный;
//	Результат.Товары = Документы.СчетФактураВыданный.ПустаяСсылка().Товары.Выгрузить();
//	
//	Если НЕ ЭтоКорректировочный И НЕ ЭтоИсправление Тогда
//		Возврат Результат;
//	КонецЕсли;
//	
//	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
//	
//	ДополнительныеПараметры = Новый Структура;
//	ДополнительныеПараметры.Вставить("ЭтоКорректировочный", ЭтоКорректировочный);
//	ДополнительныеПараметры.Вставить("ВалютаСчетаФактуры", ВалютаСчетаФактуры);
//	
//	// Получаем предварительную таблицу товаров по всем документам-основаниям.
//	
//	ТаблицаТорговыхДокументов = ПараметрыЗаполнения.ДокументыОснования.Скопировать();
//	ТаблицаТорговыхДокументов.Свернуть("ДокументОснование");
//	
//	ПоместитьТаблицуТоваровТорговыхДокументов(ТаблицаТорговыхДокументов.ВыгрузитьКолонку("ДокументОснование"),
//		МенеджерВременныхТаблиц, "вт_ТаблицаТоваровДокументовОснований", ДополнительныеПараметры);
//	
//	// Ищем предыдущие счета-фактуры. Если по таблице товаров счет-фактура не найден,
//	// то считаем, что предыдущий счет-фактура - это исходный счет-фактура.
//	
//	Запрос = Новый Запрос;
//	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
//	Запрос.УстановитьПараметр("ТаблицаТорговыхДокументов", ТаблицаТорговыхДокументов);
//	Запрос.Текст =
//	"ВЫБРАТЬ
//	|	ТаблицаТорговыхДокументов.ДокументОснование КАК ДокументОснование
//	|ПОМЕСТИТЬ вт_ТорговыеДокументыОснования
//	|ИЗ
//	|	&ТаблицаТорговыхДокументов КАК ТаблицаТорговыхДокументов
//	|
//	|ИНДЕКСИРОВАТЬ ПО
//	|	ДокументОснование
//	|;
//	|
//	|////////////////////////////////////////////////////////////////////////////////
//	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
//	|	вт_ТаблицаТоваров.ИсходныйСчетФактура КАК ИсходныйСчетФактура,
//	|	вт_ТаблицаТоваров.Номенклатура КАК Номенклатура,
//	|	вт_ТаблицаТоваров.Характеристика КАК Характеристика,
//	|	вт_ТаблицаТоваров.НоменклатураНабора КАК НоменклатураНабора,
//	|	вт_ТаблицаТоваров.ХарактеристикаНабора КАК ХарактеристикаНабора,
//	|	вт_ТаблицаТоваров.Содержание КАК Содержание,
//	|	вт_ТаблицаТоваров.ТипЗапасов КАК ТипЗапасов,
//	|	вт_ТаблицаТоваров.КодТНВЭД КАК КодТНВЭД,
//	|	вт_ТаблицаТоваров.НомерГТД КАК НомерГТД,
//	|	вт_ТаблицаТоваров.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
//	|	вт_ТаблицаТоваров.СтавкаНДС КАК СтавкаНДС,
//	|	МАКСИМУМ(СчетФактураВыданныйТовары.Ссылка.Дата) КАК ПредыдущийСчетФактураДата
//	|ПОМЕСТИТЬ вт_КрайниеПериоды
//	|ИЗ
//	|	вт_ТаблицаТоваровДокументовОснований КАК вт_ТаблицаТоваров
//	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.Товары КАК СчетФактураВыданныйТовары
//	|		ПО вт_ТаблицаТоваров.ИсходныйСчетФактура = СчетФактураВыданныйТовары.ИсходныйСчетФактура
//	|			И вт_ТаблицаТоваров.Номенклатура = СчетФактураВыданныйТовары.Номенклатура
//	|			И вт_ТаблицаТоваров.Характеристика = СчетФактураВыданныйТовары.Характеристика
//	|			И вт_ТаблицаТоваров.НоменклатураНабора = СчетФактураВыданныйТовары.НоменклатураНабора
//	|			И вт_ТаблицаТоваров.ХарактеристикаНабора = СчетФактураВыданныйТовары.ХарактеристикаНабора
//	|			И вт_ТаблицаТоваров.Содержание = СчетФактураВыданныйТовары.Содержание
//	|			И вт_ТаблицаТоваров.ТипЗапасов = СчетФактураВыданныйТовары.ТипЗапасов
//	|			И вт_ТаблицаТоваров.КодТНВЭД = СчетФактураВыданныйТовары.КодТНВЭД
//	|			И вт_ТаблицаТоваров.НомерГТД = СчетФактураВыданныйТовары.НомерГТД
//	|			И вт_ТаблицаТоваров.ЕдиницаИзмерения = СчетФактураВыданныйТовары.ЕдиницаИзмерения
//	|			И вт_ТаблицаТоваров.СтавкаНДС = СчетФактураВыданныйТовары.СтавкаНДС
//	|			И (СчетФактураВыданныйТовары.Ссылка.Проведен)
//	|ГДЕ
//	|	СчетФактураВыданныйТовары.Ссылка.МоментВремени < &МоментВремени
////{{20201202 ГлазуновДВ Исправлена Ошибка, взято из релиза 2.4.12.71
//	|	И СчетФактураВыданныйТовары.Ссылка <> &Ссылка
////}}20201202 ГлазуновДВ	
//	|
//	|СГРУППИРОВАТЬ ПО
//	|	вт_ТаблицаТоваров.ИсходныйСчетФактура,
//	|	вт_ТаблицаТоваров.Номенклатура,
//	|	вт_ТаблицаТоваров.Характеристика,
//	|	вт_ТаблицаТоваров.НоменклатураНабора,
//	|	вт_ТаблицаТоваров.ХарактеристикаНабора,
//	|	вт_ТаблицаТоваров.Содержание,
//	|	вт_ТаблицаТоваров.ТипЗапасов,
//	|	вт_ТаблицаТоваров.КодТНВЭД,
//	|	вт_ТаблицаТоваров.НомерГТД,
//	|	вт_ТаблицаТоваров.ЕдиницаИзмерения,
//	|	вт_ТаблицаТоваров.СтавкаНДС
//	|;
//	|
//	|////////////////////////////////////////////////////////////////////////////////
//	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
//	|	вт_КрайниеПериоды.ИсходныйСчетФактура КАК ИсходныйСчетФактура,
//	|	вт_КрайниеПериоды.Номенклатура КАК Номенклатура,
//	|	вт_КрайниеПериоды.Характеристика КАК Характеристика,
//	|	вт_КрайниеПериоды.НоменклатураНабора КАК НоменклатураНабора,
//	|	вт_КрайниеПериоды.ХарактеристикаНабора КАК ХарактеристикаНабора,
//	|	вт_КрайниеПериоды.Содержание КАК Содержание,
//	|	вт_КрайниеПериоды.ТипЗапасов КАК ТипЗапасов,
//	|	вт_КрайниеПериоды.КодТНВЭД КАК КодТНВЭД,
//	|	вт_КрайниеПериоды.НомерГТД КАК НомерГТД,
//	|	вт_КрайниеПериоды.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
//	|	вт_КрайниеПериоды.СтавкаНДС КАК СтавкаНДС,
//	|	МАКСИМУМ(СчетФактураВыданныйТовары.Ссылка) КАК ПредыдущийСчетФактура
//	|ПОМЕСТИТЬ вт_КрайниеСчетаФактуры
//	|ИЗ
//	|	вт_КрайниеПериоды КАК вт_КрайниеПериоды
//	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.Товары КАК СчетФактураВыданныйТовары
//	|		ПО вт_КрайниеПериоды.ИсходныйСчетФактура = СчетФактураВыданныйТовары.ИсходныйСчетФактура
//	|			И вт_КрайниеПериоды.Номенклатура = СчетФактураВыданныйТовары.Номенклатура
//	|			И вт_КрайниеПериоды.Характеристика = СчетФактураВыданныйТовары.Характеристика
//	|			И вт_КрайниеПериоды.НоменклатураНабора = СчетФактураВыданныйТовары.НоменклатураНабора
//	|			И вт_КрайниеПериоды.ХарактеристикаНабора = СчетФактураВыданныйТовары.ХарактеристикаНабора
//	|			И вт_КрайниеПериоды.Содержание = СчетФактураВыданныйТовары.Содержание
//	|			И вт_КрайниеПериоды.ТипЗапасов = СчетФактураВыданныйТовары.ТипЗапасов
//	|			И вт_КрайниеПериоды.КодТНВЭД = СчетФактураВыданныйТовары.КодТНВЭД
//	|			И вт_КрайниеПериоды.НомерГТД = СчетФактураВыданныйТовары.НомерГТД
//	|			И вт_КрайниеПериоды.ЕдиницаИзмерения = СчетФактураВыданныйТовары.ЕдиницаИзмерения
//	|			И вт_КрайниеПериоды.СтавкаНДС = СчетФактураВыданныйТовары.СтавкаНДС
//	|			И вт_КрайниеПериоды.ПредыдущийСчетФактураДата = СчетФактураВыданныйТовары.Ссылка.Дата
//	|			И (СчетФактураВыданныйТовары.Ссылка.Проведен)
//	|
//	|СГРУППИРОВАТЬ ПО
//	|	вт_КрайниеПериоды.ИсходныйСчетФактура,
//	|	вт_КрайниеПериоды.Номенклатура,
//	|	вт_КрайниеПериоды.Характеристика,
//	|	вт_КрайниеПериоды.НоменклатураНабора,
//	|	вт_КрайниеПериоды.ХарактеристикаНабора,
//	|	вт_КрайниеПериоды.Содержание,
//	|	вт_КрайниеПериоды.ТипЗапасов,
//	|	вт_КрайниеПериоды.КодТНВЭД,
//	|	вт_КрайниеПериоды.НомерГТД,
//	|	вт_КрайниеПериоды.ЕдиницаИзмерения,
//	|	вт_КрайниеПериоды.СтавкаНДС
//	|;
//	|
//	|////////////////////////////////////////////////////////////////////////////////
//	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
//	|	вт_ТаблицаТоваров.ДокументРеализации КАК ДокументРеализации,
//	|	ЕСТЬNULL(вт_КрайниеСчетаФактуры.ПредыдущийСчетФактура, вт_ТаблицаТоваров.ИсходныйСчетФактура) КАК ПредыдущийСчетФактура,
//	|	ЕСТЬNULL(вт_КрайниеСчетаФактуры.ПредыдущийСчетФактура.Корректировочный, ЛОЖЬ) КАК Корректировочный,
//	|	ЕСТЬNULL(вт_КрайниеСчетаФактуры.ПредыдущийСчетФактура.Исправление, ЛОЖЬ) КАК Исправление,
//	|	вт_ТаблицаТоваров.Номенклатура КАК Номенклатура,
//	|	вт_ТаблицаТоваров.Характеристика КАК Характеристика,
//	|	вт_ТаблицаТоваров.НоменклатураНабора КАК НоменклатураНабора,
//	|	вт_ТаблицаТоваров.ХарактеристикаНабора КАК ХарактеристикаНабора,
//	|	вт_ТаблицаТоваров.Содержание КАК Содержание,
//	|	вт_ТаблицаТоваров.ТипЗапасов КАК ТипЗапасов,
//	|	вт_ТаблицаТоваров.КодТНВЭД КАК КодТНВЭД,
//	|	вт_ТаблицаТоваров.НомерГТД КАК НомерГТД,
//	|	вт_ТаблицаТоваров.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
//	|	вт_ТаблицаТоваров.СтавкаНДС КАК СтавкаНДС
//	|ПОМЕСТИТЬ вт_ТаблицаТоваровПредварительная
//	|ИЗ
//	|	вт_ТаблицаТоваровДокументовОснований КАК вт_ТаблицаТоваров
//	|		ЛЕВОЕ СОЕДИНЕНИЕ вт_КрайниеСчетаФактуры КАК вт_КрайниеСчетаФактуры
//	|		ПО вт_ТаблицаТоваров.ИсходныйСчетФактура = вт_КрайниеСчетаФактуры.ИсходныйСчетФактура
//	|			И вт_ТаблицаТоваров.Номенклатура = вт_КрайниеСчетаФактуры.Номенклатура
//	|			И вт_ТаблицаТоваров.Характеристика = вт_КрайниеСчетаФактуры.Характеристика
//	|			И вт_ТаблицаТоваров.НоменклатураНабора = вт_КрайниеСчетаФактуры.НоменклатураНабора
//	|			И вт_ТаблицаТоваров.ХарактеристикаНабора = вт_КрайниеСчетаФактуры.ХарактеристикаНабора
//	|			И вт_ТаблицаТоваров.Содержание = вт_КрайниеСчетаФактуры.Содержание
//	|			И вт_ТаблицаТоваров.ТипЗапасов = вт_КрайниеСчетаФактуры.ТипЗапасов
//	|			И вт_ТаблицаТоваров.КодТНВЭД = вт_КрайниеСчетаФактуры.КодТНВЭД
//	|			И вт_ТаблицаТоваров.НомерГТД = вт_КрайниеСчетаФактуры.НомерГТД
//	|			И вт_ТаблицаТоваров.ЕдиницаИзмерения = вт_КрайниеСчетаФактуры.ЕдиницаИзмерения
//	|			И вт_ТаблицаТоваров.СтавкаНДС = вт_КрайниеСчетаФактуры.СтавкаНДС
//	|;
//	|
//	|////////////////////////////////////////////////////////////////////////////////
//	|ВЫБРАТЬ РАЗЛИЧНЫЕ
//	|	ВЫБОР
//	|		КОГДА вт_ТаблицаТоваровПредварительная.ПредыдущийСчетФактура.Исправление
//	|			ТОГДА вт_ТаблицаТоваровПредварительная.ПредыдущийСчетФактура.СчетФактураОснование
//	|		ИНАЧЕ вт_ТаблицаТоваровПредварительная.ПредыдущийСчетФактура
//	|	КОНЕЦ КАК СчетФактура,
//	|	ВЫБОР
//	|		КОГДА вт_ТаблицаТоваровПредварительная.ПредыдущийСчетФактура.Исправление
//	|			ТОГДА вт_ТаблицаТоваровПредварительная.ПредыдущийСчетФактура.СчетФактураОснование.Корректировочный
//	|		ИНАЧЕ вт_ТаблицаТоваровПредварительная.ПредыдущийСчетФактура.Корректировочный
//	|	КОНЕЦ КАК Корректировочный
//	|ИЗ
//	|	вт_ТаблицаТоваровПредварительная КАК вт_ТаблицаТоваровПредварительная
//	|;
//	|
//	|////////////////////////////////////////////////////////////////////////////////
//	|ВЫБРАТЬ
//	|	вт_ТаблицаТоваровПредварительная.ПредыдущийСчетФактура КАК СчетФактура,
//	|	вт_ТаблицаТоваровПредварительная.ПредыдущийСчетФактура.Корректировочный КАК Корректировочный,
//	|	вт_ТаблицаТоваровПредварительная.ПредыдущийСчетФактура.Исправление КАК Исправление,
//	|	МИНИМУМ(ЕСТЬNULL(ДокументыОснования.ДокументОснование = вт_ТорговыеДокументыОснования.ДокументОснование, ЛОЖЬ)) КАК ИсправлениеНаОснованииСФ
//	|ИЗ
//	|	вт_ТаблицаТоваровПредварительная КАК вт_ТаблицаТоваровПредварительная
//	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.ДокументыОснования КАК ДокументыОснования
//	|		ПО ДокументыОснования.Ссылка = вт_ТаблицаТоваровПредварительная.ПредыдущийСчетФактура
//	|		ЛЕВОЕ СОЕДИНЕНИЕ вт_ТорговыеДокументыОснования КАК вт_ТорговыеДокументыОснования
//	|		ПО ДокументыОснования.ДокументОснование = вт_ТорговыеДокументыОснования.ДокументОснование
//	|СГРУППИРОВАТЬ ПО
//	|	вт_ТаблицаТоваровПредварительная.ПредыдущийСчетФактура
//	|УПОРЯДОЧИТЬ ПО
//	|	вт_ТаблицаТоваровПредварительная.ПредыдущийСчетФактура УБЫВ
//	|АВТОУПОРЯДОЧИВАНИЕ
//	|;
//	|
//	|////////////////////////////////////////////////////////////////////////////////
//	|ВЫБРАТЬ РАЗЛИЧНЫЕ
//	|	вт_ТаблицаТоваровПредварительная.ДокументРеализации КАК ДокументРеализации
//	|ИЗ
//	|	вт_ТаблицаТоваровПредварительная КАК вт_ТаблицаТоваровПредварительная
//	|ГДЕ
//	|	НЕ вт_ТаблицаТоваровПредварительная.Корректировочный
//	|	И НЕ вт_ТаблицаТоваровПредварительная.Исправление
//	|;
//	|
//	|////////////////////////////////////////////////////////////////////////////////
//	|УНИЧТОЖИТЬ вт_КрайниеПериоды
//	|;
//	|
//	|////////////////////////////////////////////////////////////////////////////////
//	|УНИЧТОЖИТЬ вт_КрайниеСчетаФактуры
//	|";
//	
//	Запрос.УстановитьПараметр("МоментВремени", ПараметрыЗаполнения.МоментВремени);
////{{20201202 ГлазуновДВ Исправлена Ошибка, взято из релиза 2.4.12.71
//	Запрос.УстановитьПараметр("Ссылка", ПараметрыЗаполнения.МоментВремени.Ссылка);
////}}20201202 ГлазуновДВ
//	
//	МассивРезультатов = Запрос.ВыполнитьПакет();
//	
//	ТаблицаСчетаФактурыОснования = МассивРезультатов[4].Выгрузить();
//	Если ТаблицаСчетаФактурыОснования.Количество() = 0 Тогда
//		Возврат Результат;
//	КонецЕсли;
//	
//	Если ЭтоИсправление И ТаблицаСчетаФактурыОснования.Количество() > 1 Тогда
//		ТекстСообщения = НСтр("ru = 'По выбранным документам-основаниям необходимо выставить несколько исправленных счетов-фактур.';
//								|en = 'Several adjusted tax invoices must be drawn by selected base documents.'") + Символы.ПС 
//			+ НСтр("ru = 'Необходимо зарегистрировать по документам-основаниям отдельные счета-фактуры.';
//					|en = 'Separate tax invoices must be registered by base documents.'");
//		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
//		
//		ВызватьИсключение ТекстСообщения;
//	КонецЕсли;
//	
//	ТаблицаПредыдущиеСчетаФактуры = МассивРезультатов[5].Выгрузить();
//	ДокументыРеализации = МассивРезультатов[6].Выгрузить().ВыгрузитьКолонку("ДокументРеализации");
//	
//	ЭтоИсправлениеНаОснованииСФ = Ложь;
//	
////Исходное	Если ЭтоИсправление Тогда	
////{{20201202 ГлазуновДВ Исправлена Ошибка, взято из релиза 2.4.12.71
//	Если ЭтоИсправление И ТаблицаПредыдущиеСчетаФактуры.Количество() > 0 Тогда
////}}20201202 ГлазуновДВ
//		
//		// Для исправления берем данные о товарах последнего исправления или исходного счета-фактуры.
//		ДанныеПредыдущегоСчетаФактуры = ТаблицаПредыдущиеСчетаФактуры[0];
//		ПредыдущиеСчетаФактуры = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ДанныеПредыдущегоСчетаФактуры.СчетФактура);
//		
//		// Если предыдущий счет-фактура - исправление или корректировка, то все товары есть в нем самом,
//		// поэтому данные о товарах исходного торгового документа получать не нужно.
//		Если ДанныеПредыдущегоСчетаФактуры.Корректировочный Или ДанныеПредыдущегоСчетаФактуры.Исправление Тогда
//			ДокументыРеализации = Новый Массив;
//		КонецЕсли;
//		// Отслеживаем случай, когда исправленный счет-фактура создается по счету-фактуре, а не по корректировке.
//		// В этом случае таблица товаров измениться не может и нужно просто скопировать таблицу предыдущего счета-фактуры
//		Если ДанныеПредыдущегоСчетаФактуры.ИсправлениеНаОснованииСФ Тогда
//			ЭтоИсправлениеНаОснованииСФ = Истина;
//		КонецЕсли;
//	Иначе
//		// Для корректировки берем данные о товарах из каждой найденной предыдущей счет-фактуры.
//		ПредыдущиеСчетаФактуры = ТаблицаПредыдущиеСчетаФактуры.ВыгрузитьКолонку("СчетФактура");
//	КонецЕсли;
//	
//	// Формируем вспомогательные временные таблицы для дальнейшего заполнения.
//	
//	ПоместитьТаблицуТоваровТорговыхДокументов(ДокументыРеализации, МенеджерВременныхТаблиц, "вт_ТаблицаТоваровИсходныхТорговыхДокументов", ДополнительныеПараметры);
//	ПоместитьТаблицуТоваровСчетовФактур(ПредыдущиеСчетаФактуры, МенеджерВременныхТаблиц, "вт_ТаблицаТоваровПредыдущихСчетовФактур", ДополнительныеПараметры);
//	СвернутьТаблицуТоваровТорговыхДокументов(МенеджерВременныхТаблиц, ЭтоИсправлениеНаОснованииСФ);
//	
//	Если ЭтоИсправление Тогда
//		Результат.СчетФактураОснование = ТаблицаСчетаФактурыОснования[0].СчетФактура;
//		Результат.Корректировочный = ТаблицаСчетаФактурыОснования[0].Корректировочный; // Меняем признак корректировочный, если изменили счет-фактуру основание
//		
//		ДополнительныеПараметры.Вставить("ЭтоКорректировочный", Результат.Корректировочный);
//		Результат.Товары = ПолучитьТаблицуТоваровИсправление(МенеджерВременныхТаблиц, ДополнительныеПараметры);
//	Иначе
//		Результат.Товары = ПолучитьТаблицуТоваровКорректировка(МенеджерВременныхТаблиц);
//	КонецЕсли;
//	
//	Возврат Результат;
//	
//КонецФункции
////}}20201202 ГлазуновДВ
