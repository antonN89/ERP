
&НаКлиенте
Процедура Рин1_ЗаполнитьСпособОбеспеченияВместо(Команда)
	
	// &ЗамерПроизводительности
	ОценкаПроизводительностиКлиент.НачатьЗамерВремени(Истина,
	"Обработка.ОбеспечениеПотребностей.Форма.Форма.Команда.ЗаполнитьСпособОбеспечения");
	
	ТекущаяТаблица = ?(Элементы.СтраницыТаблицаПотребностей.ТекущаяСтраница = Элементы.СтраницаТаблицаЗапасы,
	"Запасы", "ЗаказыКОбеспечению");
	
	ПараметрыФормы = Новый Структура("ТипОбеспечения, ГрупповоеЗаполнение", Неопределено, Истина);
	Для каждого Идентификатор Из Элементы[ТекущаяТаблица].ВыделенныеСтроки Цикл
		СтрокаПотребности = Объект[ТекущаяТаблица].НайтиПоИдентификатору(Идентификатор);
		Если Не СтрокаПотребности.ИсточникОбеспеченияТолькоПросмотр Тогда
			ПараметрыФормы.ТипОбеспечения = СтрокаПотребности.ТипОбеспечения;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если ПараметрыФормы.ТипОбеспечения <> Неопределено Тогда
		ОткрытьФорму("Обработка.ОбеспечениеПотребностей.Форма.ФормаВыбораСпособаОбеспечения", ПараметрыФормы, ЭтаФорма, УникальныйИдентификатор);
	Иначе
		ПоказатьПредупреждение(, НСтр("ru = 'Не выделено ни одной строки с доступным для изменения способом обеспечения. Выполнение команды невозможно.';
		|en = 'No line with supply source available for change is selected. Cannot run the command.'"));
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура Рин1_ОбработкаВыбораВместо(ВыбранноеЗначение, ИсточникВыбора)
	
	ИмяТаблицы = ?(Элементы.СтраницыТаблицаПотребностей.ТекущаяСтраница = Элементы.СтраницаТаблицаЗапасы,
	"Запасы", "ЗаказыКОбеспечению");
	
	Если ИсточникВыбора.ИмяФормы = "Обработка.ОбеспечениеПотребностей.Форма.ФормаВыбораУпаковкиЕдиницы" Тогда
		
		Поставка = Элементы[ИмяТаблицы].ТекущиеДанные;
		ЗаполнитьЗаписатьУпаковкуПоДеревуИндексов(Поставка.ИДИндекса, ВыбранноеЗначение);
		
		СоответствиеСтрок = ПересчитатьОкруглениеКлиент(Поставка, ИмяТаблицы = "Запасы");
		
		ОтобразитьРасчитанноеОкругление(Поставка, ИмяТаблицы = "Запасы");
		
		ОтразитьСвязанныеПоставкиВКорзине(СоответствиеСтрок);
		
	//++Шерстюк Ю.Ю. изменения без автора	
	ИначеЕсли ИсточникВыбора.ИмяФормы = "Обработка.ОбеспечениеПотребностей.Форма.ФормаВыбораСпособаОбеспечения" Тогда
		
		ТипИсточника = ТипЗнч(ВыбранноеЗначение.ИсточникОбеспечения);
		
		Для каждого Идентификатор Из Элементы[ИмяТаблицы].ВыделенныеСтроки Цикл
			
			Поставка = Объект[ИмяТаблицы].НайтиПоИдентификатору(Идентификатор);
			
			Если ЗначениеЗаполнено(Поставка.СпособОбеспечения) Тогда	
				Продолжить;
			КонецЕсли;
			
			Если Поставка.Отметка Тогда				
				ОтразитьПоставкуВКорзине(ЭтаФорма, Поставка, 0, Ложь);	
			КонецЕсли;
			
			Если ИмяТаблицы = "ЗаказыКОбеспечению" Тогда
				
				ЗаполнитьЗначенияСвойств(Поставка, ВыбранноеЗначение);
				
			Иначе 
				
				Отбор = Новый Структура("Номенклатура, Характеристика, Склад, СпособОбеспечения");
				ЗаполнитьЗначенияСвойств(Отбор, Поставка);
				Отбор.СпособОбеспечения = ВыбранноеЗначение.СпособОбеспечения;
				
				РассчитатьСтрокуТаблицыЗапасы(Идентификатор, Отбор);
				
				Если Не ЗначениеЗаполнено(Поставка.ДатаПоставки) Тогда
					Способы = Объект.СпособыОбеспечения.НайтиСтроки(Новый Структура("СпособОбеспечения", ВыбранноеЗначение.СпособОбеспечения));
					Если Способы.Количество() > 0 Тогда
						Поставка.ДатаПоставки = Способы[0].ДатаПоставки;
					КонецЕсли;
				КонецЕсли;
				
				СоответствиеСтрок = ПересчитатьОкруглениеКлиент(Поставка, Истина);
				
				ОтобразитьРасчитанноеОкругление(Поставка, Истина);
				
				ОтразитьСвязанныеПоставкиВКорзине(СоответствиеСтрок);
				
				ЗапасыПриАктивизацииСтроки(Неопределено);
				
			КонецЕсли;
			
		КонецЦикла;
	//--Шерстюк Ю.Ю.	
	Иначе
		
		Если Не ТипЗнч(ВыбранноеЗначение) = Тип("Структура") Тогда
			Возврат;
		КонецЕсли;
		
		Если ВыбранноеЗначение.Свойство("ПараметрыПоставкиОптимальные") Тогда
			
			ТипИсточника = ТипЗнч(ВыбранноеЗначение.ПараметрыПоставкиОптимальные.ИсточникОбеспечения);
			
			Для каждого Идентификатор Из Элементы[ИмяТаблицы].ВыделенныеСтроки Цикл
				
				Поставка = Объект[ИмяТаблицы].НайтиПоИдентификатору(Идентификатор);
				Если ТипИсточника = Тип("СправочникСсылка.Партнеры")
						И Поставка.ТипОбеспечения <> ПредопределенноеЗначение("Перечисление.ТипыОбеспечения.Покупка")
						И Поставка.ТипОбеспечения <> ПредопределенноеЗначение("Перечисление.ТипыОбеспечения.ПроизводствоНаСтороне")
					Или ТипИсточника = Тип("СправочникСсылка.Склады")
						И Поставка.ТипОбеспечения <> ПредопределенноеЗначение("Перечисление.ТипыОбеспечения.Перемещение")
					Или ТипИсточника = Тип("СправочникСсылка.СтруктураПредприятия")
						И Поставка.ТипОбеспечения <> ПредопределенноеЗначение("Перечисление.ТипыОбеспечения.Производство")
					Или Поставка.ИсточникОбеспеченияТолькоПросмотр Тогда
					Продолжить;
				КонецЕсли;
				
				Если Поставка.Отметка Тогда
					ОтразитьПоставкуВКорзине(ЭтаФорма, Поставка, 0, ИмяТаблицы <> "Запасы");
				КонецЕсли;
				
				ЗаполнитьЗначенияСвойств(Поставка, ВыбранноеЗначение.ПараметрыПоставкиОптимальные);
				
				Если Поставка.Отметка Тогда
					ОтразитьПоставкуВКорзине(ЭтаФорма, Поставка, Поставка.Округлено, ИмяТаблицы <> "Запасы");
				КонецЕсли;
				
				СоответствиеСтрок = ПересчитатьОкруглениеКлиент(Поставка, ИмяТаблицы = "Запасы");
				
				ОтобразитьРасчитанноеОкругление(Поставка, ИмяТаблицы = "Запасы");
				
				ОтразитьСвязанныеПоставкиВКорзине(СоответствиеСтрок);
				
			КонецЦикла;
			
		ИначеЕсли ВыбранноеЗначение.Свойство("КодУровняЗапаса") Тогда
			
			ФильтрУровеньЗапаса = УровеньЗапасаПоКоду(ВыбранноеЗначение.КодУровняЗапаса);
			ОтборЗапасыНаСервере();
			
		ИначеЕсли ВыбранноеЗначение.Свойство("СпособОбеспечения") Тогда
			
			Если Элементы.СтраницыТаблицаПотребностей.ТекущаяСтраница = Элементы.СтраницаТаблицаЗапасы Тогда
				
				Если Не ЗначениеЗаполнено(ВыбранноеЗначение.СпособОбеспечения) Тогда // не меняем способ выбранный в таблице
					РассчитатьСтрокуТаблицыЗапасыНаКлиенте(Элементы.Запасы.ТекущиеДанные.СпособОбеспечения);
				Иначе
					РассчитатьСтрокуТаблицыЗапасыНаКлиенте(ВыбранноеЗначение.СпособОбеспечения);
				КонецЕсли;
				
			Иначе
				
				РассчитатьСтрокуТаблицыЗаказыКОбеспечениюНаКлиенте(Элементы.ЗаказыКОформлению.ТекущаяСтрока);
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

