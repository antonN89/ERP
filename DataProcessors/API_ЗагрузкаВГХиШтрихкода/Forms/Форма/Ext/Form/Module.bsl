
&НаКлиенте
Процедура ВыполнитьЗапрос(Команда)
	
	Объект.Результат.Очистить();
	ВыполнитьЗапросНаСервере();
	
КонецПроцедуры

&НаСервере
Функция  ВыполнитьЗапросНаСервере()
		//API SE
	СтруктураМетодовЗапроса = Новый Структура;
	СтруктураМетодовЗапроса.Вставить("getPackingData","new-api/XML/getpackingdata?");          //получим ВГХ	
	ОбъектВЗначении = РеквизитФормыВЗначение("Объект");
	
	Объект.Результат.Очистить();
	пЕдИзмМКуб = Справочники.УпаковкиЕдиницыИзмерения.НайтиПоКоду("113");
	пЕдИзмСМКуб = Справочники.УпаковкиЕдиницыИзмерения.НайтиПоКоду("111");
	пЕдИзмДМКуб = Справочники.УпаковкиЕдиницыИзмерения.НайтиПоКоду("112");
	пЕдИзмПустаяСсылка = Справочники.УпаковкиЕдиницыИзмерения.ПустаяСсылка();
	
	Если пЕдИзмМКуб = пЕдИзмПустаяСсылка Тогда 
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Не найдена единица измерения м3 в справочнике Упаковки, выполнение прервано...";
		Сообщение.Сообщить();
		Возврат 0;
	КонецЕсли;
	
	Если пЕдИзмДМКуб = пЕдИзмПустаяСсылка Тогда 
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Не найдена единица измерения мм3 в справочнике Упаковки, выполнение прервано...";
		Сообщение.Сообщить();
		Возврат 0;
	КонецЕсли;
	
	Если пЕдИзмСМКуб = пЕдИзмПустаяСсылка Тогда 
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Не найдена единица измерения cм3 в справочнике Упаковки, выполнение прервано...";
		Сообщение.Сообщить();
		Возврат 0;
	КонецЕсли;

	пПроизводительПоИдентификаторуSE = Справочники.Производители.НайтиПоРеквизиту("Рин1_Идентификатор","SE");
	пПроизводительПоИдентификаторуDKC = Справочники.Производители.НайтиПоРеквизиту("Рин1_Идентификатор","DKC");
	пПроизводительПоИдентификаторуABB = Справочники.Производители.НайтиПоРеквизиту("Рин1_Идентификатор","ABB");
	Если Объект.Производитель = пПроизводительПоИдентификаторуSE Тогда
		ОбъектВЗначении.ВыполнитьЗапросSE(СтруктураМетодовЗапроса);
	ИначеЕсли Объект.Производитель = пПроизводительПоИдентификаторуDKC Тогда
		ОбъектВЗначении.ВыполнитьЗапросDKC();
	ИначеЕсли Объект.Производитель = пПроизводительПоИдентификаторуABB Тогда
         ОбъектВЗначении.ВыполнитьЗапросABB();		    
	КонецЕсли;
	
	Если ОбъектВЗначении.Результат.Количество() > 0 Тогда 
		
		пРезультат = Обработки.API_ЗагрузкаВГХиШтрихкода.СопоставитьНоменклатуру(ОбъектВЗначении.Результат.Выгрузить(),ОбъектВЗначении.Производитель,пЕдИзмМКуб,пЕдИзмДМКуб,пЕдИзмСМКуб);
		Для Каждого СтрТз из пРезультат Цикл
			//СтрТз.ЕдИзмОбъемAPI = СтрТз.ЕдИзмОбъем;
			Если Объект.Производитель = пПроизводительПоИдентификаторуSE или Объект.Производитель = пПроизводительПоИдентификаторуABB Тогда
				Если СтрТз.ЕдИзмДлинаСопставл = null Тогда
					Сообщение = Новый СообщениеПользователю;
					Сообщение.Текст = "По Артикулу " + СтрТз.Артикул + " не найдено сопоставление ед.изм. ДлинаAPI";
					Сообщение.Сообщить();
				КонецЕсли;
				
				Если СтрТз.ЕдИзмШиринаСопставл = null Тогда
					Сообщение = Новый СообщениеПользователю;
					Сообщение.Текст = "По Артикулу " + СтрТз.Артикул + " не найдено сопоставление ед.изм. ШиринаAPI";
					Сообщение.Сообщить();
				КонецЕсли;
				Если СтрТз.ЕдИзмВысотаСопставл = null Тогда
					Сообщение = Новый СообщениеПользователю;
					Сообщение.Текст = "По Артикулу " + СтрТз.Артикул + " не найдено сопоставление ед.изм. ВысотаAPI";
					Сообщение.Сообщить();
				КонецЕсли;
			 КонецЕсли;

			Если СтрТз.ЕдИзмВесСопставл = null Тогда
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = "По Артикулу " + СтрТз.Артикул + " не найдено сопоставление ед.изм. ВесAPI";
				Сообщение.Сообщить();
			КонецЕсли;
			Если СтрТз.ЕдИзмОбъемСопставл = null и  Объект.Производитель = пПроизводительПоИдентификаторуDKC Тогда
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = "По Артикулу " + СтрТз.Артикул + " не найдено сопоставление ед.изм. ОбъемAPI";
				Сообщение.Сообщить();
			КонецЕсли;

		КонецЦикла;
		Объект.Результат.Загрузить(пРезультат);

	КонецЕсли;

КонецФункции

&НаКлиенте
Процедура ПрименитьИзменения(Команда)
	ПрименитьИзмененияНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПрименитьИзмененияНаСервере()
	пПустаяСсылкаУпаковки = Справочники.УпаковкиЕдиницыИзмерения.ПустаяСсылка();
	пЕдИзмМм = Справочники.УпаковкиЕдиницыИзмерения.НайтиПоКоду("003");
	пЕдИзмСмКуб = Справочники.УпаковкиЕдиницыИзмерения.НайтиПоКоду("111");
	пЕдИзмГр = Справочники.УпаковкиЕдиницыИзмерения.НайтиПоКоду("163");

	пТаблица = Объект.Результат;

	пПроизводительПоИдентификаторуSE = Справочники.Производители.НайтиПоРеквизиту("Рин1_Идентификатор","SE");
	пПроизводительПоИдентификаторуDKC = Справочники.Производители.НайтиПоРеквизиту("Рин1_Идентификатор","DKC");
	пПроизводительПоИдентификаторуABB = Справочники.Производители.НайтиПоРеквизиту("Рин1_Идентификатор","ABB");

	Для Каждого Стр из пТаблица Цикл
		Если Стр.Пометка Тогда
			Если ЗначениеЗаполнено(Стр.ШтрихкодAPI) Тогда
				Запись = РегистрыСведений.ШтрихкодыНоменклатуры.СоздатьМенеджерЗаписи();	
				Запись.Штрихкод = Стр.ШтрихкодAPI;

				Запись.Прочитать();
				Если Не Запись.Выбран() Тогда
					 Запись.Штрихкод = Стр.ШтрихкодAPI;
					 Запись.Номенклатура = Стр.Номенклатура;
					 Запись.Записать();
					 Стр.Штрихкод = Стр.ШтрихкодAPI;
				КонецЕсли;
			КонецЕсли;
			Если Объект.Производитель = пПроизводительПоИдентификаторуSE или Объект.Производитель = пПроизводительПоИдентификаторуABB Тогда
					Если Стр.ЕдИзмДлинаСопставл = null или Стр.ЕдИзмДлинаСопставл = пПустаяСсылкаУпаковки Тогда
						Сообщение = Новый СообщениеПользователю;
						Сообщение.Текст = "По Артикулу " + Стр.Артикул + " не найдено сопоставление ед.изм. ДлинаAPI";
						Сообщение.Сообщить();
						Продолжить;
					КонецЕсли;
					
					Если Стр.ЕдИзмШиринаСопставл = null или Стр.ЕдИзмШиринаСопставл = пПустаяСсылкаУпаковки Тогда
						Сообщение = Новый СообщениеПользователю;
						Сообщение.Текст = "По Артикулу " + Стр.Артикул + " не найдено сопоставление ед.изм. ШиринаAPI";
						Сообщение.Сообщить();
						Продолжить;
					КонецЕсли;
					Если Стр.ЕдИзмВысотаСопставл = null или Стр.ЕдИзмВысотаСопставл = пПустаяСсылкаУпаковки Тогда
						Сообщение = Новый СообщениеПользователю;
						Сообщение.Текст = "По Артикулу " + Стр.Артикул + " не найдено сопоставление ед.изм. ВысотаAPI";
						Сообщение.Сообщить();
						Продолжить;
					КонецЕсли;
				 КонецЕсли;

				Если Стр.ЕдИзмВесСопставл = null или Стр.ЕдИзмВесСопставл = пПустаяСсылкаУпаковки Тогда
					Сообщение = Новый СообщениеПользователю;
					Сообщение.Текст = "По Артикулу " + Стр.Артикул + " не найдено сопоставление ед.изм. ВесAPI";
					Сообщение.Сообщить();
					Продолжить;
				КонецЕсли;
				Если (Стр.ЕдИзмОбъемСопставл = null или Стр.ЕдИзмОбъемСопставл = пПустаяСсылкаУпаковки)и  Объект.Производитель = пПроизводительПоИдентификаторуDKC Тогда
					Сообщение = Новый СообщениеПользователю;
					Сообщение.Текст = "По Артикулу " + Стр.Артикул + " не найдено сопоставление ед.изм. ОбъемAPI";
					Сообщение.Сообщить();
					Продолжить;
				КонецЕсли;
			пНоменклатураОбъект = Стр.Номенклатура.ПолучитьОбъект();
			пНоменклатураОбъект.ВесЧислитель = Стр.ВесAPI;
			пНоменклатураОбъект.ВесЕдиницаИзмерения = Стр.ЕдИзмВесСопставл;
			пНоменклатураОбъект.ВесЗнаменатель = 1;
			пНоменклатураОбъект.ВесИспользовать = Истина;
			
			пНоменклатураОбъект.ДлинаЧислитель = Стр.ДлинаAPI;
			пНоменклатураОбъект.ДлинаЕдиницаИзмерения = Стр.ЕдИзмДлинаСопставл;
			пНоменклатураОбъект.ДлинаЗнаменатель = 1;
			пНоменклатураОбъект.ДлинаИспользовать = Истина;

   			пНоменклатураОбъект.ОбъемЧислитель = Стр.ОбъемAPI;
			пНоменклатураОбъект.ОбъемЕдиницаИзмерения = Стр.ЕдИзмОбъемСопставл;
            пНоменклатураОбъект.ОбъемИспользовать = Истина;
			пНоменклатураОбъект.ОбъемЗнаменатель = 1;
			Попытка
				пНоменклатураОбъект.Записать();
				тзУпаковок = Справочники.Номенклатура.ПроверитьИндУпаковкуЕдиницыХранения(пНоменклатураОбъект.Ссылка);
				Для Каждого СтрТзУпаковок из тзУпаковок Цикл 
					пУпаковка = СтрТзУпаковок.Упаковка.ПолучитьОбъект();
					Если Стр.ЕдИзмВесСопставл <> пПустаяСсылкаУпаковки Тогда 
						пУпаковка.ВесЕдиницаИзмерения = Стр.ЕдИзмВесСопставл;  					
						пУпаковка.Вес = ?(Стр.ВесAPI = 0,1,Стр.ВесAPI);
					ИначеЕсли Стр.ЕдИзмВес = пПустаяСсылкаУпаковки Тогда
						пУпаковка.ВесЕдиницаИзмерения = пЕдИзмГр;  					
					КонецЕсли; 
					Если Стр.ЕдИзмВысотаСопставл <> пПустаяСсылкаУпаковки Тогда 
						пУпаковка.Высота = ?(Стр.ВысотаAPI = 0,1,Стр.ВысотаAPI);
						пУпаковка.ВысотаЕдиницаИзмерения = Стр.ЕдИзмВысотаСопставл;
					ИначеЕсли Стр.ЕдИзмВысота = пПустаяСсылкаУпаковки Тогда
						пУпаковка.ВысотаЕдиницаИзмерения = пЕдИзмМм;  					
					КонецЕсли;
					Если Стр.ЕдИзмШиринаСопставл <> пПустаяСсылкаУпаковки Тогда 
						пУпаковка.Ширина = ?(Стр.ШиринаAPI = 0,1,Стр.ШиринаAPI);
						пУпаковка.ШиринаЕдиницаИзмерения = Стр.ЕдИзмШиринаСопставл;
					ИначеЕсли Стр.ЕдИзмШирина = пПустаяСсылкаУпаковки Тогда
						пУпаковка.ШиринаЕдиницаИзмерения = пЕдИзмМм;  										
					КонецЕсли;
					Если Стр.ЕдИзмДлинаСопставл <> пПустаяСсылкаУпаковки Тогда 
						пУпаковка.Глубина = ?(Стр.ДлинаAPI = 0,1,Стр.ДлинаAPI);
						пУпаковка.ГлубинаЕдиницаИзмерения = Стр.ЕдИзмДлинаСопставл;
					ИначеЕсли Стр.ЕдИзмДлина = пПустаяСсылкаУпаковки Тогда
						пУпаковка.ГлубинаЕдиницаИзмерения = пЕдИзмМм;  					
					КонецЕсли;	
					Если Стр.ЕдИзмОбъемСопставл <> пПустаяСсылкаУпаковки Тогда 
						пУпаковка.Объем = ?(Стр.ОбъемAPI = 0,1,Стр.ОбъемAPI);
						пУпаковка.ОбъемЕдиницаИзмерения = Стр.ЕдИзмОбъемСопставл;
					ИначеЕсли Стр.ЕдИзмОбъем = пПустаяСсылкаУпаковки Тогда
						пУпаковка.ОбъемЕдиницаИзмерения = пЕдИзмСмКуб;  											
					КонецЕсли;
					пУпаковка.Числитель = 1;
					пУпаковка.Знаменатель = 1;
					пУпаковка.ПоставляетсяВМногооборотнойТаре = Ложь;
					пУпаковка.ТипИзмеряемойВеличины = Перечисления.ТипыИзмеряемыхВеличин.Упаковка;
					пУпаковка.ТипУпаковки = Перечисления.ТипыУпаковокНоменклатуры.Конечная;
					пУпаковка.Безразмерная = Ложь;
					пУпаковка.Записать();
				КонецЦикла;
				Стр.Вес = ?(Стр.ВесAPI = 0,1,Стр.ВесAPI);
				Стр.Объем = ?(Стр.ОбъемAPI = 0,1,Стр.ОбъемAPI);
				Стр.Длина = ?(Стр.ДлинаAPI = 0,1,Стр.ДлинаAPI);
				Стр.Ширина = ?(Стр.ШиринаAPI = 0,1,Стр.ШиринаAPI);
				Стр.Высота = ?(Стр.ВысотаAPI = 0,1,Стр.ВысотаAPI);
				Стр.ЕдИзмОбъем = Стр.ЕдИзмОбъемСопставл;
				Стр.ЕдИзмШирина = Стр.ЕдИзмШиринаСопставл;
                Стр.ЕдИзмДлина = Стр.ЕдИзмДлинаСопставл;
                Стр.ЕдИзмВысота = Стр.ЕдИзмВысотаСопставл;
				стр.ЕдИзмВес = Стр.ЕдИзмВесСопставл;

				//////Если ЗначениеЗаполнено(Стр.ШтрихкодAPI) Тогда
				//////	Запись = РегистрыСведений.ШтрихкодыНоменклатуры.СоздатьМенеджерЗаписи();	
				//////	Запись.Штрихкод = Стр.ШтрихкодAPI;

				//////	Запись.Прочитать();
				//////	Если Не Запись.Выбран() Тогда
				//////		 Запись.Штрихкод = Стр.ШтрихкодAPI;
				//////		 Запись.Номенклатура = Стр.Номенклатура;
				//////		 Запись.Записать();
				//////		 Стр.Штрихкод = Стр.ШтрихкодAPI;
				//////	КонецЕсли;
				//////КонецЕсли;
				
				Стр.Пометка = Ложь;
			Исключение
				     Сообщение = Новый СообщениеПользователю();
					Сообщение.Текст  = "Не удалось записать " + Стр.Номенклатура.Наименование;
					Сообщение.Сообщить();

			КонецПопытки;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры



&НаКлиенте
Процедура УстановитьПометку(Команда)
	пМассивВыделенныхСтрок = ЭтаФорма.Элементы.Результат.ВыделенныеСтроки;
	
	УстановитьВсеНаСервере(пМассивВыделенныхСтрок,"Результат");

КонецПроцедуры

&НаСервере
Процедура УстановитьВсеНаСервере(пМассивВыделенныхСтрок,ТабЧасть)
	
	ПроставитьПометку(пМассивВыделенныхСтрок,Истина,ТабЧасть);
		
КонецПроцедуры

&НаСервере
Процедура ПроставитьПометку(пМассивВыделенныхСтрок,Пометка,ТабЧасть)
	
	Для Каждого СтрИндекс из пМассивВыделенныхСтрок Цикл
		пСтрока = Объект[ТабЧасть].НайтиПоИдентификатору(СтрИндекс);
		Если пСтрока <> Неопределено Тогда 
			пСтрока.Пометка = Пометка;
		КонецЕсли;
		
	КонецЦикла;
			
КонецПроцедуры

&НаКлиенте
Процедура СнятьПометку(Команда)
	пМассивВыделенныхСтрок = ЭтаФорма.Элементы.Результат.ВыделенныеСтроки;

	СнятьВсеНаСервере(пМассивВыделенныхСтрок,"Результат");

КонецПроцедуры
&НаСервере
Процедура СнятьВсеНаСервере(пМассивВыделенныхСтрок,ТабЧасть)
	
	ПроставитьПометку(пМассивВыделенныхСтрок,ложь,ТабЧасть);
	
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
	ОбновитьНаСервере();
КонецПроцедуры

&НаСервере
Функция  ОбновитьНаСервере()
	ОбъектВЗначении = РеквизитФормыВЗначение("Объект");
	пЕдИзмМКуб = Справочники.УпаковкиЕдиницыИзмерения.НайтиПоКоду("113");
	пЕдИзмСМКуб = Справочники.УпаковкиЕдиницыИзмерения.НайтиПоКоду("111");
	пЕдИзмДМКуб = Справочники.УпаковкиЕдиницыИзмерения.НайтиПоКоду("112");
	пЕдИзмПустаяСсылка = Справочники.УпаковкиЕдиницыИзмерения.ПустаяСсылка();
	
	пПроизводительПоИдентификаторуSE = Справочники.Производители.НайтиПоРеквизиту("Рин1_Идентификатор","SE");
	пПроизводительПоИдентификаторуDKC = Справочники.Производители.НайтиПоРеквизиту("Рин1_Идентификатор","DKC");
	пПроизводительПоИдентификаторуABB = Справочники.Производители.НайтиПоРеквизиту("Рин1_Идентификатор","ABB");

	
	Если пЕдИзмМКуб = пЕдИзмПустаяСсылка Тогда 
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Не найдена единица измерения м3 в справочнике Упаковки, выполнение прервано...";
		Сообщение.Сообщить();
		Возврат 0;
	КонецЕсли;
	
	Если пЕдИзмДМКуб = пЕдИзмПустаяСсылка Тогда 
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Не найдена единица измерения мм3 в справочнике Упаковки, выполнение прервано...";
		Сообщение.Сообщить();
		Возврат 0;
	КонецЕсли;
	
	Если пЕдИзмСМКуб = пЕдИзмПустаяСсылка Тогда 
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Не найдена единица измерения cм3 в справочнике Упаковки, выполнение прервано...";
		Сообщение.Сообщить();
		Возврат 0;
	КонецЕсли;

	
	Если ОбъектВЗначении.Результат.Количество() > 0 Тогда 
		тзДляСопоставления = ОбъектВЗначении.Результат.Выгрузить();
		тзДляСопоставления.Свернуть("Артикул, ШтрихкодAPI, ВесAPI, ДлинаAPI, ОбъемAPI, ШиринаAPI, ВысотаAPI, ЕдИзмШиринаAPI, ЕдИзмДлинаAPI, ЕдИзмВысотаAPI, ЕдИзмВесAPI, ЕдИзмОбъемAPI");
		Объект.Результат.Очистить();
		пРезультат = Обработки.API_ЗагрузкаВГХиШтрихкода.СопоставитьНоменклатуру(тзДляСопоставления,ОбъектВЗначении.Производитель,пЕдИзмМКуб,пЕдИзмДМКуб,пЕдИзмСМКуб);
		Для Каждого СтрТз из пРезультат Цикл
			//СтрТз.ЕдИзмОбъемAPI = СтрТз.ЕдИзмОбъем;
			Если Объект.Производитель = пПроизводительПоИдентификаторуSE или Объект.Производитель = пПроизводительПоИдентификаторуABB Тогда
				Если СтрТз.ЕдИзмДлинаСопставл = null Тогда
					Сообщение = Новый СообщениеПользователю;
					Сообщение.Текст = "По Артикулу " + СтрТз.Артикул + " не найдено сопоставление ед.изм. ДлинаAPI";
					Сообщение.Сообщить();
				КонецЕсли;
				
				Если СтрТз.ЕдИзмШиринаСопставл = null Тогда
					Сообщение = Новый СообщениеПользователю;
					Сообщение.Текст = "По Артикулу " + СтрТз.Артикул + " не найдено сопоставление ед.изм. ШиринаAPI";
					Сообщение.Сообщить();
				КонецЕсли;
				Если СтрТз.ЕдИзмВысотаСопставл = null Тогда
					Сообщение = Новый СообщениеПользователю;
					Сообщение.Текст = "По Артикулу " + СтрТз.Артикул + " не найдено сопоставление ед.изм. ВысотаAPI";
					Сообщение.Сообщить();
				КонецЕсли;
			 КонецЕсли;

			Если СтрТз.ЕдИзмВесСопставл = null Тогда
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = "По Артикулу " + СтрТз.Артикул + " не найдено сопоставление ед.изм. ВесAPI";
				Сообщение.Сообщить();
			КонецЕсли;
			Если СтрТз.ЕдИзмОбъемСопставл = null и  Объект.Производитель = пПроизводительПоИдентификаторуDKC Тогда
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = "По Артикулу " + СтрТз.Артикул + " не найдено сопоставление ед.изм. ОбъемAPI";
				Сообщение.Сообщить();
			КонецЕсли;

		КонецЦикла;
		Объект.Результат.Загрузить(пРезультат);

	КонецЕсли;
КонецФункции

&НаКлиенте
Процедура НоменклатураПриИзменении(Элемент)
	Объект.Результат.Очистить();
КонецПроцедуры


