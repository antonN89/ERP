
&Вместо("ОбработкаПроведения")
Процедура Рин1_ОбработкаПроведения(Отказ, РежимПроведения)

//{{20201204 ГлазуновДВ
	Если ДополнительныеСвойства.Свойство("ПропуститьПроверкуЗапретаИзменения") Тогда
		ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписиДокумента.Запись);
	КонецЕсли;
//}}20201204 ГлазуновДВ

	// Инициализация дополнительных свойств для проведения документа
	ПроведениеСерверУТ.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения);

	// Инициализация данных документа
	Документы.АктОРасхожденияхПослеПриемки.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);

////{{20200618 ГлазуновДВ	
//	Если СкладыСервер.ИспользоватьОрдернуюСхемуПриОтгрузке(ЭтотОбъект.Товары[0].Склад,ЭтотОбъект.Дата) Тогда
//		ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаТоварыКПоступлению.Очистить();
//	КонецЕсли;
	ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаТоварыКОформлениюИзлишковНедостач.Очистить();
////}}20200618 ГлазуновДВ	
	
	// Подготовка наборов записей
	ПроведениеСерверУТ.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);

	// Отражение в разделах учета
//{{20201022 ГлазуновДВ
	ЗаказыСервер.ОтразитьЗаказыПоставщикам(ДополнительныеСвойства, Движения, Отказ);
//}}20201022 ГлазуновДВ
	ЗаказыСервер.ОтразитьТоварыКПоступлению(ДополнительныеСвойства, Движения, Отказ);
	ЗапасыСервер.ОтразитьТоварыНаСкладах(ДополнительныеСвойства, Движения, Отказ);
	ЗапасыСервер.ОтразитьСвободныеОстатки(ДополнительныеСвойства, Движения, Отказ);
	ЗаказыСервер.ОтразитьТоварыКОтгрузке(ДополнительныеСвойства, Движения, Отказ);
	ЗаказыСервер.ОтразитьДвижениеТоваров(ДополнительныеСвойства, Движения, Отказ);
	ЗапасыСервер.ОтразитьТоварыКОформлениюИзлишковНедостач(ДополнительныеСвойства, Движения, Отказ);
	ЗапасыСервер.ОтразитьОбеспечениеЗаказов(ДополнительныеСвойства, Движения, Отказ);
	СкладыСервер.ОтразитьДвиженияСерийТоваров(ДополнительныеСвойства, Движения, Отказ);
	РегистрыСведений.РеестрДокументов.ЗаписатьДанныеДокумента(Ссылка, ДополнительныеСвойства, Отказ);

	СформироватьСписокРегистровДляКонтроля();
	АктОРасхожденияхПослеПриемкиЛокализация.ОбработкаПроведения(ЭтотОбъект, Отказ, РежимПроведения);

	ПроведениеСерверУТ.ЗаписатьНаборыЗаписей(ЭтотОбъект);

	ПроведениеСерверУТ.ВыполнитьКонтрольРезультатовПроведения(ЭтотОбъект, Отказ);
	ПроведениеСерверУТ.ЗаписатьПодчиненныеНаборамЗаписейДанные(ЭтотОбъект, Отказ);
	РегистрыСведений.СостоянияЗаказовКлиентов.ОтразитьСостояниеЗаказа(ЭтотОбъект, Отказ);
	ПроведениеСерверУТ.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);

КонецПроцедуры

//{{20201204 ГлазуновДВ
&Вместо("ПередЗаписью")
Процедура Рин1_ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	// Вставить содержимое метода.
	//ПродолжитьВызов(Отказ, РежимЗаписи, РежимПроведения);
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ПроведениеСерверУТ.УстановитьРежимПроведения(ЭтотОбъект, РежимЗаписи, РежимПроведения);

	ДополнительныеСвойства.Вставить("ЭтоНовый",    ЭтоНовый());
//Исходное	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
//{{20201204 ГлазуновДВ добавили смену режима записи
	Если ДополнительныеСвойства.Свойство("ПропуститьПроверкуЗапретаИзменения") Тогда
		ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписиДокумента.Запись);
	Иначе	
		ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	КонецЕсли;
//}}20201204 ГлазуновДВ
	
	АктОРасхожденияхПослеПриемкиЛокализация.ПередЗаписью(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения);

КонецПроцедуры

//}}20201204 ГлазуновДВ

&После("ИнициализироватьДокумент")
Процедура Рин1_ИнициализироватьДокумент(ДанныеЗаполнения)
	//++Шерстюк Ю.Ю. Задача 16.04.2021 7625
	Если ЗначениеЗаполнено(Договор) Тогда 
		Менеджер = Договор.Менеджер;
		Подразделение = Договор.Подразделение;
	КонецЕсли;
    //--Шерстюк Ю.Ю.
	
	//++Шерстюк Ю.Ю. 19.04.2021 Задача № 7713 при создании документа заполнять реквизиты для печати
	//Получим связанные УПД
	//пСписокОснований = Товары.ВыгрузитьКолонку("ДокументОснование");
	СписокУПД = ПолучитьСписокУПД(ДанныеЗаполнения.ДокументОснование);
	пСтрокаОснований = "";
	пАдресСклада = "";
	//пПустаяссылкаСклад = Справочники.Склады.ПустаяСсылка();
	//пСклад = пПустаяссылкаСклад;
	Для Каждого СтрТз из СписокУПД Цикл 
		Если пСтрокаОснований <> "" Тогда 
			пСтрокаОснований = пСтрокаОснований + ", ";
			ДатаОтправленияТоваров = СтрТз.Дата;
	КонецЕсли;
	  пСтрокаОснований = пСтрокаОснований + "УПД " + СтрТз.Номер + " от " + Формат(СтрТз.Дата,"ДФ=dd.MM.yyyy") + "г.";
	  //пСклад = СтрТз.Склад;
	  пАдресСклада = СтрТз.АдресСклада;
	КонецЦикла;
	ПереченьСопроводительныхДокументов = пСтрокаОснований;
	Грузоотправитель = Контрагент;
	//++Шерстюк Ю.Ю. 20.04.2021
	тзКонтактыКонтрагента = Контрагент.КонтактнаяИнформация;
	пСтрокаСкладОтправителя = "";
	Для Каждого СтрТз из тзКонтактыКонтрагента Цикл 
		Если СтрТз.Вид = Справочники.ВидыКонтактнойИнформации.ФактАдресКонтрагента Тогда 
			пСтрокаСкладОтправителя = СтрТз.Представление;
		КонецЕсли;
	КонецЦикла;
	СкладОтправителяТовара = Контрагент.Наименование + "\" + пСтрокаСкладОтправителя;
	тзТовары = ДанныеЗаполнения.ДокументОснование.Товары.Выгрузить();
	тзТовары.Колонки.Добавить("Производитель");
	Для Каждого СтрТз Из тзТовары Цикл 
	   СтрТз.Производитель = СтрТз.Номенклатура.Производитель;
	КонецЦикла;
	тзТовары.Свернуть("Производитель");
	пСтрокаПроизводители = "";
	Для Каждого СтрТз Из тзТовары Цикл 
		Если пСтрокаПроизводители <> "" Тогда 
			 пСтрокаПроизводители = ", ";
		КонецЕсли;
		пСтрокаПроизводители = пСтрокаПроизводители + СтрТз.Производитель.Наименование;
	КонецЦикла;
	Производитель = пСтрокаПроизводители;
	//--Шерстюк Ю.Ю.
	НомерДоговораПоставки = Договор.Номер;
	ДатаДоговораПоставки = Договор.Дата;
	МестоПриемкиТовара = пАдресСклада;
	СпособДоставки = "АВТО";
	пСтруктураОтветственныхЛицОрганизации = ОтветственныеЛицаСервер.ПолучитьОтветственныеЛицаОрганизации(Организация,ТекущаяДата());
	Руководитель = пСтруктураОтветственныхЛицОрганизации.РуководительСсылка;
	ДолжностьРуководителя = пСтруктураОтветственныхЛицОрганизации.РуководительДолжность;
	ПредседательКомиссии = Руководитель.ФизическоеЛицо.ФИО;
	ДолжностьПредседателяКомиссии = ДолжностьРуководителя;
	//--Шерстюк Ю.Ю.

КонецПроцедуры   

Функция ПолучитьСписокУПД(пСписокОснований)
	Запрос = Новый Запрос("ВЫБРАТЬ
							|	СчетФактураПолученныйДокументыОснования.Ссылка КАК Ссылка,
							|	СчетФактураПолученныйДокументыОснования.Ссылка.Номер КАК Номер,
							|	СчетФактураПолученныйДокументыОснования.Ссылка.Дата КАК Дата,
							|	СчетФактураПолученныйДокументыОснования.ДокументОснование.Склад КАК Склад
							|ПОМЕСТИТЬ ВТ_СчетФактра
							|ИЗ
							|	Документ.СчетФактураПолученный.ДокументыОснования КАК СчетФактураПолученныйДокументыОснования
							|ГДЕ
							|	СчетФактураПолученныйДокументыОснования.ДокументОснование В(&ДокументОснование)
							|	И СчетФактураПолученныйДокументыОснования.Ссылка.Проведен
							|
							|СГРУППИРОВАТЬ ПО
							|	СчетФактураПолученныйДокументыОснования.Ссылка,
							|	СчетФактураПолученныйДокументыОснования.Ссылка.Номер,
							|	СчетФактураПолученныйДокументыОснования.Ссылка.Дата,
							|	СчетФактураПолученныйДокументыОснования.ДокументОснование.Склад
							|;
							|
							|////////////////////////////////////////////////////////////////////////////////
							|ВЫБРАТЬ
							|	ВТ_СчетФактра.Ссылка КАК Ссылка,
							|	ВТ_СчетФактра.Номер КАК Номер,
							|	ВТ_СчетФактра.Дата КАК Дата,
							|	СкладыКонтактнаяИнформация.Представление КАК АдресСклада,
							|	ВТ_СчетФактра.Склад КАК Склад
							|ИЗ
							|	ВТ_СчетФактра КАК ВТ_СчетФактра
							|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады.КонтактнаяИнформация КАК СкладыКонтактнаяИнформация
							|		ПО (ВТ_СчетФактра.Склад = СкладыКонтактнаяИнформация.Ссылка И СкладыКонтактнаяИнформация.Тип = &ТипАдрес )
							|
							|СГРУППИРОВАТЬ ПО
							|	ВТ_СчетФактра.Ссылка,
							|	ВТ_СчетФактра.Номер,
							|	ВТ_СчетФактра.Дата,
							|	СкладыКонтактнаяИнформация.Представление,
							|	ВТ_СчетФактра.Склад");
	Запрос.УстановитьПараметр("ДокументОснование",пСписокОснований);
	Запрос.УстановитьПараметр("ТипАдрес",Перечисления.ТипыКонтактнойИнформации.Адрес);
	Возврат Запрос.Выполнить().Выгрузить();
КонецФункции
