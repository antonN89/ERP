&НаСервере
Процедура Рин1_СохранитьЗначенияРеквизитов()

	Настройки = Новый Структура("ОтборСклад, ОтборНоменклатура, ОтборМенеджер, РежимГруппировкиМатериалов,ОтборКлиент,ОтборМенеджерДоговора");
	ЗаполнитьЗначенияСвойств(Настройки, ЭтаФорма);

	ИмяНастройки = "Основная";

//++ НЕ УТКА
	Если Параметры.ВызовДляСтрокиПродукции Тогда
		ИмяНастройки = "РедактированиеСрецификацииСтрокиЗаказа";
	ИначеЕсли Параметры.ВызовИзФормыЗаказа И ТипЗнч(Параметры.РеквизитыЗаказа.Ссылка) = Тип("ДокументСсылка.ЗаказНаПроизводство") Тогда
		ИмяНастройки = "РедактированиеЗаказаНаПроизводство";
	КонецЕсли;
//-- НЕ УТКА

	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить("Обработка.СостояниеОбеспечения", ИмяНастройки, Настройки);

КонецПроцедуры

&НаКлиенте
Процедура Рин1_ОтборКлиентПриИзмененииПосле(Элемент = Неопределено)
	ТекстСообщения = НСтр("ru = 'Невозможно установить отбор. Отбор по менеджеру договора установлен в настройке списка. Измените настройку списка.';
							|en = 'Cannot set filter. Filter by products is set in list settings. Change the list settings.'");
	Если ОбеспечениеКлиентСервер.ПроверитьНаличиеНастройки(КомпоновщикНастроек, Новый ПолеКомпоновкиДанных("Клиент"), ТекстСообщения) Тогда
		Рин1_ОтразитьПростойОтборВОтборахКомпоновки(ЭтаФорма);
	Иначе
		ОтборКлиент = ПредопределенноеЗначение("Справочник.Пользователи.ПустаяСсылка");
	КонецЕсли;
	Рин1_СохранитьЗначенияРеквизитов();
КонецПроцедуры


&НаКлиентеНаСервереБезКонтекста
Процедура Рин1_ОтразитьПростойОтборВОтборахКомпоновки(Форма)

	ЭлементыОтбора = Форма.КомпоновщикНастроек.ФиксированныеНастройки.Отбор.Элементы;
	ЭлементыОтбора.Очистить();

	Если Форма.Параметры.ВызовИзФормыЗаказа Тогда

		Если Форма.ТекущийЗаказ <> Неопределено Тогда

			ОтразитьОтборВОтборахКомпоновки(ЭлементыОтбора, Форма.ДанныеТекущейСтроки.Склад,        "Склад");
			ОтразитьОтборВОтборахКомпоновки(ЭлементыОтбора, Форма.ДанныеТекущейСтроки.Номенклатура, "Номенклатура");
			//ОтразитьОтборВОтборахКомпоновки(ЭлементыОтбора, Форма.ДанныеТекущейСтроки.Клиент,        "Партнер");

		ИначеЕсли Форма.ОтборЗаказ.Количество() > 0 Тогда

			ЭлементОтбора = ЭлементыОтбора.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			ЭлементОтбора.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("Заказ");
			ЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.ВСписке;
			ЭлементОтбора.ПравоеЗначение = Форма.ОтборЗаказ;

		КонецЕсли;

	ИначеЕсли Форма.ОтборЗаказ.Количество() = 0 Тогда

		ОтразитьОтборВОтборахКомпоновки(ЭлементыОтбора, Форма.ОтборСклад,         "Склад");
		ОтразитьОтборВОтборахКомпоновки(ЭлементыОтбора, Форма.ОтборНоменклатура,  "Номенклатура");
		ОтразитьОтборВОтборахКомпоновки(ЭлементыОтбора, Форма.ОтборМенеджер,      "Менеджер");
		ОтразитьОтборВОтборахКомпоновки(ЭлементыОтбора, Форма.ОтборКлиент,        "Партнер");
   //ИначеЕсли Форма.ОтборКлиент

	Иначе
		ЭлементОтбора = ЭлементыОтбора.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("Заказ");
		ЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.ВСписке;
		ЭлементОтбора.ПравоеЗначение = Форма.ОтборЗаказ;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура Рин1_ОтборМенеджерДоговораПриИзмененииПосле(Элемент)
	Рин1_ОтразитьПользовательскиеНастройкиВОтборах(ЭтаФорма);
	Рин1_СохранитьЗначенияРеквизитов();

КонецПроцедуры
&НаКлиентеНаСервереБезКонтекста
Процедура Рин1_ОтразитьПользовательскиеНастройкиВОтборах(Форма)
    ПолеКомпановкиМенеджерПоДоговору = Новый ПолеКомпоновкиДанных("Заказ.Договор.Менеджер");
	пУстановленотборПоМенеджеруДоговора = Ложь;
	ЭлементыОтбора = Форма.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы;
	Для Каждого пОтбор из ЭлементыОтбора Цикл 
		Если ТипЗнч(пОтбор) = Тип("ОтборКомпоновкиДанных") Тогда
			Для Каждого пОтборПользователя из пОтбор.Элементы Цикл 
				Если пОтборПользователя.ЛевоеЗначение = ПолеКомпановкиМенеджерПоДоговору Тогда
					Если Не ЗначениеЗаполнено(Форма.ОтборМенеджерДоговора) Тогда
						пОтборПользователя.Использование = Ложь;
					Иначе
						пОтборПользователя.Использование = Истина;
						пОтборПользователя.ВидСравнения  = ВидСравненияКомпоновкиДанных.ВСпискеПоИерархии;
						СписокОтбора = Новый СписокЗначений();
						СписокОтбора.Добавить(Форма.ОтборМенеджерДоговора);
						пОтборПользователя.ПравоеЗначение = СписокОтбора;
						пУстановленОтборПоМенеджеруДоговора = Истина;
					КонецЕсли;
					Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	Если Не пУстановленОтборПоМенеджеруДоговора Тогда 
		ОтразитьОтборВОтборахПользователяКомпоновки(пОтбор.Элементы,Форма.ОтборМенеджерДоговора,"Заказ.Договор.Менеджер");
	КонецЕсли;
   
КонецПроцедуры


&НаКлиентеНаСервереБезКонтекста
Процедура ОтразитьОтборВОтборахПользователяКомпоновки(ЭлементыОтбора, Значение, ИмяПоля)
	Если ЗначениеЗаполнено(Значение) Тогда
		ЭлементОтбора = ЭлементыОтбора.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.Использование = Истина;
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ИмяПоля);
		ЭлементОтбора.ВидСравнения  = ВидСравненияКомпоновкиДанных.ВСпискеПоИерархии;
		СписокОтбора = Новый СписокЗначений();
		СписокОтбора.Добавить(Значение);
		ЭлементОтбора.ПравоеЗначение = СписокОтбора;
	КонецЕсли;
КонецПроцедуры


&НаКлиентеНаСервереБезКонтекста
&После("ОтразитьПростойОтборВОтборахКомпоновки")
Процедура Рин1_ОтразитьПростойОтборВОтборахКомпоновки1(Форма)
	Рин1_ОтразитьПростойОтборВОтборахКомпоновки(Форма);
	Рин1_ОтразитьПользовательскиеНастройкиВОтборах(Форма);
КонецПроцедуры


&НаСервере
&Перед("ОбновитьСтрокиТаблицыТовары")
Процедура Рин1_ОбновитьСтрокиТаблицыТовары(ПотребностиНовые)
	ПотребностиНовые.Сортировать("Партнер, Заказ");
	// Вставить содержимое метода.
КонецПроцедуры

&НаКлиенте
Процедура Рин1_ПриОткрытииПосле(Отказ)
	Рин1_ОтразитьПользовательскиеНастройкиВОтборах(ЭтаФорма);
КонецПроцедуры

Процедура Рин1_ТоварыВыборНаСервере()
КонецПроцедуры
