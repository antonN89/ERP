
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
		
	СравнениеТоваров.Загрузить(ПолучитьИзВременногоХранилища(Параметры.СравнениеТоваров));
	
КонецПроцедуры

&НаКлиенте
Процедура Принять(Команда)

	АдресВХранилище = "";
	ПолучитьАдресВоВременномХранилище(АдресВХранилище);
	ЭтаФорма.Закрыть(АдресВХранилище);
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьАдресВоВременномХранилище(АдресВХранилище)
	
	//Для каждого Строка Из СравнениеТоваров Цикл
	//	Отбор = Новый Структура("Номенклатура,Характеристика,Разность",Строка.Номенклатура,Строка.Характеристика,Строка.Разность);
	//	Массив = СравнениеТоваровНеДляОтображения.НайтиСтроки(Отбор);
	//    Если не Массив.Количество() = 0 Тогда
	//	    Массив[0].ПричинаОтмены = Строка.ПричинаОтмены; 
	//	КонецЕсли;
	//КонецЦикла;
	//
	//ТЗ_Вывод = Новый ТаблицаЗначений;
	//ТЗ_Вывод.Колонки.Добавить("Артикул");
	//ТЗ_Вывод.Колонки.Добавить("Номенклатура");
	//ТЗ_Вывод.Колонки.Добавить("Характеристика");
	//ТЗ_Вывод.Колонки.Добавить("Количество");
	//ТЗ_Вывод.Колонки.Добавить("ЕдиницаИзмерения");
	//ТЗ_Вывод.Колонки.Добавить("ПричинаОтмены");
	//ТЗ_Вывод.Колонки.Добавить("СтавкаНДС");
	//ТЗ_Вывод.Колонки.Добавить("ВариантОбеспечения");
	//
	//Для каждого Стр Из СравнениеТоваровНеДляОтображения Цикл
	//	НовСтр = ТЗ_Вывод.Добавить();
	//	НовСтр.Артикул = Стр.Номенклатура.Артикул;
	//	НовСтр.Номенклатура = Стр.Номенклатура;
	//	НовСтр.Характеристика = Стр.Характеристика;
	//	НовСтр.Количество = Стр.Разность*-1;
	//	НовСтр.ЕдиницаИзмерения = Стр.ЕдиницаИзмерения_Т;
	//	НовСтр.ПричинаОтмены = Стр.ПричинаОтмены;
	//	НовСтр.СтавкаНДС = Стр.СтавкаНДС;
	//	НовСтр.ВариантОбеспечения = Стр.ВариантОбеспечения;
	//КонецЦикла;
	//
	АдресВХранилище = ПоместитьВоВременноеХранилище(СравнениеТоваров.Выгрузить());
	//
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	ЭтаФорма.Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура СравнениеТоваровУказатьПричинуОтменыВыделенныхСтрок(Команда)
	
	ПричинаОтмены = ПредопределенноеЗначение("Справочник.ПричиныОтменыЗаказовПоставщикам.ОтклонениеПриПриемкеМерныхТоваров");
	ОткрытьФорму("Справочник.ПричиныОтменыЗаказовПоставщикам.ФормаВыбора",,,,,, Новый ОписаниеОповещения("ОтменитьВыделенныеСтрокиЗавершение", ЭтотОбъект), РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	Возврат;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьВыделенныеСтрокиЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	ПричинаОтмены = Результат;
	Если Не ЗначениеЗаполнено(ПричинаОтмены) Тогда
		Возврат;
	КонецЕсли;
	
	ОтменитьВыделенныеСтрокиНаСервере(ПричинаОтмены);

КонецПроцедуры

&НаСервере
Процедура ОтменитьВыделенныеСтрокиНаСервере(ПричинаОтмены)
	
	ВыделенныеСтроки = Элементы.СравнениеТоваров.ВыделенныеСтроки;
	Для каждого Стр Из ВыделенныеСтроки Цикл
		СтрокаТаблицы = СравнениеТоваров.НайтиПоИдентификатору(Стр);
		СтрокаТаблицы.ПричинаОтмены = ПричинаОтмены;		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СравнениеТоваровПричинаОтменыНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Элементы.СравнениеТоваровПричинаОтмены.СписокВыбора.Очистить();
	СписокОтмены = ЗаполнитьСписокОтмен();
	Для каждого ЗначениеСписка Из СписокОтмены Цикл
		Элементы.СравнениеТоваровПричинаОтмены.СписокВыбора.Добавить(ЗначениеСписка.Значение);	
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ЗаполнитьСписокОтмен()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПричиныОтменыЗаказовПоставщикам.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ПричиныОтменыЗаказовПоставщикам КАК ПричиныОтменыЗаказовПоставщикам";
	
	РезультатЗапроса = Запрос.Выполнить();
	Результат = РезультатЗапроса.Выгрузить(); 
	СписокОтмены = Новый СписокЗначений;
	для Каждого Строка из Результат Цикл
		СписокОтмены.Добавить(Строка.Ссылка);
	КонецЦикла;
	Возврат СписокОтмены;
	
КонецФункции 
