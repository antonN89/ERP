
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Перем Константа, НоваяСтрока, СтруктураФОпция;
	
	РежимИспользованияМодальностиБулево = Параметры.Настройки.РежимИспользованияМодальностиБулево;
	
	УстановитьПривилегированныйРежим(Истина);
	
	Для Каждого Константа ИЗ Метаданные.Константы Цикл
		
		НоваяСтрока = ЭтаФорма.ТаблицаКонстант.Добавить();
		НоваяСтрока.нПП = ЭтаФорма.ТаблицаКонстант.Количество();
		НоваяСтрока.ИмяКонстанты = Константа.Имя;
		НоваяСтрока.СинонимКонстанты = Константа.Синоним;
		НоваяСтрока.ОписаниеТипов = Константа.Тип;
		СтруктураФОпция = ПолучитьФункциональнуюОпциюКонстанты(Константа.Имя);
		НоваяСтрока.ФОпция = СтруктураФОпция.ИмяФОпции;
		НоваяСтрока.ПривилегированныйРежимПриПолучении = СтруктураФОпция.ПривилегированныйРежимПриПолучении;
		НоваяСтрока.ЗначениеКонстанты = Константы[Константа.Имя].Получить();
		
	КонецЦикла;

КонецПроцедуры

// Вкладка "Метаданные" - "Функциональные опции".
// - Имя Функциональной опции.
// - Имя Реквизита.
//
&НаСервере
Функция ПолучитьФункциональнуюОпциюКонстанты(ИмяКонстанты)
	Перем мдКонстанты, ФОпция, ЭлементСостава;
	Перем СтруктураВозврат;
	
	СтруктураВозврат = Новый Структура("ИмяФОпции,ПривилегированныйРежимПриПолучении");
	
	мдКонстанты = Метаданные.Константы[ИмяКонстанты];
	Для Каждого ФОпция ИЗ Метаданные.ФункциональныеОпции Цикл
		Для Каждого ЭлементСостава ИЗ ФОпция.Состав Цикл
			Если ЭлементСостава.Объект = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			Если ФОпция.Хранение = мдКонстанты Тогда
				СтруктураВозврат.ИмяФОпции = ФОпция.Имя;
				СтруктураВозврат.ПривилегированныйРежимПриПолучении = ФОпция.ПривилегированныйРежимПриПолучении;
				Возврат СтруктураВозврат;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Возврат СтруктураВозврат;

КонецФункции

&НаКлиенте
Процедура ТаблицаКонстантПередНачаломИзменения(Элемент, Отказ)
	Перем ТекущиеДанные, ТекущийЭлемент;
	Перем ТекстВопроса, Ответ;
	Перем Оповещение, ОповещениеПослеОтвета;
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	ТекущийЭлемент = Элемент.ТекущийЭлемент;
	
	Если ТекущиеДанные.ОписаниеТипов.Типы()[0] = Тип("ХранилищеЗначения") Тогда
		Отказ = Истина;
		ПредупреждениеСообщение(, "Значение типа ""ХранилищеЗначения"" недоступно для корректировки.");
		Возврат;
	КонецЕсли;
	
	ТекстВопроса = "Изменение константы в конфигурации может сопровождаться другими изменениями,
	|не предусмотренными в данной обработке.
	|
	|Подтвердите переход к изменению значения константы.
	|";
	
	Отказ = Ложь;
	Если ИспользоватьРежимМодальности() Тогда
		// Стандартно в модальном режиме (8.2/8.3) с обработкой результата.
		Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет, 30, КодВозвратаДиалога.Нет, "ИЗМЕНЕНИЕ ЗНАЧЕНИЯ КОНСТАНТЫ", КодВозвратаДиалога.Нет);
		ТаблицаКонстантПередНачаломИзмененияЗавершение(Ответ, Отказ);
	Иначе
		// Стандартно в немодальном режиме (8.3) с обработкой результата.
		//+yuraos, 10.09.2015 - для обратной совместимости лучше использовать атрибут "ЭтаФорма", "ЭтотОбъект" появляется в режиме совместимости "Версия 8.3.3" и выше.
		Оповещение = Вычислить("Новый ОписаниеОповещения(""ТаблицаКонстантПередНачаломИзмененияЗавершение"", ЭтаФормаЭтотОбъект())");
		Выполнить("ПоказатьВопрос(Оповещение,ТекстВопроса, РежимДиалогаВопрос.ДаНет, 30, КодВозвратаДиалога.Нет, ""ИЗМЕНЕНИЕ ЗНАЧЕНИЯ КОНСТАНТЫ"", КодВозвратаДиалога.Нет)");
	КонецЕсли;
	
	Попытка
		ТекущийЭлемент.ОграничениеТипа = ТекущиеДанные.ОписаниеТипов;
	Исключение
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаКонстантПередНачаломИзмененияЗавершение(Ответ, Отказ) Экспорт
	Перем ЗначениеОтвета, РезультатСоздания;
	Перем ОповещениеПослеОтвета;
	
	ЗначениеОтвета = ПолучитьКодВозвратаДиалога(Ответ);
	Если ЗначениеОтвета = Неопределено ИЛИ ЗначениеОтвета = КодВозвратаДиалога.НЕТ ИЛИ ЗначениеОтвета = КодВозвратаДиалога.Таймаут Тогда
		Если ИспользоватьРежимМодальности() Тогда
			Отказ = Истина;
		Иначе
			SendKeys();	// "а-ля" "Отказ = Истина".
		КонецЕсли;
		Возврат;
	КонецЕсли;
	
	// Переход к изменению значения константы.
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьКодВозвратаДиалога(Ответ)
	Перем ЗначениеОтвета;
	
	Если ТипЗнч(Ответ) = Тип("Структура") Тогда
		ЗначениеОтвета = Ответ.Значение;
	Иначе
		ЗначениеОтвета = Ответ;
	КонецЕсли;
	
	Возврат ЗначениеОтвета;
	
КонецФункции

&НаКлиенте
Процедура ТаблицаКонстантПриИзменении(Элемент)
	Перем ТекущиеДанные;
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	ТаблицаКонстантПриИзмененииНаСервере(ТекущиеДанные.ИмяКонстанты, ТекущиеДанные.ЗначениеКонстанты);
	
КонецПроцедуры

&НаСервере
Процедура ТаблицаКонстантПриИзмененииНаСервере(ИмяКонстанты, ЗначениеКонстанты)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Попытка
		Константы[ИмяКонстанты].Установить(ЗначениеКонстанты);
	Исключение
		Сообщить(ИнформацияОбОшибке());
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура ПредупреждениеСообщение(Оповещение, ТекстПредупрежденияСообщения, Таймаут = 0, Заголовок = "")
	
	Если ИспользоватьРежимМодальности() Тогда
		// Стандартно в модальном режиме (8.2/8.3) с обработкой результата.
		Предупреждение(ТекстПредупрежденияСообщения, Таймаут, Заголовок);
	Иначе
		// Стандартно в немодальном режиме (8.3) с обработкой результата.
		Выполнить("ПоказатьПредупреждение(Оповещение, ТекстПредупрежденияСообщения, Таймаут, Заголовок)");
	КонецЕсли;;
		
КонецПроцедуры

&НаКлиенте
Функция ИспользоватьРежимМодальности()
	Возврат РежимИспользованияМодальностиБулево;
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура SendKeys(xKEY="{ESCAPE}")	// "{SPACE}"
	
	Попытка
		Shell = Новый COMОбъект("WScript.Shell");
		Shell.SendKeys(xKEY);
	Исключение
	КонецПопытки;
	
КонецПроцедуры

//+yuraos, 20.10.2015
&НаКлиенте
Функция ЭтаФормаЭтотОбъект()
	Попытка
		Возврат Вычислить("ЭтотОбъект");
	Исключение
		Возврат Вычислить("ЭтаФорма");
	КонецПопытки;
КонецФункции

