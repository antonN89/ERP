
Функция ГИГ_ЗаполнитьВариантОбеспечения(Объект, Форма, Операция, ДанныеЗаполнения, ПараметрыУказанияСерий = Неопределено, ЗависимыеРеквизиты = Неопределено) Экспорт  	//<++ Гигабайт Казаков М.В. 


	ЭтоВыборОбеспеченияСУчетомСерий = Операция = "СтрокаТовары"
		И ПолучитьФункциональнуюОпцию("ИспользоватьРасширеннуюФормуПодбораКоличестваИВариантовОбеспечения");
	СкладГруппа = Справочники.Склады.ЭтоГруппаИСкладыИспользуютсяВТЧДокументовПродажи(Объект.Склад);
	СтруктураДействий = Новый Структура;

	Реквизиты = "КоличествоУпаковок, Сумма, СуммаНДС, СуммаСНДС, СуммаРучнойСкидки, СуммаАвтоматическойСкидки";
	СтруктураПересчетаСуммы = ОбработкаТабличнойЧастиКлиентСервер.СтруктураПересчетаСуммы(Реквизиты, ЗависимыеРеквизиты);

	Если Форма <> Неопределено Тогда
		СтруктураДействий.Вставить("ПроверитьЗаполнитьСклад", ОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруЗаполненияСкладаВСтрокеТЧ(Объект, СкладГруппа));
	КонецЕсли;
	
	КэшированныеЗначения = ОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруКэшируемыеЗначения();

	ЗаполнитьДатыОтгрузки = Ложь;
	ДатаПоУмолчанию = НачалоДня(ТекущаяДатаСеанса());

	ТекСтрокаТовары = Неопределено;
	Идентификатор   = Неопределено;
	СтарыеЗначения = ОбеспечениеКлиентСервер.КлючОбеспечения();
	НовыеЗначения  = ОбеспечениеКлиентСервер.КлючОбеспечения();
	Счетчик = 0;
	Добавлено = 0;
	
	Для Каждого СтрокаОбеспечения Из ДанныеЗаполнения Цикл

		//Выбор существующей, либо добавление новой строки.
		Если Идентификатор <> СтрокаОбеспечения.Идентификатор Тогда

			Идентификатор = СтрокаОбеспечения.Идентификатор;
			Если Операция = "СтрокаТовары" Или Операция = "СтрокиТовары" Или Операция = "Заказ" Тогда
				СтрокаТовары = Объект.Товары.НайтиПоИдентификатору(Идентификатор);
			ИначеЕсли Операция = "ИндексыСтрок" Тогда
				СтрокаТовары = Объект.Товары[Идентификатор + Добавлено];
			КонецЕсли;
			ТекСтрокаТовары = СтрокаТовары;

			ОбработкаТабличнойЧастиКлиентСервер.ПересчитатьСуммы(СтруктураПересчетаСуммы);
			ОбработкаТабличнойЧастиКлиентСервер.ЗаполнитьСтруктуруПересчетаСуммы(СтруктураПересчетаСуммы, ТекСтрокаТовары);

		Иначе
			ТекСтрокаТовары = Объект.Товары.Вставить(Объект.Товары.Индекс(ТекСтрокаТовары) + 1);
			ЗаполнитьЗначенияСвойств(ТекСтрокаТовары, СтрокаТовары);
			ТекСтрокаТовары.КодСтроки = 0;
			Добавлено = Добавлено + 1;
		КонецЕсли;

		//Заполнение полей обеспечения.
		ЗаполнитьЗначенияСвойств(СтарыеЗначения, ТекСтрокаТовары);
		
		ЗаполнитьЗначенияСвойств(ТекСтрокаТовары, СтрокаОбеспечения, "Количество, ВариантОбеспечения,ДатаОтгрузки");
		
		ДанныеСхемыОбеспечения = Новый Структура("ГИГ_СхемаОбеспечения, ГИГ_СрокПоставки");
		ЗаполнитьЗначенияСвойств(ДанныеСхемыОбеспечения, СтрокаОбеспечения);
		ЗаполнитьЗначенияСвойств(ТекСтрокаТовары, ДанныеСхемыОбеспечения);
		
		Если ЭтоВыборОбеспеченияСУчетомСерий Тогда
			ТекСтрокаТовары.Серия = СтрокаОбеспечения.Серия;
		КонецЕсли;
	
		ЗаполнитьЗначенияСвойств(НовыеЗначения, ТекСтрокаТовары);
		ОбеспечениеКлиентСервер.СчетИзменений(Счетчик, СтарыеЗначения, НовыеЗначения);

		ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(ТекСтрокаТовары, СтруктураДействий, КэшированныеЗначения);
		ОбработкаТабличнойЧастиКлиентСервер.ДобавитьСтрокуДляПересчетаСуммы(СтруктураПересчетаСуммы, ТекСтрокаТовары);

	КонецЦикла;

	ОбработкаТабличнойЧастиКлиентСервер.ПересчитатьСуммы(СтруктураПересчетаСуммы);

	Если ЗаполнитьДатыОтгрузки Тогда
		ОбеспечениеСервер.ЗаполнитьРеквизитВКоллекции(Объект.Товары, "ДатаОтгрузки", Объект.ДатаОтгрузки);
	КонецЕсли;
	Если Операция = "СтрокаТовары" Или Операция = "СтрокиТовары" Или Операция = "Заказ" Тогда
		Форма.Модифицированность = Истина;
	КонецЕсли;
	Возврат ОбеспечениеКлиентСервер.ТекстОбработаноСтрок(Счетчик);

КонецФункции

&Вместо("ДобавитьКомандыПечати")
Процедура Рин1_ДобавитьКомандыПечати(КомандыПечати)
	
	// Коммерческое предложение (Microsoft Word - ТКП)
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Обработчик = "УправлениеПечатьюУТКлиент.ПечатьКоммерческоеПредложениеMicrosoftWord";
	КомандаПечати.МенеджерПечати = "";
	КомандаПечати.Идентификатор = "КоммерческоеПредложениеMicrosoftWord_ТКП";
	КомандаПечати.Представление = НСтр("ru = 'Коммерческое предложение (Microsoft Word) ТКП';
	|en = 'Quotation (Microsoft Word)'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.ТребуетсяРасширениеРаботыСФайлами = Истина;
	
	// Коммерческое предложение (Microsoft Word)
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Обработчик = "УправлениеПечатьюУТКлиент.ПечатьКоммерческоеПредложениеMicrosoftWord";
	КомандаПечати.МенеджерПечати = "";
	КомандаПечати.Идентификатор = "КоммерческоеПредложениеMicrosoftWord";
	КомандаПечати.Представление = НСтр("ru = 'Коммерческое предложение (Microsoft Word)';
	|en = 'Quotation (Microsoft Word)'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.ТребуетсяРасширениеРаботыСФайлами = Истина;

	// Коммерческое предложение (OpenOffice.org Writer)
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Обработчик = "УправлениеПечатьюУТКлиент.ПечатьКоммерческоеПредложениеOpenOfficeOrgWriter";
	КомандаПечати.МенеджерПечати = "";
	КомандаПечати.Идентификатор = "КоммерческоеПредложениеOpenOfficeOrgWriter";
	КомандаПечати.Представление = НСтр("ru = 'Коммерческое предложение (OpenOffice.org Writer)';
	|en = 'Quotation (OpenOffice.org Writer)'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.ТребуетсяРасширениеРаботыСФайлами = Истина;
	
	Если ПолучитьФункциональнуюОпцию("НеВыбиратьВариантВыводаСкидокПриПечатиДокументовПродажи") Тогда
		// Коммерческое предложение
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Идентификатор = "КоммерческоеПредложение";
		КомандаПечати.Представление = НСтр("ru = 'Коммерческое предложение';
		|en = 'Quotation'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КонецЕсли;
	
	Если ПолучитьФункциональнуюОпцию("ВыбиратьВариантВыводаСкидокПриПечатиДокументовПродажи") Тогда
		// Коммерческое предложение (не выводить скидки)
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Идентификатор = "КоммерческоеПредложение";
		КомандаПечати.Представление = НСтр("ru = 'Коммерческое предложение (не выводить скидки)';
		|en = 'Quotation (do not display discounts)'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
		КомандаПечати.ДополнительныеПараметры.Вставить("ОтображатьСкидки", Ложь);
	КонецЕсли;
	
	Если ПолучитьФункциональнуюОпцию("ВыбиратьВариантВыводаСкидокПриПечатиДокументовПродажи") Тогда
		// Коммерческое предложение (выводить скидки)
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Идентификатор = "КоммерческоеПредложение";
		КомандаПечати.Представление = НСтр("ru = 'Коммерческое предложение (выводить скидки)';
		|en = 'Quotation (display discounts)'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
		КомандаПечати.ДополнительныеПараметры.Вставить("ОтображатьСкидки", Истина);
	КонецЕсли;
	
	// Комплект документов на принтер
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Обработчик = "УправлениеПечатьюУТКлиент.ПечатьКомплектаДокументов";
	КомандаПечати.МенеджерПечати = "";
	КомандаПечати.Идентификатор = "КомплектДокументов";
	КомандаПечати.СразуНаПринтер = Истина;
	КомандаПечати.Представление = НСтр("ru = 'Комплект документов на принтер';
	|en = 'Document set for printing'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.Порядок = 1;
	
	// Комплект документов с настройкой...
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Обработчик = "УправлениеПечатьюУТКлиент.ПечатьКомплектаДокументовСНастройкой";
	КомандаПечати.МенеджерПечати = "";
	КомандаПечати.Идентификатор = "КомплектДокументовСНастройкой";
	КомандаПечати.Представление = НСтр("ru = 'Комплект документов с настройкой...';
	|en = 'Document set with setting...'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.Порядок = 2;
	
КонецПроцедуры

Функция СформироватьКомплектПечатныхФорм(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати) Экспорт
	
	Перем АдресКомплектаПечатныхФорм;
	
	Если ТипЗнч(ПараметрыПечати) = Тип("Структура") И ПараметрыПечати.Свойство("АдресКомплектаПечатныхФорм", АдресКомплектаПечатныхФорм) Тогда
		
		КомплектПечатныхФорм = ПолучитьИзВременногоХранилища(АдресКомплектаПечатныхФорм);
		
	Иначе
		
		КомплектПечатныхФорм = РегистрыСведений.НастройкиПечатиОбъектов.КомплектПечатныхФорм(
		Метаданные.Документы.КоммерческоеПредложениеКлиенту.ПолноеИмя(),
		МассивОбъектов, Неопределено);
		
	КонецЕсли;
	
	Если КомплектПечатныхФорм = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	КомплектыПечатиПоОбъектам = РегистрыСведений.НастройкиПечатиОбъектов.КомплектыПечатиПоОбъектам(КоллекцияПечатныхФорм,
	КомплектПечатныхФорм,
	МассивОбъектов,
	"КоммерческоеПредложение");
	Для Каждого КомплектПечати Из КомплектыПечатиПоОбъектам Цикл
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
		КоллекцияПечатныхФорм,
		КомплектПечати.Имя,
		КомплектПечати.Представление,
		СформироватьПечатнуюФормуКоммерческогоПредложения(КомплектПечати.Объекты, ОбъектыПечати));
	КонецЦикла;
	
	КомплектыПечатиПоОбъектам = РегистрыСведений.НастройкиПечатиОбъектов.КомплектыПечатиПоОбъектам(КоллекцияПечатныхФорм,
	КомплектПечатныхФорм,
	МассивОбъектов,
	"КоммерческоеПредложениеБезСкидок");
	Для Каждого КомплектПечати Из КомплектыПечатиПоОбъектам Цикл
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
		КоллекцияПечатныхФорм,
		КомплектПечати.Имя,
		КомплектПечати.Представление,
		СформироватьПечатнуюФормуКоммерческогоПредложения(КомплектПечати.Объекты, ОбъектыПечати, Новый Структура("ОтображатьСкидки", Ложь)));
	КонецЦикла;
	
	РегистрыСведений.НастройкиПечатиОбъектов.СформироватьКомплектВнешнихПечатныхФорм(
	"Документ.КоммерческоеПредложениеКлиенту",
	МассивОбъектов,
	ПараметрыПечати,
	КоллекцияПечатныхФорм,
	ОбъектыПечати);
	
КонецФункции

Функция КомплектПечатныхФорм() Экспорт
	
	КомплектПечатныхФорм = РегистрыСведений.НастройкиПечатиОбъектов.ПодготовитьКомплектПечатныхФорм();
	
	Если ПолучитьФункциональнуюОпцию("ВыбиратьВариантВыводаСкидокПриПечатиДокументовПродажи") Тогда
		РегистрыСведений.НастройкиПечатиОбъектов.ДобавитьПечатнуюФормуВКомплект(КомплектПечатныхФорм, "КоммерческоеПредложение", НСтр("ru = 'Коммерческое предложение (выводить скидки)';
		|en = 'Quotation (display discounts)'"), 1);
		РегистрыСведений.НастройкиПечатиОбъектов.ДобавитьПечатнуюФормуВКомплект(КомплектПечатныхФорм, "КоммерческоеПредложениеБезСкидок", НСтр("ru = 'Коммерческое предложение (не выводить скидки)';
		|en = 'Quotation (do not display discounts)'"), 0);
	Иначе
		РегистрыСведений.НастройкиПечатиОбъектов.ДобавитьПечатнуюФормуВКомплект(КомплектПечатныхФорм, "КоммерческоеПредложение", НСтр("ru = 'Коммерческое предложение';
		|en = 'Quotation'"), 1);
	КонецЕсли;
	
	Возврат КомплектПечатныхФорм;
	
КонецФункции

Функция ПолучитьДанныеДляПечати(МассивОбъектов, ПараметрыПечати)
	
	Если ПараметрыПечати <> Неопределено И ПараметрыПечати.Свойство("ОтображатьСкидки") Тогда
		ОтображатьСкидки = ПараметрыПечати.ОтображатьСкидки;
	Иначе
		ОтображатьСкидки = (Константы.ОтображениеСкидокВПечатныхФормахДокументовПродажи.Получить()
			<> Перечисления.ВариантыВыводаСкидокВПечатныхФормах.НеВыводитьСкидки);
	КонецЕсли; 
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.УстановитьПараметр("ОтображатьСкидки", ОтображатьСкидки);
	Запрос.Текст = 
	 "ВЫБРАТЬ
	 |	Таблица.Ссылка КАК Ссылка,
	 |	ВариантыКомплектацииНоменклатуры.Ссылка КАК ВариантКомплектацииНоменклатуры,
	 |	ВариантыКомплектацииНоменклатуры.ВариантПредставленияНабораВПечатныхФормах КАК ВариантПредставленияНабораВПечатныхФормах,
	 |	ВариантыКомплектацииНоменклатуры.ВариантРасчетаЦеныНабора КАК ВариантРасчетаЦеныНабора,
	 |	Таблица.НомерСтроки КАК НомерСтроки,
	 |	Таблица.Номенклатура КАК Номенклатура,
	 |	Таблица.Количество КАК Количество,
	 |	ВЫБОР
	 |		КОГДА &ОтображатьСкидки
	 |			ТОГДА Таблица.Цена
	 |		ИНАЧЕ Таблица.Сумма / Таблица.Количество
	 |	КОНЕЦ КАК Цена,
	 |	ВЫБОР
	 |		КОГДА &ОтображатьСкидки
	 |			ТОГДА Таблица.СуммаРучнойСкидки + Таблица.СуммаАвтоматическойСкидки
	 |		ИНАЧЕ 0
	 |	КОНЕЦ КАК СуммаСкидки,
	 |	Таблица.Сумма + Таблица.СуммаРучнойСкидки + Таблица.СуммаАвтоматическойСкидки КАК СуммаБезСкидки,
	 |	Таблица.Сумма КАК Сумма,
	 |	Таблица.СтавкаНДС КАК СтавкаНДС,
	 |	Таблица.СуммаНДС КАК СуммаНДС,
	 |	Таблица.Характеристика КАК Характеристика,
	 |	Таблица.Характеристика.НаименованиеПолное КАК ХарактеристикаНаименованиеПолное,
	 |	Таблица.Активность КАК Активность
	 |ПОМЕСТИТЬ Товары
	 |ИЗ
	 |	Документ.КоммерческоеПредложениеКлиенту.Товары КАК Таблица
	 |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВариантыКомплектацииНоменклатуры КАК ВариантыКомплектацииНоменклатуры
	 |		ПО (ВариантыКомплектацииНоменклатуры.Основной)
	 |ГДЕ
	 |	Таблица.Ссылка В(&МассивОбъектов)
	 |;
	 |
	 |////////////////////////////////////////////////////////////////////////////////
	 |ВЫБРАТЬ
	 |	Таблица.Ссылка КАК Ссылка,
	 |	МИНИМУМ(Таблица.НомерСтроки) КАК НомерСтроки,
	 |	СУММА(Таблица.Сумма) КАК Сумма,
	 |	СУММА(Таблица.СуммаНДС) КАК СуммаНДС,
	 |	СУММА(Таблица.СуммаСкидки) КАК СуммаСкидки,
	 |	СУММА(Таблица.СуммаБезСкидки) КАК СуммаБезСкидки
	 |ПОМЕСТИТЬ ВременнаяТаблицаНаборыПодготовка
	 |ИЗ
	 |	Товары КАК Таблица
	 |
	 |СГРУППИРОВАТЬ ПО
	 |	Таблица.Ссылка
	 |;
	 |
	 |////////////////////////////////////////////////////////////////////////////////
	 |ВЫБРАТЬ
	 |	Товары.Ссылка КАК Ссылка,
	 |	Товары.ВариантКомплектацииНоменклатуры КАК ВариантКомплектацииНоменклатуры,
	 |	Товары.ВариантПредставленияНабораВПечатныхФормах КАК ВариантПредставленияНабораВПечатныхФормах,
	 |	Товары.ВариантРасчетаЦеныНабора КАК ВариантРасчетаЦеныНабора,
	 |	Товары.Номенклатура КАК Номенклатура,
	 |	Товары.Характеристика КАК Характеристика,
	 |	ВЫБОР
	 |		КОГДА Товары.ВариантКомплектацииНоменклатуры.НоменклатураОсновногоКомпонента = Товары.Номенклатура
	 |				И Товары.ВариантКомплектацииНоменклатуры.ХарактеристикаОсновногоКомпонента = Товары.Характеристика
	 |			ТОГДА ИСТИНА
	 |		ИНАЧЕ ЛОЖЬ
	 |	КОНЕЦ КАК ОсновнаяКомплектующая,
	 |	Товары.СтавкаНДС КАК СтавкаНДС,
	 |	0 КАК КоличествоПоУмолчанию,
	 |	Товары.Количество КАК Количество
	 |ПОМЕСТИТЬ ВременнаяТаблицаНаборыДополнительноЧастьПервая
	 |ИЗ
	 |	Товары КАК Товары
	 |
	 |ОБЪЕДИНИТЬ ВСЕ
	 |
	 |ВЫБРАТЬ
	 |	Т.Ссылка,
	 |	ВариантыКомплектацииНоменклатурыТовары.Ссылка,
	 |	ВариантыКомплектацииНоменклатурыТовары.Ссылка.ВариантПредставленияНабораВПечатныхФормах,
	 |	ВариантыКомплектацииНоменклатурыТовары.Ссылка.ВариантРасчетаЦеныНабора,
	 |	ВариантыКомплектацииНоменклатурыТовары.Номенклатура,
	 |	ВариантыКомплектацииНоменклатурыТовары.Характеристика,
	 |	ЛОЖЬ,
	 |	NULL,
	 |	СУММА(ВариантыКомплектацииНоменклатурыТовары.Количество),
	 |	0
	 |ИЗ
	 |	Справочник.ВариантыКомплектацииНоменклатуры.Товары КАК ВариантыКомплектацииНоменклатурыТовары
	 |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
	 |			Т.Ссылка КАК Ссылка
	 |		ИЗ
	 |			Товары КАК Т) КАК Т
	 |		ПО (ИСТИНА)
	 |ГДЕ
	 |	ВариантыКомплектацииНоменклатурыТовары.Ссылка В
	 |			(ВЫБРАТЬ РАЗЛИЧНЫЕ
	 |				Т.ВариантКомплектацииНоменклатуры
	 |			ИЗ
	 |				Товары КАК Т)
	 |
	 |СГРУППИРОВАТЬ ПО
	 |	Т.Ссылка,
	 |	ВариантыКомплектацииНоменклатурыТовары.Ссылка,
	 |	ВариантыКомплектацииНоменклатурыТовары.Номенклатура,
	 |	ВариантыКомплектацииНоменклатурыТовары.Характеристика,
	 |	ВариантыКомплектацииНоменклатурыТовары.Ссылка.ВариантПредставленияНабораВПечатныхФормах,
	 |	ВариантыКомплектацииНоменклатурыТовары.Ссылка.ВариантРасчетаЦеныНабора
	 |;
	 |
	 |////////////////////////////////////////////////////////////////////////////////
	 |ВЫБРАТЬ
	 |	Таблица.Ссылка КАК Ссылка,
	 |	Таблица.ВариантКомплектацииНоменклатуры КАК ВариантКомплектацииНоменклатуры,
	 |	Таблица.ВариантРасчетаЦеныНабора КАК ВариантРасчетаЦеныНабора,
	 |	Таблица.ВариантПредставленияНабораВПечатныхФормах КАК ВариантПредставленияНабораВПечатныхФормах,
	 |	Таблица.Номенклатура КАК Номенклатура,
	 |	Таблица.Характеристика КАК Характеристика,
	 |	МАКСИМУМ(Таблица.СтавкаНДС) КАК СтавкаНДС,
	 |	МАКСИМУМ(Таблица.ОсновнаяКомплектующая) КАК ОсновнаяКомплектующая,
	 |	СУММА(Таблица.КоличествоПоУмолчанию) КАК КоличествоПоУмолчанию,
	 |	СУММА(Таблица.Количество) КАК Количество
	 |ПОМЕСТИТЬ ВременнаяТаблицаНаборыДополнительноЧастьВторая
	 |ИЗ
	 |	ВременнаяТаблицаНаборыДополнительноЧастьПервая КАК Таблица
	 |
	 |СГРУППИРОВАТЬ ПО
	 |	Таблица.Ссылка,
	 |	Таблица.ВариантКомплектацииНоменклатуры,
	 |	Таблица.ВариантРасчетаЦеныНабора,
	 |	Таблица.ВариантПредставленияНабораВПечатныхФормах,
	 |	Таблица.Номенклатура,
	 |	Таблица.Характеристика
	 |;
	 |
	 |////////////////////////////////////////////////////////////////////////////////
	 |ВЫБРАТЬ
	 |	Результат.Ссылка КАК Ссылка,
	 |	Результат.ВариантКомплектацииНоменклатуры КАК ВариантКомплектацииНоменклатуры,
	 |	Результат.ВариантРасчетаЦеныНабора КАК ВариантРасчетаЦеныНабора,
	 |	Результат.ВариантПредставленияНабораВПечатныхФормах КАК ВариантПредставленияНабораВПечатныхФормах,
	 |	МАКСИМУМ(ВЫБОР
	 |			КОГДА Результат.ОсновнаяКомплектующая
	 |				ТОГДА Результат.СтавкаНДС
	 |			ИНАЧЕ NULL
	 |		КОНЕЦ) КАК СтавкаНДС,
	 |	(ВЫРАЗИТЬ(МИНИМУМ(ВЫБОР
	 |				КОГДА Результат.КоличествоПоУмолчанию <> 0
	 |						И Результат.ОсновнаяКомплектующая
	 |					ТОГДА Результат.Количество / Результат.КоличествоПоУмолчанию
	 |				ИНАЧЕ NULL
	 |			КОНЕЦ) + 0.5 КАК ЧИСЛО(10, 0))) - 1 КАК Количество
	 |ПОМЕСТИТЬ ВременнаяТаблицаНаборыДополнительно
	 |ИЗ
	 |	ВременнаяТаблицаНаборыДополнительноЧастьВторая КАК Результат
	 |
	 |СГРУППИРОВАТЬ ПО
	 |	Результат.Ссылка,
	 |	Результат.ВариантКомплектацииНоменклатуры,
	 |	Результат.ВариантРасчетаЦеныНабора,
	 |	Результат.ВариантПредставленияНабораВПечатныхФормах
	 |;
	 |
	 |////////////////////////////////////////////////////////////////////////////////
	 |ВЫБРАТЬ
	 |	ВременнаяТаблицаНаборыДополнительно.ВариантКомплектацииНоменклатуры КАК ВариантКомплектацииНоменклатуры,
	 |	ВЫБОР
	 |		КОГДА Таблица.Ссылка.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаКомиссию)
	 |			ТОГДА ВЫБОР
	 |					КОГДА ВременнаяТаблицаНаборыДополнительно.ВариантПредставленияНабораВПечатныхФормах = ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.ТолькоНабор)
	 |						ТОГДА ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.НаборИКомплектующие)
	 |					ИНАЧЕ ВременнаяТаблицаНаборыДополнительно.ВариантПредставленияНабораВПечатныхФормах
	 |				КОНЕЦ
	 |		ИНАЧЕ ВременнаяТаблицаНаборыДополнительно.ВариантПредставленияНабораВПечатныхФормах
	 |	КОНЕЦ КАК ВариантПредставленияНабораВПечатныхФормах,
	 |	ВЫБОР
	 |		КОГДА Таблица.Ссылка.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаКомиссию)
	 |			ТОГДА ВЫБОР
	 |					КОГДА ВЫБОР
	 |								КОГДА ВременнаяТаблицаНаборыДополнительно.ВариантПредставленияНабораВПечатныхФормах = ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.ТолькоНабор)
	 |									ТОГДА ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.НаборИКомплектующие)
	 |								ИНАЧЕ ВременнаяТаблицаНаборыДополнительно.ВариантПредставленияНабораВПечатныхФормах
	 |							КОНЕЦ = ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.НаборИКомплектующие)
	 |							И ВременнаяТаблицаНаборыДополнительно.ВариантРасчетаЦеныНабора В (ЗНАЧЕНИЕ(Перечисление.ВариантыРасчетаЦенНаборов.ЦенаЗадаетсяЗаНаборРаспределяетсяПоЦенам), ЗНАЧЕНИЕ(Перечисление.ВариантыРасчетаЦенНаборов.ЦенаЗадаетсяЗаНаборРаспределяетсяПоДолям))
	 |						ТОГДА ЗНАЧЕНИЕ(Перечисление.ВариантыРасчетаЦенНаборов.РассчитываетсяИзЦенКомплектующих)
	 |					ИНАЧЕ ВременнаяТаблицаНаборыДополнительно.ВариантРасчетаЦеныНабора
	 |				КОНЕЦ
	 |		ИНАЧЕ ВременнаяТаблицаНаборыДополнительно.ВариантРасчетаЦеныНабора
	 |	КОНЕЦ КАК ВариантРасчетаЦеныНабора,
	 |	Таблица.Ссылка КАК Ссылка,
	 |	Таблица.НомерСтроки КАК НомерСтроки,
	 |	ЕСТЬNULL(ВременнаяТаблицаНаборыДополнительно.Количество, 1) КАК КоличествоУпаковок,
	 |	ЕСТЬNULL(ВременнаяТаблицаНаборыДополнительно.Количество, 1) КАК Количество,
	 |	Таблица.Сумма КАК Сумма,
	 |	Таблица.СуммаНДС КАК СуммаНДС,
	 |	Таблица.СуммаСкидки КАК СуммаСкидки,
	 |	Таблица.СуммаБезСкидки КАК СуммаБезСкидки,
	 |	ВременнаяТаблицаНаборыДополнительно.СтавкаНДС КАК СтавкаНДС
	 |ПОМЕСТИТЬ ВременнаяТаблицаНаборы
	 |ИЗ
	 |	ВременнаяТаблицаНаборыПодготовка КАК Таблица
	 |		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаНаборыДополнительно КАК ВременнаяТаблицаНаборыДополнительно
	 |		ПО Таблица.Ссылка = ВременнаяТаблицаНаборыДополнительно.Ссылка
	 |;
	 |
	 |////////////////////////////////////////////////////////////////////////////////
	 |ВЫБРАТЬ
	 |	КоммерческоеПредложениеКлиенту.Ссылка КАК Ссылка,
	 |	КоммерческоеПредложениеКлиенту.Номер КАК Номер,
	 |	КоммерческоеПредложениеКлиенту.Дата КАК Дата,
	 |	КоммерческоеПредложениеКлиенту.Организация КАК Организация,
	 |	КоммерческоеПредложениеКлиенту.Организация.НаименованиеСокращенное КАК ОрганизацияСокращенноеНаименование,
	 |	КоммерческоеПредложениеКлиенту.Организация.Наименование КАК ОрганизацияНаименование,
	 |	КоммерческоеПредложениеКлиенту.СрокДействия КАК СрокДействия,
	 |	ИСТИНА КАК УчитыватьНДС,
	 |	КоммерческоеПредложениеКлиенту.Организация.Префикс КАК Префикс,
	 |	КоммерческоеПредложениеКлиенту.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
	 |	КоммерческоеПредложениеКлиенту.Валюта КАК Валюта,
	 |	ЕСТЬNULL(КоммерческоеПредложениеКлиенту.Менеджер.ФизическоеЛицо.Наименование, КоммерческоеПредложениеКлиенту.Менеджер.Наименование) КАК Менеджер,
	 |	КоммерческоеПредложениеКлиенту.КонтактноеЛицо КАК КонтактноеЛицо,
	 |	ПочтаМенеджера.Представление КАК АдресЭлектроннойПочтыМенеджера,
	 |	КоммерческоеПредложениеКлиенту.Склад КАК Склад
	 |ИЗ
	 |	Документ.КоммерческоеПредложениеКлиенту КАК КоммерческоеПредложениеКлиенту
	 |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица.КонтактнаяИнформация КАК ПочтаМенеджера
	 |		ПО (ПочтаМенеджера.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.EMailФизическиеЛица))
	 |			И КоммерческоеПредложениеКлиенту.Менеджер.ФизическоеЛицо = ПочтаМенеджера.Ссылка
	 |ГДЕ
	 |	КоммерческоеПредложениеКлиенту.Ссылка В(&МассивОбъектов)
	 |
	 |УПОРЯДОЧИТЬ ПО
	 |	Ссылка
	 |;
	 |
	 |////////////////////////////////////////////////////////////////////////////////
	 |ВЫБРАТЬ
	 |	Товары.Ссылка КАК Ссылка,
	 |	Товары.ВариантПредставленияНабораВПечатныхФормах КАК ВариантПредставленияНабораВПечатныхФормах,
	 |	Товары.ВариантРасчетаЦеныНабора КАК ВариантРасчетаЦеныНабора,
	 |	Товары.ЭтоНабор КАК ЭтоНабор,
	 |	Товары.ЭтоКомплектующие КАК ЭтоКомплектующие,
	 |	Товары.НомерСтроки КАК НомерСтроки,
	 |	Товары.Номенклатура КАК Номенклатура,
	 |	Товары.Номенклатура.Код КАК Код,
	 |	Товары.Номенклатура.Артикул КАК Артикул,
	 |	Товары.Номенклатура.НаименованиеПолное КАК НаименованиеПолное,
	 |	Товары.Количество КАК Количество,
	 |	Товары.Цена КАК Цена,
	 |	Товары.СуммаСкидки КАК СуммаСкидки,
	 |	Товары.СуммаБезСкидки КАК СуммаБезСкидки,
	 |	Товары.Сумма КАК Сумма,
	 |	Товары.СтавкаНДС КАК СтавкаНДС,
	 |	Товары.СуммаНДС КАК СуммаНДС,
	 |	Товары.Характеристика.НаименованиеПолное КАК Характеристика,
	 |	Товары.Активность КАК Активность,
	 |	Товары.ЭтоВозвратнаяТара КАК ЭтоВозвратнаяТара
	 |ИЗ
	 |	(ВЫБРАТЬ
	 |		Таблица.Ссылка КАК Ссылка,
	 |		ВЫБОР
	 |			КОГДА ЕСТЬNULL(ВременнаяТаблицаНаборы.НомерСтроки, 0) <> 0
	 |				ТОГДА ВременнаяТаблицаНаборы.ВариантПредставленияНабораВПечатныхФормах
	 |			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.ПустаяСсылка)
	 |		КОНЕЦ КАК ВариантПредставленияНабораВПечатныхФормах,
	 |		ВЫБОР
	 |			КОГДА ЕСТЬNULL(ВременнаяТаблицаНаборы.НомерСтроки, 0) <> 0
	 |				ТОГДА ВременнаяТаблицаНаборы.ВариантРасчетаЦеныНабора
	 |			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВариантыРасчетаЦенНаборов.ПустаяСсылка)
	 |		КОНЕЦ КАК ВариантРасчетаЦеныНабора,
	 |		ВЫБОР
	 |			КОГДА ЕСТЬNULL(ВременнаяТаблицаНаборы.НомерСтроки, 0) <> 0
	 |				ТОГДА ИСТИНА
	 |			ИНАЧЕ ЛОЖЬ
	 |		КОНЕЦ КАК ЭтоКомплектующие,
	 |		ЛОЖЬ КАК ЭтоНабор,
	 |		ВЫБОР
	 |			КОГДА ЕСТЬNULL(ВременнаяТаблицаНаборы.НомерСтроки, 0) <> 0
	 |				ТОГДА ВременнаяТаблицаНаборы.НомерСтроки
	 |			ИНАЧЕ Таблица.НомерСтроки
	 |		КОНЕЦ КАК НомерСтроки,
	 |		Таблица.Номенклатура КАК Номенклатура,
	 |		Таблица.Количество КАК Количество,
	 |		NULL КАК КоличествоУпак,
	 |		Таблица.Цена КАК Цена,
	 |		Таблица.Сумма КАК Сумма,
	 |		Таблица.СтавкаНДС КАК СтавкаНДС,
	 |		Таблица.СуммаНДС КАК СуммаНДС,
	 |		Таблица.Характеристика КАК Характеристика,
	 |		Таблица.СуммаСкидки КАК СуммаСкидки,
	 |		Таблица.СуммаБезСкидки КАК СуммаБезСкидки,
	 |		Таблица.Активность КАК Активность,
	 |		NULL КАК ЭтоВозвратнаяТара
	 |	ИЗ
	 |		Товары КАК Таблица
	 |			ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаНаборы КАК ВременнаяТаблицаНаборы
	 |			ПО (ВременнаяТаблицаНаборы.Ссылка = Таблица.Ссылка)
	 |	
	 |	ОБЪЕДИНИТЬ ВСЕ
	 |	
	 |	ВЫБРАТЬ
	 |		ВременнаяТаблицаНаборы.Ссылка,
	 |		ВременнаяТаблицаНаборы.ВариантПредставленияНабораВПечатныхФормах,
	 |		ВременнаяТаблицаНаборы.ВариантРасчетаЦеныНабора,
	 |		ЛОЖЬ,
	 |		ИСТИНА,
	 |		ВременнаяТаблицаНаборы.НомерСтроки,
	 |		NULL,
	 |		ВременнаяТаблицаНаборы.Количество,
	 |		ВременнаяТаблицаНаборы.КоличествоУпаковок,
	 |		ВЫБОР
	 |			КОГДА &ОтображатьСкидки
	 |				ТОГДА ВЫБОР
	 |						КОГДА ЕСТЬNULL(ВременнаяТаблицаНаборы.Количество, 1) <> 0
	 |							ТОГДА ВременнаяТаблицаНаборы.СуммаБезСкидки / ЕСТЬNULL(ВременнаяТаблицаНаборы.Количество, 1)
	 |						ИНАЧЕ 0
	 |					КОНЕЦ
	 |			ИНАЧЕ ВЫБОР
	 |					КОГДА ЕСТЬNULL(ВременнаяТаблицаНаборы.Количество, 1) <> 0
	 |						ТОГДА ВременнаяТаблицаНаборы.Сумма / ЕСТЬNULL(ВременнаяТаблицаНаборы.Количество, 1)
	 |					ИНАЧЕ 0
	 |				КОНЕЦ
	 |		КОНЕЦ,
	 |		ВременнаяТаблицаНаборы.Сумма,
	 |		ВременнаяТаблицаНаборы.СтавкаНДС,
	 |		ВременнаяТаблицаНаборы.СуммаНДС,
	 |		NULL,
	 |		ВременнаяТаблицаНаборы.СуммаСкидки,
	 |		ВременнаяТаблицаНаборы.СуммаБезСкидки,
	 |		ИСТИНА,
	 |		ЛОЖЬ
	 |	ИЗ
	 |		ВременнаяТаблицаНаборы КАК ВременнаяТаблицаНаборы
	 |	ГДЕ
	 |		ВременнаяТаблицаНаборы.ВариантПредставленияНабораВПечатныхФормах В (ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.ТолькоНабор), ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.НаборИКомплектующие))) КАК Товары
	 |
	 |УПОРЯДОЧИТЬ ПО
	 |	Товары.НомерСтроки,
	 |	ЭтоНабор УБЫВ";
		
	Запрос.Текст = СтрЗаменить(Запрос.Текст,
		"&ТекстЗапросаКоэффициентУпаковки",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
		"Товары.Упаковка",
		"Товары.Номенклатура"));
		
	ПакетРезультатовЗапроса = Запрос.ВыполнитьПакет();
	
	СтруктураДанныхДляПечати = Новый Структура;
	СтруктураДанныхДляПечати.Вставить("РезультатПоШапке", ПакетРезультатовЗапроса[6]);
	СтруктураДанныхДляПечати.Вставить("РезультатПоТабличнойЧасти", ПакетРезультатовЗапроса[ПакетРезультатовЗапроса.Количество() - 1]);
	
	Возврат СтруктураДанныхДляПечати;
	
КонецФункции

Функция СформироватьПечатнуюФормуКоммерческогоПредложения(МассивОбъектов, ОбъектыПечати, ПараметрыПечати = Неопределено)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	ДанныеДляПечати = ПолучитьДанныеДляПечати(МассивОбъектов, ПараметрыПечати);
	
	ДанныеПечати = ДанныеДляПечати.РезультатПоШапке.Выбрать();
	Товары       = ДанныеДляПечати.РезультатПоТабличнойЧасти.Выгрузить();
	
	ПервыйДокумент = Истина;
	
	Пока ДанныеПечати.Следующий() Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ДанныеОбъекта = ПолучитьДанныеОбъектаПоВыборке(ДанныеПечати, Товары);
		ЗаполнитьТабличныйДокументПоДаннымОбъекта(ТабличныйДокумент, ДанныеОбъекта);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеПечати.Ссылка);
		
	КонецЦикла;
	
	Если ПривилегированныйРежим() Тогда
		УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Процедура ЗаполнитьТабличныйДокументПоДаннымОбъекта(ТабличныйДокумент, ДанныеОбъекта)
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.КоммерческоеПредложениеКлиенту.ПФ_MXL_КоммерческоеПредложениеРинэко");
	
	// Вывод заголовка
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ФормированиеПечатныхФорм.ВывестиЛоготипВТабличныйДокумент(Макет, ОбластьЗаголовок, "Заголовок", ДанныеОбъекта.Организация);
	ОбластьЗаголовок.Параметры.Заполнить(ДанныеОбъекта);
	ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(ТабличныйДокумент, Макет, ОбластьЗаголовок, ДанныеОбъекта.Ссылка);
	ТабличныйДокумент.Вывести(ОбластьЗаголовок);
	
	// Вывод области контактного лица
	Если ЗначениеЗаполнено(ДанныеОбъекта.КонтактноеЛицо) Тогда
		ОбластьКонтактноеЛицо = Макет.ПолучитьОбласть("КонтактноеЛицо");
		ОбластьКонтактноеЛицо.Параметры.Заполнить(ДанныеОбъекта);
		ТабличныйДокумент.Вывести(ОбластьКонтактноеЛицо);
	КонецЕсли;
	
	// Вывод области предложения
	ОбластьПредложение = Макет.ПолучитьОбласть("Предложение");
	ОбластьПредложение.Параметры.Заполнить(ДанныеОбъекта);
	ТабличныйДокумент.Вывести(ОбластьПредложение);
	
	Если ДанныеОбъекта.ЕстьСкидки Тогда
		ПостфиксСтрок = "";
	Иначе
		ПостфиксСтрок = "БезСкидки";
	КонецЕсли;
	
	ОбластьСтрокаТаблицыТоварыСтандарт    = Макет.ПолучитьОбласть("СтрокаТаблицыТовары" + ПостфиксСтрок);
	ОбластьШапкаТаблицыТовары             = Макет.ПолучитьОбласть("ШапкаТаблицыТовары"  + ПостфиксСтрок);
	ОбластьПодвалТаблицыТовары            = Макет.ПолучитьОбласть("ПодвалТаблицыТовары");
	ОбластьСрокДействия                   = Макет.ПолучитьОбласть("СрокДействия");
	ОбластьГрафикОплаты                   = Макет.ПолучитьОбласть("ГрафикОплаты");
	ОбластьФормаОплаты                    = Макет.ПолучитьОбласть("ФормаОплаты");
	ОбластьДопИнформацияЗаголовок         = Макет.ПолучитьОбласть("ДопИнформацияЗаголовок");
	ОбластьСклад                          = Макет.ПолучитьОбласть("Склад");
	ОбластьДополнительнаяИнформация       = Макет.ПолучитьОбласть("ДополнительнаяИнформация");
	ОбластьПодвал                         = Макет.ПолучитьОбласть("Подвал");
	ОбластьАдресЭлектроннойПочтыМенеджера = Макет.ПолучитьОбласть("АдресЭлектроннойПочтыМенеджера");
	ОбластьТелефонОрганизации             = Макет.ПолучитьОбласть("ТелефонОрганизации");
	
	//Если ДанныеОбъекта.ИспользоватьНаборы Тогда
	//	ОбластьСтрокаТаблицыТоварыНабор         = Макет.ПолучитьОбласть("СтрокаТаблицыТовары" + ПостфиксСтрок + "Набор");
	//	ОбластьСтрокаТаблицыТоварыКомплектующие = Макет.ПолучитьОбласть("СтрокаТаблицыТовары" + ПостфиксСтрок + "Комплектующие");
	//КонецЕсли;
	
	// Вывод шапки таблицы товаров
	Если ДанныеОбъекта.ЕстьСкидки Тогда
		СтруктураДанныхТаблицыТовары = Новый Структура("Скидка",ДанныеОбъекта.ЗаголовокСкидки);
		ОбластьШапкаТаблицыТовары.Параметры.Заполнить(СтруктураДанныхТаблицыТовары);
	КонецЕсли; 
	ТабличныйДокумент.Вывести(ОбластьШапкаТаблицыТовары);
	
	// Вывод строк таблицы товаров
	Для Каждого Товар Из ДанныеОбъекта.Товары Цикл
		//
		//Если НаборыСервер.ИспользоватьОбластьНабор(Товар, ДанныеОбъекта.ИспользоватьНаборы) Тогда
		//	ОбластьСтрокаТаблицыТовары   = ОбластьСтрокаТаблицыТоварыНабор;
		//ИначеЕсли НаборыСервер.ИспользоватьОбластьКомплектующие(Товар, ДанныеОбъекта.ИспользоватьНаборы) Тогда
		//	ОбластьСтрокаТаблицыТовары   = ОбластьСтрокаТаблицыТоварыКомплектующие;
		//Иначе
			ОбластьСтрокаТаблицыТовары   = ОбластьСтрокаТаблицыТоварыСтандарт;
		//КонецЕсли;
		
		ОбластьСтрокаТаблицыТовары.Параметры.Заполнить(Товар);
		ТабличныйДокумент.Вывести(ОбластьСтрокаТаблицыТовары);
	КонецЦикла;
	
	// Вывод подвала таблицы товров
	ОбластьПодвалТаблицыТовары.Параметры.Заполнить(ДанныеОбъекта);
	ТабличныйДокумент.Вывести(ОбластьПодвалТаблицыТовары);
	
	// Вывод срока действия коммерческого предложения
	Если ЗначениеЗаполнено(ДанныеОбъекта.СрокДействия) Тогда
		
		ОбластьСрокДействия.Параметры.Заполнить(ДанныеОбъекта);
		ТабличныйДокумент.Вывести(ОбластьСрокДействия);
		
	КонецЕсли;
	
	//Если ЗначениеЗаполнено(ДанныеОбъекта.ГрафикОплаты)
	//	Или ЗначениеЗаполнено(ДанныеОбъекта.ФормаОплаты)
	//	Или ЗначениеЗаполнено(ДанныеОбъекта.Склад)
	//	Или ЗначениеЗаполнено(ДанныеОбъекта.ДополнительнаяИнформация) Тогда
		
		ТабличныйДокумент.Вывести(ОбластьДопИнформацияЗаголовок);
		
	//КонецЕсли;
	
	//Если ЗначениеЗаполнено(ДанныеОбъекта.ГрафикОплаты) Тогда
	//	ОбластьГрафикОплаты.Параметры.Заполнить(ДанныеОбъекта);
	//	ТабличныйДокумент.Вывести(ОбластьГрафикОплаты);
	//КонецЕсли;
	
	//Если ЗначениеЗаполнено(ДанныеОбъекта.ФормаОплаты) Тогда
	//	ОбластьФормаОплаты.Параметры.Заполнить(ДанныеОбъекта);
	//	ТабличныйДокумент.Вывести(ОбластьФормаОплаты);
	//КонецЕсли;
	
	Если ЗначениеЗаполнено(ДанныеОбъекта.Склад) Тогда
		ОбластьСклад.Параметры.Заполнить(ДанныеОбъекта);
		ТабличныйДокумент.Вывести(ОбластьСклад);
	КонецЕсли;
	
	//Если ЗначениеЗаполнено(ДанныеОбъекта.ДополнительнаяИнформация) Тогда
	//	ОбластьДополнительнаяИнформация.Параметры.Заполнить(ДанныеОбъекта);
	//	ТабличныйДокумент.Вывести(ОбластьДополнительнаяИнформация);
	//КонецЕсли;
	
	ОбластьПодвал.Параметры.Заполнить(ДанныеОбъекта);
	ТабличныйДокумент.Вывести(ОбластьПодвал);
	
	Если ЗначениеЗаполнено(ДанныеОбъекта.ТелефонОрганизации) Тогда
		ОбластьТелефонОрганизации.Параметры.Заполнить(ДанныеОбъекта);
		ТабличныйДокумент.Вывести(ОбластьТелефонОрганизации);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДанныеОбъекта.АдресЭлектроннойПочтыМенеджера) Тогда
		ОбластьАдресЭлектроннойПочтыМенеджера.Параметры.Заполнить(ДанныеОбъекта);
		ТабличныйДокумент.Вывести(ОбластьАдресЭлектроннойПочтыМенеджера);
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьДанныеОбъектаПоВыборке(Выборка, Товары)
	
	ДанныеОбъекта = Новый Структура;
	
	СведенияОрганизации = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Выборка.Организация, Выборка.Дата);
	
	Если ЗначениеЗаполнено(Выборка.ОрганизацияСокращенноеНаименование) Тогда
		ПредставлениеОрганизации = Выборка.ОрганизацияСокращенноеНаименование;
	Иначе
		ПредставлениеОрганизации = Выборка.ОрганизацияНаименование;
	КонецЕсли;
	
	ТаблицаТовары = Товары.НайтиСтроки(Новый Структура("Ссылка", Выборка.Ссылка));
	
	ЗаголовокСкидки = ФормированиеПечатныхФорм.НужноВыводитьСкидки(ТаблицаТовары, Истина);
	
	ИспользоватьНаборы = Ложь;
	Если Товары.Колонки.Найти("ЭтоНабор") <> Неопределено Тогда
		ИспользоватьНаборы = Истина;
	КонецЕсли;
	ПустыеДанные = НаборыСервер.ПустыеДанные();
	
	ДанныеОбъекта.Вставить("Ссылка",                            Выборка.Ссылка);
	ДанныеОбъекта.Вставить("Организация",                       Выборка.Организация);
	ДанныеОбъекта.Вставить("ПредставлениеОрганизации",          ПредставлениеОрганизации);
	ДанныеОбъекта.Вставить("КонтактноеЛицо",                    Выборка.КонтактноеЛицо);
	ДанныеОбъекта.Вставить("Менеджер",                          Выборка.Менеджер);
	ДанныеОбъекта.Вставить("Номер",                             ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Выборка.Номер, Ложь, Истина));
	ДанныеОбъекта.Вставить("Дата",                              Формат(Выборка.Дата,"ДЛФ=D"));
	ДанныеОбъекта.Вставить("ДатаСведений",                      Выборка.Дата);
	ДанныеОбъекта.Вставить("СрокДействия",                      Формат(Выборка.СрокДействия,"ДЛФ=D"));
	ДанныеОбъекта.Вставить("ТелефонОрганизации",                СведенияОрганизации.Телефоны);
	ДанныеОбъекта.Вставить("АдресОрганизации",                  СведенияОрганизации.ЮридическийАдрес);
	ДанныеОбъекта.Вставить("АдресЭлектроннойПочтыМенеджера",    Выборка.АдресЭлектроннойПочтыМенеджера);
	ДанныеОбъекта.Вставить("Склад",                             Выборка.Склад);
	ДанныеОбъекта.Вставить("ЕстьСкидки",                        ЗаголовокСкидки.ЕстьСкидки);
	ДанныеОбъекта.Вставить("ЗаголовокСкидки",                   ЗаголовокСкидки.Скидка);
	ДанныеОбъекта.Вставить("ТолькоНаценка",                     ЗаголовокСкидки.ТолькоНаценка);
	
	ДанныеОбъекта.Вставить("Товары", Новый Массив);
	
	СуммаВсего    = 0;
	СуммаВсегоНДС = 0;
	КоличествоТоваров = 0;
	
	НомерСтроки = 0;
	
	Для Каждого ВыборкаТовары Из ТаблицаТовары Цикл
		
		Если НЕ ВыборкаТовары.Активность Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаТаблицыТовары = Новый Структура;
		
		Если НаборыСервер.ВыводитьТолькоЗаголовок(ВыборкаТовары, ИспользоватьНаборы) Тогда
			СтрокаТаблицыТовары.Вставить("НомерСтроки",          Неопределено);
		Иначе
			НомерСтроки = НомерСтроки + 1;
			СтрокаТаблицыТовары.Вставить("НомерСтроки",          НомерСтроки);
		КонецЕсли;
		
		ПрефиксИПостфикс = НаборыСервер.ПолучитьПрефиксИПостфикс(ВыборкаТовары, ИспользоватьНаборы);
		
		ДополнительныеПараметрыПолученияНаименованияДляПечати = НоменклатураКлиентСервер.ДополнительныеПараметрыПредставлениеНоменклатурыДляПечати();
		ДополнительныеПараметрыПолученияНаименованияДляПечати.ВозвратнаяТара = ВыборкаТовары.ЭтоВозвратнаяТара;		
		
		НаименованиеТовара = ПрефиксИПостфикс.Префикс + НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
		ВыборкаТовары.НаименованиеПолное,
		ВыборкаТовары.Характеристика,
		,
		,
		ДополнительныеПараметрыПолученияНаименованияДляПечати) + ПрефиксИПостфикс.Постфикс;
		
		СтрокаТаблицыТовары.Вставить("Номенклатура",         НаименованиеТовара);
		СтрокаТаблицыТовары.Вставить("Количество",           ВыборкаТовары.Количество);
		СтрокаТаблицыТовары.Вставить("ЕдиницаИзмерения",     ВыборкаТовары.Номенклатура.ЕдиницаИзмерения);
		СтрокаТаблицыТовары.Вставить("Цена",                 Формат(ВыборкаТовары.Цена,"ЧДЦ=2; ЧРД=,"));
		СтрокаТаблицыТовары.Вставить("СуммаСкидки",          ВыборкаТовары.СуммаСкидки);
		СтрокаТаблицыТовары.Вставить("Сумма",                Формат(ВыборкаТовары.Сумма,"ЧДЦ=2; ЧРД=,"));
		СтрокаТаблицыТовары.Вставить("ЭтоНабор",             ВыборкаТовары.ЭтоНабор);
		СтрокаТаблицыТовары.Вставить("ЭтоКомплектующие",     ВыборкаТовары.ЭтоКомплектующие);
		СтрокаТаблицыТовары.Вставить("ВариантПредставленияНабораВПечатныхФормах", ВыборкаТовары.ВариантПредставленияНабораВПечатныхФормах);
		СтрокаТаблицыТовары.Вставить("ВариантРасчетаЦеныНабора",                  ВыборкаТовары.ВариантРасчетаЦеныНабора);
		
		Если ДанныеОбъекта.ЕстьСкидки Тогда
			СтрокаТаблицыТовары.СуммаСкидки = ?(ДанныеОбъекта.ТолькоНаценка,- СтрокаТаблицыТовары.СуммаСкидки,СтрокаТаблицыТовары.СуммаСкидки);
			СтрокаТаблицыТовары.СуммаСкидки = Формат(СтрокаТаблицыТовары.СуммаСкидки,"ЧДЦ=2; ЧРД=,");
		КонецЕсли; 
		
		Если НаборыСервер.ВыводитьТолькоЗаголовок(ВыборкаТовары, ИспользоватьНаборы) Тогда
			ЗаполнитьЗначенияСвойств(СтрокаТаблицыТовары, ПустыеДанные);
		КонецЕсли;
		
		ДанныеОбъекта.Товары.Добавить(СтрокаТаблицыТовары);
		
		Если Не НаборыСервер.ИспользоватьОбластьКомплектующие(ВыборкаТовары, ИспользоватьНаборы) Тогда
			
			СуммаВсего        = СуммаВсего + ВыборкаТовары.Сумма;
			СуммаВсегоНДС     = СуммаВсегоНДС + ВыборкаТовары.СуммаНДС;
			
		КонецЕсли;
		
	КонецЦикла;
	
	ПредставлениеВалюты = ?(ЗначениеЗаполнено(Выборка.Валюта), СокрЛП(Выборка.Валюта), "");
	
	СуммаКПрописи = СуммаВсего + ?(Выборка.ЦенаВключаетНДС, 0, СуммаВсегоНДС);
	СуммаПрописью = РаботаСКурсамиВалют.СформироватьСуммуПрописью(СуммаКПрописи, Выборка.Валюта);
	
	ИтоговаяСтрока = "";
	Если Выборка.УчитыватьНДС И НЕ Выборка.ЦенаВключаетНДС Тогда
		ИтоговаяСтрока = НСтр("ru = 'Итого: %СуммаВсего% %ПредставлениеВалюты%, сумма НДС: %СуммаНДС% %ПредставлениеВалюты%';
		|en = 'Total: %СуммаВсего% %ПредставлениеВалюты%, VAT amount: %СуммаНДС% %ПредставлениеВалюты%'") + Символы.ПС;
		ИтоговаяСтрока = СтрЗаменить(ИтоговаяСтрока, "%СуммаВсего%", Формат(СуммаВсего,"ЧДЦ=2; ЧРД=,"));
		ИтоговаяСтрока = СтрЗаменить(ИтоговаяСтрока, "%СуммаНДС%", Формат(СуммаВсегоНДС,"ЧДЦ=2; ЧРД=,; ЧН=0,00"));
		ИтоговаяСтрока = СтрЗаменить(ИтоговаяСтрока, "%ПредставлениеВалюты%", ПредставлениеВалюты);
	КонецЕсли;
	
	ИтоговаяСтрока = ИтоговаяСтрока + НСтр("ru = 'Всего наименований %Количество%, на сумму %Сумма%';
	|en = 'Total number of names %Количество% in the amount of %Сумма%'");
	ИтоговаяСтрока = СтрЗаменить(ИтоговаяСтрока, "%Количество%", НомерСтроки);
	ИтоговаяСтрока = СтрЗаменить(ИтоговаяСтрока, "%Сумма%",      ФормированиеПечатныхФорм.ФорматСумм(СуммаКПрописи, Выборка.Валюта));
	
	Если Выборка.УчитыватьНДС И Выборка.ЦенаВключаетНДС Тогда
		
		СтрокаНДС = НСтр("ru = 'в том числе НДС %СуммаНДС% %ПредставлениеВалюты%';
		|en = 'VAT inclusive %СуммаНДС% %ПредставлениеВалюты%'");
		СтрокаНДС = СтрЗаменить(СтрокаНДС, "%СуммаНДС%", Формат(СуммаВсегоНДС,"ЧДЦ=2; ЧРД=,; ЧН=0,00"));
		СтрокаНДС = СтрЗаменить(СтрокаНДС, "%ПредставлениеВалюты%", ПредставлениеВалюты);
		ИтоговаяСтрока = ИтоговаяСтрока + ", " + СтрокаНДС;
		
	КонецЕсли;
	
	Если НЕ Выборка.УчитыватьНДС Тогда
		
		ИтоговаяСтрока = ИтоговаяСтрока + ", " + НСтр("ru = 'Без налога (НДС)';
		|en = 'Without tax (VAT)'");
		
	КонецЕсли;
	
	ДанныеОбъекта.Вставить("ИтоговаяСтрока",    ИтоговаяСтрока);
	ДанныеОбъекта.Вставить("СтоимостьПрописью", СуммаПрописью);
	
	Возврат ДанныеОбъекта;
	
КонецФункции

&Вместо("Печать")
Процедура Рин1_Печать(Знач МассивОбъектов, Знач ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода)
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "КоммерческоеПредложение") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, 
		"КоммерческоеПредложение",
		НСтр("ru = 'Коммерческое предложение клиенту';
		|en = 'Quotation to customer'"), 
		ПечатнаяФормаКоммерческоеПредложениеКлиенту(МассивОбъектов, ОбъектыПечати, ПараметрыПечати));
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "КомплектДокументов") Тогда
		КоллекцияПечатныхФорм.Очистить();
		СформироватьКомплектПечатныхФорм(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати);
	КонецЕсли;

КонецПроцедуры

Функция ПолучитьДанныеПечати(Знач МассивДокументов, Знач МассивИменМакетов) Экспорт
	
	Возврат Новый Структура("Данные,Макеты",
				ПолучитьДанныеОбъектаПоМакетам(МассивДокументов, МассивИменМакетов),
				ПолучитьМакетыИОписанияСекций(МассивИменМакетов));
	
КонецФункции

Функция ПолучитьДанныеОбъектаПоМакетам(Знач МассивДокументов, Знач МассивИменМакетов) Экспорт
	
	ДанныеПоВсемОбъектам = Новый Соответствие;
	
	ДанныеДляПечати = ПолучитьДанныеДляПечати(МассивДокументов, Неопределено);
	
	ДанныеПечати = ДанныеДляПечати.РезультатПоШапке.Выбрать();
	Товары       = ДанныеДляПечати.РезультатПоТабличнойЧасти.Выгрузить();
	
	Пока ДанныеПечати.Следующий() Цикл
		ДанныеОбъектаПоМакетам = Новый Структура;
		ДанныеОбъекта = ПолучитьДанныеОбъектаПоВыборке(ДанныеПечати, Товары);
		Для Каждого ИмяМакета Из МассивИменМакетов Цикл
			ДанныеОбъектаПоМакетам.Вставить(ИмяМакета, ДанныеОбъекта);
		КонецЦикла;
		ДанныеПоВсемОбъектам.Вставить(ДанныеПечати.Ссылка, ДанныеОбъектаПоМакетам);
	КонецЦикла;
	
	Возврат ДанныеПоВсемОбъектам;
	
КонецФункции

Функция ПолучитьМакетыИОписанияСекций(Знач МассивИменМакетов) Экспорт
	
	ОписаниеСекций = Новый Структура;
	ДвоичныеДанныеМакетов = Новый Структура;
	
	Для Каждого ИмяМакета Из МассивИменМакетов Цикл
		
		Макет = Неопределено;
		ОписаниеСекцийМакета = Неопределено;
		
		Если ИмяМакета = "ПФ_DOC_КоммерческоеПредложение" Тогда
			ОписаниеСекцийМакета = ПолучитьОписаниеОбластейКоммерческоеПредложение();
			Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.КоммерческоеПредложениеКлиенту.ПФ_DOC_КоммерческоеПредложение");
		ИначеЕсли ИмяМакета = "ПФ_ODT_КоммерческоеПредложение" Тогда
			ОписаниеСекцийМакета = ПолучитьОписаниеОбластейКоммерческоеПредложение();
			Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.КоммерческоеПредложениеКлиенту.ПФ_ODT_КоммерческоеПредложение");
		КонецЕсли;
		
		Если ОписаниеСекцийМакета <> Неопределено И Макет <> Неопределено Тогда
			
			ОписаниеСекций.Вставить(ИмяМакета, ОписаниеСекцийМакета);
			ДвоичныеДанныеМакетов.Вставить(ИмяМакета, Макет);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Новый Структура(
	"ОписаниеСекций,ДвоичныеДанныеМакетов",
	ОписаниеСекций,
	ДвоичныеДанныеМакетов);
	
КонецФункции

Функция ПолучитьОписаниеОбластейКоммерческоеПредложение()
	
	Секции = Новый Структура;
	
	УправлениеПечатью.ДобавитьОписаниеОбласти(Секции, "ВерхнийКолонтитул",				"ВерхнийКолонтитул");
	УправлениеПечатью.ДобавитьОписаниеОбласти(Секции, "НижнийКолонтитул",				"НижнийКолонтитул");
	УправлениеПечатью.ДобавитьОписаниеОбласти(Секции, "Заголовок",						"Общая");
	УправлениеПечатью.ДобавитьОписаниеОбласти(Секции, "КонтактноеЛицо",					"Общая");
	УправлениеПечатью.ДобавитьОписаниеОбласти(Секции, "Предложение",					"Общая");
	УправлениеПечатью.ДобавитьОписаниеОбласти(Секции, "ШапкаТаблицаТовары",				"СтрокаТаблицы");
	УправлениеПечатью.ДобавитьОписаниеОбласти(Секции, "СтрокаТаблицаТовары",						"СтрокаТаблицы");
	УправлениеПечатью.ДобавитьОписаниеОбласти(Секции, "СтрокаТаблицаТоварыНабор",					"СтрокаТаблицы");
	УправлениеПечатью.ДобавитьОписаниеОбласти(Секции, "СтрокаТаблицаТоварыКомплектующие",			"СтрокаТаблицы");
	УправлениеПечатью.ДобавитьОписаниеОбласти(Секции, "СтрокаТаблицаТоварыКомплектующиеКонец",			"СтрокаТаблицы");
	УправлениеПечатью.ДобавитьОписаниеОбласти(Секции, "ШапкаТаблицаТоварыБезСкидки",	"СтрокаТаблицы");
	УправлениеПечатью.ДобавитьОписаниеОбласти(Секции, "СтрокаТаблицаТоварыБезСкидки",				"СтрокаТаблицы");
	УправлениеПечатью.ДобавитьОписаниеОбласти(Секции, "СтрокаТаблицаТоварыБезСкидкиНабор",			"СтрокаТаблицы");
	УправлениеПечатью.ДобавитьОписаниеОбласти(Секции, "СтрокаТаблицаТоварыБезСкидкиКомплектующие",	"СтрокаТаблицы");
	УправлениеПечатью.ДобавитьОписаниеОбласти(Секции, "СтрокаТаблицаТоварыБезСкидкиКомплектующиеКонец",	"СтрокаТаблицы");
	УправлениеПечатью.ДобавитьОписаниеОбласти(Секции, "ИтоговаяСтрока",					"Общая");
	УправлениеПечатью.ДобавитьОписаниеОбласти(Секции, "СрокДействия",					"Общая");
	УправлениеПечатью.ДобавитьОписаниеОбласти(Секции, "ЗаголовокДопИнформации",			"Общая");
	УправлениеПечатью.ДобавитьОписаниеОбласти(Секции, "ГрафикОплаты",					"Общая");
	УправлениеПечатью.ДобавитьОписаниеОбласти(Секции, "ФормаОплаты",					"Общая");
	УправлениеПечатью.ДобавитьОписаниеОбласти(Секции, "Склад",							"Общая");
	УправлениеПечатью.ДобавитьОписаниеОбласти(Секции, "ДополнительнаяИнформация",		"Общая");
	УправлениеПечатью.ДобавитьОписаниеОбласти(Секции, "Подвал",							"Общая");
	УправлениеПечатью.ДобавитьОписаниеОбласти(Секции, "ТелефонОрганизации",				"Общая");
	УправлениеПечатью.ДобавитьОписаниеОбласти(Секции, "АдресЭлектроннойПочтыМенеджера",	"Общая");
	
	Возврат Секции;
	
КонецФункции

&Вместо("ПечатнаяФормаКоммерческоеПредложениеКлиенту")
Функция Рин1_ПечатнаяФормаКоммерческоеПредложениеКлиенту(МассивОбъектов, ОбъектыПечати, ПараметрыПечати)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	ДанныеДляПечати = ДанныеДляПечати(МассивОбъектов, ПараметрыПечати);
	
	ДанныеШапки   = ДанныеДляПечати.РезультатПоШапке.Выбрать();
	ТаблицаТовары = ДанныеДляПечати.РезультатПоТоварам.Выгрузить();
	
	ПервыйДокумент = Истина;
	
	Пока ДанныеШапки.Следующий() Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ДанныеОбъекта = ДанныеОбъектаПоДаннымДляПечати(ДанныеШапки, ТаблицаТовары);
		
		//bercut261219
		ДанныеОбъекта.ЕстьСкидки = ПараметрыПечати.ОтображатьСкидки;
		//
		
		ЗаполнитьТабличныйДокументКоммерческоеПредложениеКлиенту(ТабличныйДокумент, ДанныеОбъекта,ПараметрыПечати);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеШапки.Ссылка);
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции
