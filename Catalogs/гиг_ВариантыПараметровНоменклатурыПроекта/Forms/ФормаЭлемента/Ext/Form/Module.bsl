&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	гиг_РасчетИзделий.УстановитьУсловноеОформление(Элементы, УсловноеОформление);
	
КонецПроцедуры
 
&НаСервере
Процедура ОбновитьДеревоЗначенийНаСервере()
	
	гиг_РасчетИзделий.ОбновитьДеревоЗначений(Объект.ЗначенияПараметров, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДеревоЗначенийНаКлиенте() Экспорт
	
	ОбновитьДеревоЗначенийНаСервере();
	
	Для каждого ТекСтрока Из ДеревоЗначенийПараметров.ПолучитьЭлементы() Цикл
		Элементы.ДеревоЗначенийПараметров.Развернуть(ТекСтрока.ПолучитьИдентификатор(), Истина);
	КонецЦикла;
	
КонецПроцедуры
 

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.ЗначенияЗаполнения.Свойство("НоменклатураПроекта") Тогда
		Объект.НоменклатураПроекта = Параметры.ЗначенияЗаполнения.НоменклатураПроекта;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка)
		И Параметры.Свойство("ПредметРасчета") 
		И Параметры.Свойство("НоменклатураПроекта") 
	Тогда
		
		Объект.НоменклатураПроекта = Параметры.НоменклатураПроекта;
		
		Если Параметры.Свойство("ОбъектКопирования") Тогда
			//код, при копировании варианта параметров
			Если ЗначениеЗаполнено(Параметры.ОбъектКопирования) Тогда
				Объект.ЗначенияПараметров.Загрузить(Параметры.ОбъектКопирования.ЗначенияПараметров.Выгрузить());
			КонецЕсли;
		Иначе
			//код, при создании нового варианта параметров
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ЗадачиПроектовгиг_ЗначенияПараметров.Ссылка.ГИГ_ПредметРасчета КАК ПредметРасчета,
			|	ЗадачиПроектовгиг_ЗначенияПараметров.ЗначениеПараметра КАК ЗначениеПараметра,
			|	ЗадачиПроектовгиг_ЗначенияПараметров.ИдентификаторВариантаПараметров КАК ИдентификаторВариантаПараметров
			|ИЗ
			|	Справочник.ЗадачиПроектов.гиг_ЗначенияПараметров КАК ЗадачиПроектовгиг_ЗначенияПараметров
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.гиг_НоменклатураПроекта КАК гиг_НоменклатураПроекта
			|		ПО ЗадачиПроектовгиг_ЗначенияПараметров.Ссылка = гиг_НоменклатураПроекта.ЗадачаПроекта
			|ГДЕ
			|	гиг_НоменклатураПроекта.Ссылка = &НоменклатураПроекта
			|	И ЗадачиПроектовгиг_ЗначенияПараметров.Ссылка.ГИГ_ПредметРасчета = &ПредметРасчета
			|ИТОГИ ПО
			|	ЗадачиПроектовгиг_ЗначенияПараметров.ИдентификаторВариантаПараметров";
			
			Запрос.УстановитьПараметр("НоменклатураПроекта", Параметры.НоменклатураПроекта);
			Запрос.УстановитьПараметр("ПредметРасчета", Параметры.ПредметРасчета);
			
			ВыборкаПоИдентификаторам = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Если ВыборкаПоИдентификаторам.Следующий() Тогда
				Выборка = ВыборкаПоИдентификаторам.Выбрать();
				Пока Выборка.Следующий() Цикл
					НоваяСтрока = Объект.ЗначенияПараметров.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка, "ПредметРасчета");
				КонецЦикла;
			КонецЕсли;
			//Объект.ЗначенияПараметров.Загрузить(Запрос.Выполнить().Выгрузить());
		КонецЕсли;
	КонецЕсли; 
	
	//если создаем из списка номенклатуры проекта
	Если Параметры.Свойство("Идентификатор") И Параметры.Свойство("НоменклатураПроекта") Тогда
		Объект.НоменклатураПроекта = Параметры.НоменклатураПроекта;
		Если ЗначениеЗаполнено(Параметры.НоменклатураПроекта) Тогда
			Объект.Владелец = Параметры.НоменклатураПроекта.Владелец;
		КонецЕсли;
		Объект.Идентификатор = Параметры.Идентификатор;
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ЗадачиПроектовгиг_ЗначенияПараметров.ПараметрПредметаРасчета КАК ПараметрПредметаРасчета,
		|	ЗадачиПроектовгиг_ЗначенияПараметров.ЗначениеПараметра КАК ЗначениеПараметра,
		|	ЗадачиПроектов.ГИГ_ПредметРасчета КАК ГИГ_ПредметРасчета
		|ИЗ
		|	Справочник.ЗадачиПроектов.гиг_ЗначенияПараметров КАК ЗадачиПроектовгиг_ЗначенияПараметров
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЗадачиПроектов КАК ЗадачиПроектов
		|		ПО ЗадачиПроектовгиг_ЗначенияПараметров.Ссылка = ЗадачиПроектов.Ссылка
		|ГДЕ
		|	ЗадачиПроектовгиг_ЗначенияПараметров.ИдентификаторВариантаПараметров = &Идентификатор";
		Запрос.УстановитьПараметр("Идентификатор", Параметры.Идентификатор);
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			НоваяСтрока = Объект.ЗначенияПараметров.Добавить();
			НоваяСтрока.ПредметРасчета = Выборка.ГИГ_ПредметРасчета;
			НоваяСтрока.ЗначениеПараметра = Выборка.ЗначениеПараметра;
		КонецЦикла;
	КонецЕсли; 
	
	ОбновитьДеревоЗначенийНаСервере();
	
	УстановитьУсловноеОформление();
	
КонецПроцедуры

&НаКлиенте
Процедура ПодобратьЗначенияПараметров(Команда)
	
	гиг_РасчетИзделийКлиент.ПодобратьЗначенияПараметров(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура ПодобратьПредметыРасчета(Команда)
	
	гиг_РасчетИзделийКлиент.ПодобратьПредметыРасчета(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьЗначение(Команда)
	
	Если Не ЗначениеЗаполнено(Элементы.ДеревоЗначенийПараметров.ТекущиеДанные.ЗначениеПараметра) Тогда
		Возврат;
	КонецЕсли;
	
	гиг_РасчетИзделийКлиент.УдалитьЗначение(ЭтаФорма, Объект.ЗначенияПараметров);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	гиг_РасчетИзделийКлиент.ОбработкаВыбора(ЭтаФорма, Объект.ЗначенияПараметров, ВыбранноеЗначение, ИсточникВыбора);
	
КонецПроцедуры

&НаСервере
Процедура СгенерироватьНаименованиеНаСервере()
	
	НаименованиеПредметаРасчета = "";
	НаименованиеЗначенийПараметров = "";
	ПустойРодитель = Справочники.гиг_ЗначенияПараметровПредметовРасчета.ПустаяСсылка();
	Для Каждого ТекСтрока Из Объект.ЗначенияПараметров Цикл
		Если Не ЗначениеЗаполнено(НаименованиеПредметаРасчета) Тогда
			НаименованиеПредметаРасчета = Строка(ТекСтрока.ПредметРасчета);
		КонецЕсли;
		
		ПредставлениеПараметраКонец  = Строка(ТекСтрока.ЗначениеПараметра);
		ТекРодитель = ТекСтрока.ЗначениеПараметра.Родитель;
		Пока ТекРодитель <> ПустойРодитель Цикл
			ПредставлениеПараметраКонец = Строка(ТекРодитель) + " | " + ПредставлениеПараметраКонец;
			ТекРодитель = ТекРодитель.Родитель;
		КонецЦикла;		
		
		Если ЗначениеЗаполнено(НаименованиеЗначенийПараметров) Тогда
			НаименованиеЗначенийПараметров = НаименованиеЗначенийПараметров + " / " + ТекСтрока.ЗначениеПараметра.Владелец + " - " + ПредставлениеПараметраКонец;
		Иначе
			НаименованиеЗначенийПараметров = Строка(ТекСтрока.ЗначениеПараметра.Владелец) + " - " + ПредставлениеПараметраКонец;
		КонецЕсли;
	КонецЦикла;
	
	Объект.Наименование = НаименованиеПредметаРасчета + " / " + НаименованиеЗначенийПараметров;
	
КонецПроцедуры

&НаКлиенте
Процедура СгенерироватьНаименование(Команда)
	СгенерироватьНаименованиеНаСервере();
КонецПроцедуры
