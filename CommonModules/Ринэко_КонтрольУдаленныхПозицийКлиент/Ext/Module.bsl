Процедура НачатьКонтрольУдаленныхПозиций(Форма,Отказ,ПараметрыЗаписи) Экспорт
	Попытка
		Если ТипЗнч(Форма) <> Тип("ФормаКлиентскогоПриложения") И Форма.Параметры.Ключ.Пустая() Тогда
			Возврат;
		КонецЕсли;
		
		Если ОбщегоНазначенияУТКлиентСервер.ЕстьРеквизитОбъекта(Форма.Объект,"Статус") Тогда 
			
			ДопустимыйСтатус = ПолучитьДопустимыйСтатус(Форма.Объект.Ссылка);
			
			Если ДопустимыйСтатус <> Неопределено И ДопустимыйСтатус <> Форма.Объект.Статус Тогда 
				Возврат;
			КонецЕсли;
			
		КонецЕсли;
		
		АдресТаблицаРасхождений = СформироватьТаблицуРасхождений(Форма);
		
		Если АдресТаблицаРасхождений = Неопределено Тогда
			Возврат; 
		КонецЕсли;
		
		Отказ = Истина;
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Адрес",АдресТаблицаРасхождений);
		
		ОповещениеОЗакрытии = Новый ОписаниеОповещения("ФормаСопоставленияЗавершение",ОбщегоНазначенияКлиент.ОбщийМодуль("Ринэко_КонтрольУдаленныхПозицийКлиент"));
		ОткрытьФорму("ОбщаяФорма.РИНЕЭКО_ФормаКонтроляУдаленныхПозиций",ПараметрыФормы,Форма,,,,ОповещениеОЗакрытии,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	Исключение
		Отказ = Истина;
	КонецПопытки;
КонецПроцедуры

Процедура ФормаСопоставленияЗавершение(Результат,Параметры) Экспорт
	
	Если ТипЗнч(Результат) = Тип("КодВозвратаДиалога") Тогда
		Возврат;
	ИначеЕсли Результат = Неопределено Тогда 
		Возврат
	ИначеЕсли Результат.Адрес = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ИмяТабличнойЧасти = СвормироватьИмяТабличнойЧасти(Результат.Владелец.Объект.Ссылка);
	
	Если ИмяТабличнойЧасти = Неопределено Тогда
		Возврат ;
	КонецЕсли;
	
	ДанныеДляДобавления = ПолучитьИзВременногоХранилища(Результат.Адрес);
	
	ИтоговыйМассивСтруктура = Ринэко_КонтрольУдаленныхПозицийВызовСервера.СформироватьТаблицуДляЗаполнения(ДанныеДляДобавления,Результат.Владелец.Объект.Ссылка,ИмяТабличнойЧасти);
	
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ИтоговыйМассивСтруктура,Результат.Владелец.Объект[ИмяТабличнойЧасти]);
		
КонецПроцедуры

Функция СформироватьТаблицуРасхождений(Форма)
	
	ПараметрыДляФормированияРасхождений = СформироватьПараметрыДляФормированияРасхождений(Форма);
	
	Если ПараметрыДляФормированияРасхождений = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Возврат Ринэко_КонтрольУдаленныхПозицийВызовСервера.СформироватьТаблицуРасхождений(ПараметрыДляФормированияРасхождений);
	
КонецФункции

Функция СформироватьПараметрыДляФормированияРасхождений(Форма)
	
	ИмяТабличнойЧасти = СвормироватьИмяТабличнойЧасти(Форма.Объект.Ссылка);
	
	Если ИмяТабличнойЧасти = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ПараметрыДляФормированияРасхождений = Новый Структура;
	ПараметрыДляФормированияРасхождений.Вставить("ИмяТабличнойЧасти",ИмяТабличнойЧасти);
	ПараметрыДляФормированияРасхождений.Вставить("Ссылка",Форма.Объект.Ссылка);
	ПараметрыДляФормированияРасхождений.Вставить("ТекущиеДанные",СформироватьТекущиеДанные(Форма.Объект.Ссылка,Форма.Объект[ИмяТабличнойЧасти]));
	
	Возврат ПараметрыДляФормированияРасхождений; 
	
КонецФункции

Функция СвормироватьИмяТабличнойЧасти(Ссылка)
	
	Возврат СформироватьСоответствиеОбъектТабличнаяЧасть(Ссылка);
	
КонецФункции


Функция СформироватьСоответствиеОбъектТабличнаяЧасть(Ссылка) 
	
	СоответствиеТабличнойЧастиОбъекта = СформироватьСоответствиеТабличнаяЧастьОбъект();
	
	Возврат СоответствиеТабличнойЧастиОбъекта.Получить(ТипЗнч(Ссылка));
	
КонецФункции

Функция СформироватьТекущиеДанные(Ссылка,Коллекция)
	
	МассивВозврата = Новый Массив;
	МассивКолонок = СформироватьМассивКолонокПоСсылке(Ссылка);
	
	Если МассивКолонок = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Если Коллекция.Количество() = 0 Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Для Каждого ЭлементКоллекции Из Коллекция Цикл
		СтруктураКолонкаЗначение = Новый Структура;
		Для Каждого ЭлементКолонки Из МассивКолонок Цикл 
			Если ЭлементКоллекции.Свойство(ЭлементКолонки) Тогда
				СтруктураКолонкаЗначение.Вставить(ЭлементКолонки,ЭлементКоллекции[ЭлементКолонки]);
			КонецЕсли;
			
		КонецЦикла;
		
		Если СтруктураКолонкаЗначение.Количество() > 0 Тогда
			МассивВозврата.Добавить(СтруктураКолонкаЗначение);
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат МассивВозврата;
	
КонецФункции

Функция СформироватьМассивКолонокПоСсылке(Ссылка)
	
	СоответствиеКолонокСсылке = СформироватьСоответствиеКолонокСсылке();
	
	Возврат СоответствиеКолонокСсылке.Получить(ТипЗнч(Ссылка));
	
КонецФункции

#Область ПараметрыКоторыеНеобходимоДобавить

Функция СформироватьСоответствиеКолонокСсылке()
	
	СоответствиеКолонок = Новый Соответствие();
	СоответствиеКолонок.Вставить(Тип("ДокументСсылка.ЭтапПроизводства2_2"),СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("Номенклатура,Характеристика,Количество,Отменено",","));
	СоответствиеКолонок.Вставить(Тип("ДокументСсылка.ЗаказМатериаловВПроизводство"),СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("Номенклатура,Характеристика,Назначение,Упаковка,КоличествоУпаковок,Количество,Отменено",","));
	СоответствиеКолонок.Вставить(Тип("ДокументСсылка.ЗаказНаВнутреннееПотребление"),СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("Номенклатура,Характеристика,Количество,Отменено",","));
	СоответствиеКолонок.Вставить(Тип("ДокументСсылка.ЗаказНаПеремещение"),СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("Номенклатура,Характеристика,Количество,Отменено",","));
	СоответствиеКолонок.Вставить(Тип("ДокументСсылка.ЗаказНаРемонт"),СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("Номенклатура,Характеристика,Количество,Отменено",","));
	СоответствиеКолонок.Вставить(Тип("ДокументСсылка.ЗаказНаСборку"),СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("Номенклатура,Характеристика,Количество,Отменено",","));
	СоответствиеКолонок.Вставить(Тип("ДокументСсылка.ЗаказПереработчику"),СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("Номенклатура,Характеристика,Количество,Отменено",","));
	СоответствиеКолонок.Вставить(Тип("ДокументСсылка.ЗаявкаНаВозвратТоваровОтКлиента"),СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("Номенклатура,Характеристика,Количество,Отменено",","));
	Возврат СоответствиеКолонок;
	
КонецФункции

Функция ПолучитьДопустимыйСтатус(СсылкаНаОбъект)
	
	СтатусДляВозврата = Неопределено;
	
	Если ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.ЭтапПроизводства2_2") Тогда
		СтатусДляВозврата = ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению");
	ИначеЕсли ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.ЗаказМатериаловВПроизводство") Тогда
		СтатусДляВозврата = ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Перечисление.СтатусыЗаказовМатериаловВПроизводство.КВыполнению");
	ИначеЕсли ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.ЗаказНаВнутреннееПотребление") Тогда
		СтатусДляВозврата = ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Перечисление.СтатусыВнутреннихЗаказов.КВыполнению");
	ИначеЕсли ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.ЗаказНаПеремещение") Тогда
		СтатусДляВозврата = ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Перечисление.СтатусыВнутреннихЗаказов.КВыполнению");
	ИначеЕсли ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.ЗаказНаРемонт") Тогда
		СтатусДляВозврата = ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Перечисление.СтатусыЗаказовНаРемонт.КВыполнению");
	ИначеЕсли ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.ЗаказНаСборку") Тогда
		СтатусДляВозврата = ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Перечисление.СтатусыВнутреннихЗаказов.КВыполнению");
	ИначеЕсли ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.ЗаказПереработчику") Тогда
		СтатусДляВозврата = ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Перечисление.СтатусыЗаказовПереработчикам.КИсполнению");
	ИначеЕсли ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.ЗаявкаНаВозвратТоваровОтКлиента") Тогда
		СтатусДляВозврата = ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Перечисление.СтатусыЗаказовПереработчикам.КВозврату");
	КонецЕсли;
	
	Возврат СтатусДляВозврата;
	
КонецФункции

Функция СформироватьСоответствиеТабличнаяЧастьОбъект()
	
	СоответствиеТабличнаяЧастьОбъект = Новый Соответствие();
	
	СоответствиеТабличнаяЧастьОбъект.Вставить(Тип("ДокументСсылка.ЗаказМатериаловВПроизводство"),"Товары");
	СоответствиеТабличнаяЧастьОбъект.Вставить(Тип("ДокументСсылка.ЗаказНаВнутреннееПотребление"),"Товары");
	СоответствиеТабличнаяЧастьОбъект.Вставить(Тип("ДокументСсылка.ЗаказНаПеремещение"),"Товары");
	СоответствиеТабличнаяЧастьОбъект.Вставить(Тип("ДокументСсылка.ЗаказНаРемонт"),"МатериалыИРаботы");
	СоответствиеТабличнаяЧастьОбъект.Вставить(Тип("ДокументСсылка.ЗаказНаСборку"),"Товары");
	СоответствиеТабличнаяЧастьОбъект.Вставить(Тип("ДокументСсылка.ЗаказПереработчику"),"Продукция");
	СоответствиеТабличнаяЧастьОбъект.Вставить(Тип("ДокументСсылка.ЗаявкаНаВозвратТоваровОтКлиента"),"ВозвращаемыеТовары");

	
	Возврат СоответствиеТабличнаяЧастьОбъект;
	
КонецФункции

#КонецОбласти


	