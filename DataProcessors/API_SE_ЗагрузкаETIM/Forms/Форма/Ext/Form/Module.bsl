
&НаКлиенте
Процедура ВыполнитьЗапрос(Команда)
	Объект.Результат.Очистить();

	ВыполнитьЗапросНаСервере();
КонецПроцедуры

&НаСервере
Процедура ВыполнитьЗапросНаСервере()
		//API SE
	СтруктураМетодовЗапроса = Новый Структура;
	СтруктураМетодовЗапроса.Вставить("getdata","new-api/XML/getdata?");          //получим ВГХ	
	ОбъектВЗначении = РеквизитФормыВЗначение("Объект");
	
	Объект.Результат.Очистить();
	
	ОбъектВЗначении.ВыполнитьЗапрос(СтруктураМетодовЗапроса);
	
	//ЗначениеВРеквизитФормы(ОбъектВЗначении, "Объект");
	
	Если ОбъектВЗначении.Результат.Количество() > 0 Тогда 
		пРезультат = СопоставитьНоменклатуру(ОбъектВЗначении.Результат.Выгрузить());
		Объект.Результат.Загрузить(пРезультат);
		//ЗначениеВРеквизитФормы(ОбъектВЗначении.Результат.Загрузить(пРезультат), "Результат");

	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция  СопоставитьНоменклатуру(Таблица)
	
	пЗапрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
|	Таблица.КлассAPI КАК КлассAPI,
|	Таблица.СвойствоAPI КАК СвойствоAPI,
|	Таблица.Артикул КАК Артикул,
|	Таблица.ЗначениеAPI КАК ЗначениеAPI,
|	Таблица.ЗначениеR1_API КАК ЗначениеR1_API,
|	Таблица.Значение_R_API КАК Значение_R_API,
|	Таблица.Value_RZ КАК Value_RZ
|ПОМЕСТИТЬ ТаблицаAPI
|ИЗ
|	&Таблица КАК Таблица
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ РАЗРЕШЕННЫЕ
|	Номенклатура.Ссылка КАК Номенклатура
|ПОМЕСТИТЬ СправочникНоменклатура
|ИЗ
|	Справочник.Номенклатура КАК Номенклатура
|ГДЕ
|	Номенклатура.Производитель = &Производитель
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ РАЗРЕШЕННЫЕ
|	СопоставленнаяНоменклатура.Номенклатура КАК Номенклатура,
|	Рин1_ГруппыКлассыETIM.Ссылка КАК КлассСсылка,
|	ТаблицаAPI.Артикул КАК Артикул,
|	Рин1_ГруппыКлассыETIM.ПредставлениеГруппыКласса КАК КлассПредставление,
|	ТаблицаAPI.КлассAPI КАК КлассAPI,
|	ТаблицаAPI.СвойствоAPI КАК СвойствоAPI,
|	Рин1_ГруппыКлассыETIM.Родитель.ПредставлениеГруппыКласса КАК ГруппаПредставление,
|	ТаблицаAPI.ЗначениеAPI КАК ЗначениеAPI,
|	ТаблицаAPI.ЗначениеR1_API КАК ЗначениеR1_API,
|	ТаблицаAPI.Значение_R_API КАК Значение_R_API,
|	ТаблицаAPI.Value_RZ КАК Value_RZ
|ПОМЕСТИТЬ НоменклатураКлассETIM
|ИЗ
|	ТаблицаAPI КАК ТаблицаAPI
|		ЛЕВОЕ СОЕДИНЕНИЕ СправочникНоменклатура КАК СопоставленнаяНоменклатура
|		ПО (ПОДСТРОКА(ТаблицаAPI.Артикул, 1, 100) = ПОДСТРОКА(СопоставленнаяНоменклатура.Номенклатура.Артикул, 1, 100))
|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Рин1_ГруппыКлассыETIM КАК Рин1_ГруппыКлассыETIM
|		ПО (ПОДСТРОКА(ТаблицаAPI.КлассAPI, 1, 100) = ПОДСТРОКА(Рин1_ГруппыКлассыETIM.Наименование, 1, 100))
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	НоменклатураКлассETIM.Номенклатура КАК Номенклатура,
|	НоменклатураКлассETIM.КлассПредставление КАК КлассПредставление,
|	НоменклатураКлассETIM.КлассAPI КАК КлассAPI,
|	НоменклатураКлассETIM.СвойствоAPI КАК СвойствоAPI,
|	Рин1_СвойстваКлассаETIM.Ссылка КАК Свойство,
|	Рин1_СвойстваКлассаETIM.ПредставлениеСвойства КАК СвойствоПредставление,
|	НоменклатураКлассETIM.ГруппаПредставление КАК ГруппаПредставление,
|	ВЫБОР
|		КОГДА Рин1_СвойстваКлассаETIM.ТИП = ЗНАЧЕНИЕ(Перечисление.Рин1_ТипСвойства.A)
|			ТОГДА НоменклатураКлассETIM.ЗначениеAPI
|		ИНАЧЕ """"
|	КОНЕЦ КАК Value_A,
|	ВЫБОР
|		КОГДА Рин1_СвойстваКлассаETIM.ТИП = ЗНАЧЕНИЕ(Перечисление.Рин1_ТипСвойства.N)
|			ТОГДА НоменклатураКлассETIM.ЗначениеAPI
|		ИНАЧЕ """"
|	КОНЕЦ КАК Value_N,
|	ВЫБОР
|		КОГДА Рин1_СвойстваКлассаETIM.ТИП = ЗНАЧЕНИЕ(Перечисление.Рин1_ТипСвойства.L)
|			ТОГДА НоменклатураКлассETIM.ЗначениеAPI
|		ИНАЧЕ """"
|	КОНЕЦ КАК Value_L,
|	ВЫБОР
|		КОГДА Рин1_СвойстваКлассаETIM.ТИП = ЗНАЧЕНИЕ(Перечисление.Рин1_ТипСвойства.R)
|			ТОГДА НоменклатураКлассETIM.Значение_R_API
|		ИНАЧЕ 0
|	КОНЕЦ КАК Value_R,
|	ВЫБОР
|		КОГДА Рин1_СвойстваКлассаETIM.ТИП = ЗНАЧЕНИЕ(Перечисление.Рин1_ТипСвойства.R)
|			ТОГДА НоменклатураКлассETIM.ЗначениеR1_API
|		ИНАЧЕ 0
|	КОНЕЦ КАК Value_R1,
|	НоменклатураКлассETIM.Value_RZ КАК Value_RZ
|ПОМЕСТИТЬ СвойстваETIM
|ИЗ
|	НоменклатураКлассETIM КАК НоменклатураКлассETIM
|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Рин1_СвойстваКлассаETIM КАК Рин1_СвойстваКлассаETIM
|		ПО (Рин1_СвойстваКлассаETIM.Владелец = НоменклатураКлассETIM.КлассСсылка)
|			И (ПОДСТРОКА(НоменклатураКлассETIM.СвойствоAPI, 1, 100) = ПОДСТРОКА(Рин1_СвойстваКлассаETIM.Наименование, 1, 100))
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	СвойстваETIM.Номенклатура КАК Номенклатура,
|	СвойстваETIM.КлассПредставление КАК КлассПредставление,
|	СвойстваETIM.КлассAPI КАК КлассAPI,
|	СвойстваETIM.СвойствоAPI КАК СвойствоAPI,
|	СвойстваETIM.Свойство КАК Свойство,
|	СвойстваETIM.СвойствоПредставление КАК СвойствоПредставление,
|	СвойстваETIM.ГруппаПредставление КАК ГруппаПредставление,
|	Рин1_СвойстваКлассаETIMValue.ПредставлениеЗначения КАК Value_A,
|	СвойстваETIM.Value_N КАК Value_N,
|	СвойстваETIM.Value_L КАК Value_L,
|	СвойстваETIM.Value_R КАК Value_R,
|	СвойстваETIM.Value_R1 КАК Value_R1,
|	СвойстваETIM.Value_RZ КАК Value_RZ
|ИЗ
|	СвойстваETIM КАК СвойстваETIM
|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Рин1_СвойстваКлассаETIM.Value КАК Рин1_СвойстваКлассаETIMValue
|		ПО (СвойстваETIM.Свойство = Рин1_СвойстваКлассаETIMValue.Ссылка
|				И СвойстваETIM.Value_A = Рин1_СвойстваКлассаETIMValue.Value_A)
|ГДЕ
|	(СвойстваETIM.Value_A <> """"
|			ИЛИ СвойстваETIM.Value_N <> """"
|			ИЛИ СвойстваETIM.Value_L <> """"
|			ИЛИ СвойстваETIM.Value_RZ <> """")
|	И ЕСТЬNULL(СвойстваETIM.Номенклатура, 0) <> 0");
	
	пЗапрос.УстановитьПараметр("Таблица",Таблица);
	пЗапрос.УстановитьПараметр("Производитель",Объект.Производитель);

	Возврат пЗапрос.Выполнить().Выгрузить();	
КонецФункции

&НаКлиенте
Процедура ПрименитьИзменения(Команда)
	ПрименитьИзмененияНаСеревере();
КонецПроцедуры

&НаСервере 
Процедура ПрименитьИзмененияНаСеревере()
	ОбъектВЗначении = РеквизитФормыВЗначение("Объект");
	
	ОбъектВЗначении.ЗаписатьETIM();

КонецПроцедуры


&НаКлиенте
Процедура УстановитьПометку(Команда)
	пМассивВыделенныхСтрок = ЭтаФорма.Элементы.Результат.ВыделенныеСтроки;
	
	УстановитьВсеНаСервере(пМассивВыделенныхСтрок,"Результат");

КонецПроцедуры

&НаСервере
Процедура УстановитьВсеНаСервере(пМассивВыделенныхСтрок,ТабЧасть)
	
	ПроставитьПометку(пМассивВыделенныхСтрок,Истина,ТабЧасть);
		
КонецПроцедуры

&НаСервере
Процедура ПроставитьПометку(пМассивВыделенныхСтрок,Пометка,ТабЧасть)
	
	Для Каждого СтрИндекс из пМассивВыделенныхСтрок Цикл
		пСтрока = Объект[ТабЧасть].НайтиПоИдентификатору(СтрИндекс);
		Если пСтрока <> Неопределено Тогда 
			пСтрока.Пометка = Пометка;
		КонецЕсли;
		
	КонецЦикла;
			
КонецПроцедуры

&НаКлиенте
Процедура СнятьПометку(Команда)
	пМассивВыделенныхСтрок = ЭтаФорма.Элементы.Результат.ВыделенныеСтроки;

	СнятьВсеНаСервере(пМассивВыделенныхСтрок,"Результат");

КонецПроцедуры
&НаСервере
Процедура СнятьВсеНаСервере(пМассивВыделенныхСтрок,ТабЧасть)
	
	ПроставитьПометку(пМассивВыделенныхСтрок,ложь,ТабЧасть);
	
КонецПроцедуры



