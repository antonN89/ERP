&Вместо("ОбработкаПроведения")
Процедура Рин1_ОбработкаПроведения(Отказ, РежимПроведения)
	
	ПроведениеСерверУТ.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения);
	
	Документы.ВозвратТоваровОтКлиента.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	ПроведениеСерверУТ.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
//{{20200729 ГлазуновДВ Добавили свою операцию для проведения только прихода на склад возвращаемых товаров
	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.КорректировкаПоСогласованиюСторон Тогда 
		
		Если Ссылка.Склад.ИспользоватьОрдернуюСхемуПриОтгрузке
		   И Ссылка.Дата > Ссылка.Склад.ДатаНачалаОрдернойСхемыПриОтгрузке Тогда
			Для Каждого СтрДвижений Из ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаТоварыКПоступлению Цикл
				СтрДвижений.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВозвратТоваровОтКлиента");
			КонецЦикла;
			ЗаказыСервер.ОтразитьТоварыКПоступлению(ДополнительныеСвойства, Движения, Отказ);
		Иначе
			//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
			// Данный фрагмент построен конструктором.
			// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
			
			Запрос = Новый Запрос;
			Запрос.Текст = 
				"ВЫБРАТЬ
				|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
				|	&Период КАК Период,
				|	ТаблицаТовары.Номенклатура                          КАК Номенклатура,
				|	ТаблицаТовары.Характеристика                        КАК Характеристика,
				|	ТаблицаТовары.Назначение                            КАК Назначение,
				|	ТаблицаТовары.НомерСтроки							КАК НомерСтроки,
				|	ТаблицаТовары.Серия                                 КАК Серия,
				|	ТаблицаТовары.НоменклатураОприходование             КАК НоменклатураОприходование,
				|	ТаблицаТовары.ХарактеристикаОприходование           КАК ХарактеристикаОприходование,
				|	ТаблицаТовары.Порча                                 КАК Порча,
				|	ТаблицаТовары.КоличествоУпаковок                    КАК ВНаличии,
				|	ТаблицаТовары.СтатусУказанияСерий                   КАК СтатусУказанияСерий,
				|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ПриемкаПоВозвратуОтКлиента) КАК СкладскаяОперация,
				|	&Помещение 											КАК Помещение,
				|	&Склад								                КАК Склад
				|ИЗ
				|	Документ.ВозвратТоваровОтКлиента.Товары КАК ТаблицаТовары
				|ГДЕ
				|	ТаблицаТовары.Ссылка = &Ссылка
				|
				|УПОРЯДОЧИТЬ ПО
				|	НомерСтроки";
				
			Запрос.УстановитьПараметр("Ссылка", Ссылка);
			Запрос.УстановитьПараметр("Склад", Ссылка.Склад);
			Запрос.УстановитьПараметр("Помещение", Справочники.СкладскиеПомещения.НайтиПоНаименованию("Ручной отбор (мезонин)").Ссылка);
			Запрос.УстановитьПараметр("Период", Ссылка.Дата); 
			
			РезультатЗапроса = Запрос.Выполнить();
			ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаТоварыНаСкладах = РезультатЗапроса.Выгрузить();
			
			ЗапасыСервер.ОтразитьТоварыНаСкладах(ДополнительныеСвойства, Движения, Отказ);
			
		КонецЕсли;
		
//{{20210112 ГлазуновДВ Задача № 3971
		//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
		// Данный фрагмент построен конструктором.
		// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	&Период КАК Период,
		|	&Склад КАК Склад,
		|	&ЗаданиеНаПеревозку КАК ЗаданиеНаПеревозку,
		|	&Получатель КАК Получатель,
		|	ТаблицаТовары.Номенклатура КАК Номенклатура,
		|	ТаблицаТовары.Характеристика КАК Характеристика,
		|	ТаблицаТовары.Серия КАК Серия,
		|	&Распоряжение КАК ДокументОтгрузки,
		|	-ТаблицаТовары.КоличествоУпаковок КАК КОтгрузке,
		|	0 КАК КСборке,
		|	0 КАК Собирается,
		|	0 КАК Собрано,
		|   ТаблицаТовары.Назначение КАК Назначение
		|ИЗ
		|	Документ.ВозвратТоваровОтКлиента.Товары КАК ТаблицаТовары
		|ГДЕ
		|	ТаблицаТовары.Ссылка = &Ссылка";
		
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		Запрос.УстановитьПараметр("Склад", Ссылка.Склад);
		Запрос.УстановитьПараметр("Распоряжение", Ссылка.ДокументРеализации.ЗаказКлиента);
		Запрос.УстановитьПараметр("ЗаданиеНаПеревозку", Документы.ЗаданиеНаПеревозку.ПустаяСсылка()); // |	ЗНАЧЕНИЕ(Документ.ЗаданиеНаПеревозку.ПустаяССылка)
		Запрос.УстановитьПараметр("Получатель", Ссылка.Партнер);
		Запрос.УстановитьПараметр("Период", Ссылка.Дата); 
		
		РезультатЗапроса = Запрос.Выполнить();
		ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаТоварыКОтгрузке = РезультатЗапроса.Выгрузить();
		
		ЗаказыСервер.ОтразитьТоварыКОтгрузке(ДополнительныеСвойства, Движения, Отказ);
//}}20210112 ГлазуновДВ Задача № 3971

        //++Шерстюк Ю.Ю. 24.02.2021 по задаче 5615 по свободным остаткам движение должно быть как в заказе клиента при отгрузке (т.к. когда устанавливается отметка отмены движение пропадает, а приходный ордер на основании возврата делает
		//дополнительный приход, что задваивает свободные остатки по регистру)
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	&Период КАК Период,
		|	&Склад КАК Склад,
		|	ТаблицаТовары.Номенклатура КАК Номенклатура,
		|	ТаблицаТовары.Характеристика КАК Характеристика,
		|	ТаблицаТовары.Количество КАК ВНаличии,
		|	0 КАК ВРезервеСоСклада,
		|	ВЫБОР
		|		КОГДА ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
		|			ТОГДА ТаблицаТовары.Количество
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ВРезервеПодЗаказ
		|ИЗ
		|	Документ.ВозвратТоваровОтКлиента.Товары КАК ТаблицаТовары
		|ГДЕ
		|	ТаблицаТовары.Ссылка = &Ссылка";
		
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		Запрос.УстановитьПараметр("Склад", Ссылка.Склад);
		Запрос.УстановитьПараметр("Период", Ссылка.Дата); 
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаСвободныеОстатки = РезультатЗапроса.Выгрузить();
		
		ЗапасыСервер.ОтразитьСвободныеОстатки(ДополнительныеСвойства, Движения, Отказ);
			//--Шерстюк Ю.Ю.


	Иначе
		ЗаказыСервер.ОтразитьТоварыКПоступлению(ДополнительныеСвойства, Движения, Отказ);
		ЗаказыСервер.ОтразитьДвижениеТоваров(ДополнительныеСвойства, Движения, Отказ);
		ЗапасыСервер.ОтразитьОбеспечениеЗаказов(ДополнительныеСвойства, Движения, Отказ);
		ЗапасыСервер.ОтразитьТоварыНаСкладах(ДополнительныеСвойства, Движения, Отказ);
		ЗапасыСервер.ОтразитьТоварыПереданныеНаКомиссию(ДополнительныеСвойства, Движения, Отказ);
		ЗапасыСервер.ОтразитьТоварыКОформлениюОтчетовКомитента(ДополнительныеСвойства, Движения, Отказ);
		ВзаиморасчетыСервер.ОтразитьРасчетыСКлиентами(ДополнительныеСвойства, Движения, Отказ);
		ДоходыИРасходыСервер.ОтразитьСебестоимостьТоваров(ДополнительныеСвойства, Движения, Отказ);
		ЗапасыСервер.ОтразитьСвободныеОстатки(ДополнительныеСвойства, Движения, Отказ);
		ЗапасыСервер.ОтразитьТоварыОрганизаций(ДополнительныеСвойства, Движения, Отказ);
		ЗапасыСервер.ОтразитьТоварыОрганизацийКПередаче(ДополнительныеСвойства, Движения, Отказ);
		ЗапасыСервер.ОтразитьРезервыТоваровОрганизаций(ДополнительныеСвойства, Движения, Отказ);
		ДоходыИРасходыСервер.ОтразитьВыручкуИСебестоимостьПродаж(ДополнительныеСвойства, Движения, Отказ);
		СкладыСервер.ОтразитьДвиженияСерийТоваров(ДополнительныеСвойства, Движения, Отказ);
		ПартионныйУчетСервер.ОтразитьПартииТоваровОрганизаций(ДополнительныеСвойства, Движения, Отказ);
		ВзаиморасчетыСервер.ОтразитьСуммыДокументаВВалютеРегл(ДополнительныеСвойства, Движения, Отказ);
		МногооборотнаяТараСервер.ОтразитьПереданнуюВозвратнуюТару(ДополнительныеСвойства, Движения, Отказ);
		УчетНДСУП.СформироватьДвиженияВРегистры(ДополнительныеСвойства, Движения, Отказ);
		СкидкиНаценкиСервер.ОтразитьБонусныеБаллы(ДополнительныеСвойства, Движения, Отказ);
		ЗаказыСервер.ОтразитьЗаявкиНаВозвратТоваровОтКлиентов(ДополнительныеСвойства, Движения, Отказ);
	КонецЕсли;	
//}}20200729 ГлазуновДВ

	РегистрыСведений.РеестрДокументов.ЗаписатьДанныеДокумента(Ссылка, ДополнительныеСвойства, Отказ);
	
	// Движения по оборотным регистрам управленческого учета
	УправленческийУчетПроведениеСервер.ОтразитьДвиженияНоменклатураНоменклатура(ДополнительныеСвойства, Движения, Отказ);	
	
	СформироватьСписокРегистровДляКонтроля();
	
	ЗапасыСервер.ПодготовитьЗаписьТоваровОрганизаций(ЭтотОбъект, РежимЗаписиДокумента.Проведение);	
	
	ВозвратТоваровОтКлиентаЛокализация.ОбработкаПроведения(ЭтотОбъект, Отказ, РежимПроведения);
	
	ПроведениеСерверУТ.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	//++ НЕ УТКА
	МеждународныйУчетПроведениеСервер.ЗарегистрироватьКОтражению(ЭтотОбъект, ДополнительныеСвойства, Движения, Отказ);
	//-- НЕ УТКА
	
	ПараметрыЗаполнения = ЗапасыСервер.ПараметрыЗаполненияВидовЗапасов();
	ЗапасыСервер.СформироватьРезервыПоТоварамОрганизаций(ЭтотОбъект, Отказ, ПараметрыЗаполнения);
	
	ПроведениеСерверУТ.ВыполнитьКонтрольРезультатовПроведения(ЭтотОбъект, Отказ);
	
	ПараметрыРегистрации = Документы.ВозвратТоваровОтКлиента.ПараметрыРегистрацииСчетовФактурПолученных(ЭтотОбъект);
	УчетНДСУП.АктуализироватьСчетаФактурыПолученныеПриПроведении(ПараметрыРегистрации);
	ПараметрыРегистрации = Документы.ВозвратТоваровОтКлиента.ПараметрыРегистрацииСчетовФактурВыданных(ЭтотОбъект);
	УчетНДСУП.АктуализироватьСчетаФактурыВыданныеПриПроведении(ПараметрыРегистрации);
	
	РегистрыСведений.СостоянияЗаказовКлиентов.ОтразитьСостояниеЗаказа(ЭтотОбъект, Отказ);
	ПроведениеСерверУТ.СформироватьЗаписиРегистровЗаданий(ЭтотОбъект);
	ПроведениеСерверУТ.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);
		
КонецПроцедуры

//20201009 ГлазуновДВ Изменили для обхода проверки по возвращенным товарам
&Вместо("ПередЗаписью")
Процедура Рин1_ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	// Вставить содержимое метода.
	//ПродолжитьВызов(Отказ, РежимЗаписи, РежимПроведения);
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	ПроведениеСерверУТ.УстановитьРежимПроведения(ЭтотОбъект, РежимЗаписи, РежимПроведения);

	ДополнительныеСвойства.Вставить("ЭтоНовый",    ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
	ОбщегоНазначенияУТ.ОкруглитьКоличествоШтучныхТоваров(ЭтотОбъект, РежимЗаписи);
	
	ОчиститьСпособОпределенияСебестоимостиИДокументРеализации();
	
	СформироватьСписокЗависимыхЗаказов();
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьКачествоТоваров") Тогда
		ВозвратПорчи = Ложь;
		Для Каждого СтрТабл Из Товары Цикл
			Если СтрТабл.Порча Тогда
				ВозвратПорчи = Истина;
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если Не ВозвратПереданнойМногооборотнойТары
		И ПредусмотренЗалогЗаТару Тогда
		ПредусмотренЗалогЗаТару = Ложь;
	КонецЕсли;
	
	СуммаДокумента = ПолучитьСуммуДокумента();
	
	ПараметрыУказанияСерий = НоменклатураСервер.ПараметрыУказанияСерий(ЭтотОбъект, Документы.ВозвратТоваровОтКлиента);
	НоменклатураСервер.ОчиститьНеиспользуемыеСерии(ЭтотОбъект,ПараметрыУказанияСерий);
	
	ПараметрыРегистрации = Документы.ВозвратТоваровОтКлиента.ПараметрыРегистрацииСчетовФактурПолученных(ЭтотОбъект);
	УчетНДСУП.АктуализироватьСчетаФактурыПолученныеПередЗаписью(ПараметрыРегистрации, РежимЗаписи, ПометкаУдаления, Проведен);
	ПараметрыРегистрации = Документы.ВозвратТоваровОтКлиента.ПараметрыРегистрацииСчетовФактурВыданных(ЭтотОбъект);
	УчетНДСУП.АктуализироватьСчетаФактурыВыданныеПередЗаписью(ПараметрыРегистрации, РежимЗаписи, ПометкаУдаления, Проведен);
	
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		
		ПродажиСервер.ПроверитьКорректностьЗаполненияДокументаПродажи(ЭтотОбъект, Отказ);
//20201009 ГлазуновДВ Отключили для обхода проверки по возвращенным товарам
//		ПродажиСервер.ПроверитьКорректностьВозвращаемыхТоваров(ЭтотОбъект, "Товары", Отказ);
		
		Если ХозяйственнаяОперация <> Перечисления.ХозяйственныеОперации.ВозвратОтКомиссионера И СуммаДокумента > 0 Тогда
		
			Если РасшифровкаПлатежа.Количество() = 0 Тогда
				НоваяСтрока = РасшифровкаПлатежа.Добавить();
				НоваяСтрока.Сумма = СуммаДокумента;
			КонецЕсли;
			
			ВзаиморасчетыСервер.ЗаполнитьСуммуВзаиморасчетовВТабличнойЧасти(
				Валюта,
				Дата,
				РасшифровкаПлатежа);
		Иначе
			Если РасшифровкаПлатежа.Количество() <> 0 Тогда
				РасшифровкаПлатежа.Очистить();
			КонецЕсли;
		КонецЕсли;
		
		МестаУчета = РегистрыСведений.АналитикаУчетаНоменклатуры.МестаУчета(ХозяйственнаяОперация, Склад, Подразделение, Партнер);
		ИменаПолей = РегистрыСведений.АналитикаУчетаНоменклатуры.ИменаПолейКоллекцииПоУмолчанию();
		
		РегистрыСведений.АналитикаУчетаНоменклатуры.ЗаполнитьВКоллекции(Товары, МестаУчета, ИменаПолей);
		
		ЗаполнитьВидыЗапасов(Отказ);
		ВзаиморасчетыСервер.ЗаполнитьИдентификаторыСтрокВТабличнойЧасти(ВидыЗапасов);
		
	ИначеЕсли РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения Тогда
		Если Не ВидыЗапасовУказаныВручную Тогда
			ВидыЗапасов.Очистить();
		КонецЕсли;
	КонецЕсли;
	
	Если ХозяйственнаяОперация <> Перечисления.ХозяйственныеОперации.ВозвратОтРозничногоПокупателя Тогда
		ЧекККМ = Неопределено;
	КонецЕсли;
	
	БонусныеБаллыСервер.ЗаполнитьБонусныеБаллыВозвратТоваровОтКлиента(ЭтотОбъект);
	
	Если Не ВыданыДенежныеСредства Тогда
		НомерРасходногоКассовогоОрдера = "";
		ДатаРасходногоКассовогоОрдера = '00010101';
	КонецЕсли;
	
	ПорядокРасчетов = ВзаиморасчетыСервер.ПорядокРасчетовПоУмолчанию(ЭтотОбъект);
	
	// ИнтеграцияГИСМ
	ЕстьМаркируемаяПродукцияГИСМ = ИнтеграцияГИСМ_УТ.ЕстьМаркируемаяПродукцияГИСМ(Товары);
	// Конец ИнтеграцияГИСМ
	
	ВозвратТоваровОтКлиентаЛокализация.ПередЗаписью(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения);
	
КонецПроцедуры

&После("ИнициализироватьДокумент")
Процедура Рин1_ИнициализироватьДокумент(ДанныеЗаполнения)
	//++Шерстюк Ю.Ю. 16.04.2021 Задача № 7625 договор и менеджер из договора 
	Если ЗначениеЗаполнено(Договор) Тогда 
		Менеджер = Договор.Менеджер;
		Подразделение = Договор.Подразделение;
	КонецЕсли;
    //--Шерстюк Ю.Ю.
КонецПроцедуры
