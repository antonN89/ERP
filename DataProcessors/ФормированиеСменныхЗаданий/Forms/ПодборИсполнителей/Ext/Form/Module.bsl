
&НаКлиенте
Процедура Рин1_ОтборПоУчасткуВместо(Команда)
	
	Если Участок = ПредопределенноеЗначение("Справочник.ПроизводственныеУчастки.ПустаяСсылка") Тогда
		Возврат;
	КонецЕсли;
	
	ОтборПоУчастку = НЕ ОтборПоУчастку;
	
	Элементы.ОперацииОтборПоУчастку.Пометка = ОтборПоУчастку;
	
	УстаноновитьОтборДинамическогоСписка();
	
	СохранитьНастройки(ЭтотОбъект);
	
	Если не ОтборПоУчастку Тогда
		
		Если Элементы.Все.Пометка Тогда
			Рин1_ВсеВместо(Неопределено);
		КонецЕсли;
		
		Если Элементы.Действующие.Пометка Тогда
			Рин1_ДействующиеВместо(Неопределено);
		КонецЕсли;
		
		Если Элементы.Доступные.Пометка Тогда
			Рин1_ДоступныеВместо(Неопределено);
		КонецЕсли;
		
	КонецЕсли;
		
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
&После("НастроитьФормуПоРежимуВыбора")
Процедура Рин1_НастроитьФормуПоРежимуВыбора(Форма)
	
	Элементы = Форма.Элементы;
	
	Если Форма.РежимВыбора = "Работники" Тогда
		Элементы.ОперацииОтборПоУчастку.Видимость = Истина;
		Элементы.ГруппаКомманднаяДопОтбора.Видимость = Истина;
	Иначе
		Элементы.ОперацииОтборПоУчастку.Видимость = Ложь;
		Элементы.ГруппаКомманднаяДопОтбора.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстаноновитьОтборДинамическогоСписка()
	
	Если ОтборПоУчастку Тогда	
		
		ПараметрыЗапроса = КадровыйУчет.ПараметрыПолученияСотрудниковОрганизацийПоСпискуФизическихЛиц();
		ПараметрыЗапроса.КадровыеДанные = "МестоВСтруктуреПредприятия";
		
		УстановитьПривилегированныйРежим(Истина);
		ДанныеСотрудников = КадровыйУчет.СотрудникиОрганизации(Истина, ПараметрыЗапроса);
		УстановитьПривилегированныйРежим(Ложь);
		
		Массив_Работников =  ДанныеСотрудников.Скопировать(Новый Структура("МестоВСтруктуреПредприятия", ПодразделениеОтбор),"ФизическоеЛицо").ВыгрузитьКолонку("ФизическоеЛицо");
		
		Массив_Отбора = Новый Массив;
		
		Для каждого Строка Из Массив_Работников Цикл

			Запрос = Новый Запрос;
			//надо получить самую последнюю запись и позже отфильтровать по участку - только так правильно!
			Запрос.Текст = 
			"ВЫБРАТЬ ПЕРВЫЕ 1
			|	Рин1_НазначенияСотрудниковВРЦСрезПоследних.Сотрудник.ФизическоеЛицо КАК ФизическоеЛицоИзРегистра,
			|	Рин1_НазначенияСотрудниковВРЦСрезПоследних.ВРЦ.ПроизводственныйУчасток КАК ПроизводственныйУчасток
			|ИЗ
			|	РегистрСведений.Рин1_НазначенияСотрудниковВРЦ.СрезПоследних(
			|			,
			|			Сотрудник.ФизическоеЛицо = &ФизическоеЛицо
			|				И НЕ ОсвободитьОтНазначений) КАК Рин1_НазначенияСотрудниковВРЦСрезПоследних
			|ГДЕ
			|	Рин1_НазначенияСотрудниковВРЦСрезПоследних.Период <= &Дата
			|
			|УПОРЯДОЧИТЬ ПО
			|	Рин1_НазначенияСотрудниковВРЦСрезПоследних.Период УБЫВ";
			
			Запрос.УстановитьПараметр("ФизическоеЛицо", Строка.Ссылка);
			Запрос.УстановитьПараметр("Дата",НачалоДня(СменноеЗадание.Дата));

			РезультатЗапроса = Запрос.Выполнить();
			//РезультатЗапроса.Выгрузить();
			ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
			
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				Если ВыборкаДетальныеЗаписи.ПроизводственныйУчасток = Участок Тогда
					Массив_Отбора.Добавить(ВыборкаДетальныеЗаписи.ФизическоеЛицоИзРегистра);
				КонецЕсли;
			КонецЦикла;
			
		КонецЦикла;	
		
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Работники,
		"Ссылка",
		Массив_Отбора,
		ВидСравненияКомпоновкиДанных.ВСписке,,
		Истина);
		
	Иначе
		
		УстановитьОтборПоПодразделению();		
		
	КонецЕсли;
	
КонецПроцедуры 

&НаКлиентеНаСервереБезКонтекста
Процедура СохранитьНастройки(Форма)
	
	Настройки = Новый Структура;
	Настройки.Вставить("ОтборПоУчастку",  Форма.ОтборПоУчастку);
	
	ЗаписатьНастройкиВХранилище(Настройки);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаписатьНастройкиВХранилище(Настройки)
	
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить(
	"Обработка.ФормированиеСменныхЗаданий.НастройкиПодбораИсполнителей",
	Неопределено,
	Настройки);
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьНастройки()
	
	Настройки = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
	"Обработка.ФормированиеСменныхЗаданий.НастройкиПодбораИсполнителей",
	Неопределено);
	
	Если ТипЗнч(Настройки) = Тип("Структура") Тогда
		Настройки.Свойство("ОтборПоУчастку",  ОтборПоУчастку);		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура Рин1_ПриСозданииНаСервереПосле(Отказ, СтандартнаяОбработка)
	ЗагрузитьНастройки();
КонецПроцедуры

&НаКлиенте
Процедура Рин1_ПриОткрытииПосле(Отказ)
	
	Элементы.ОперацииОтборПоУчастку.Пометка = ОтборПоУчастку;
	Если ОтборПоУчастку Тогда
		УстаноновитьОтборДинамическогоСписка();
	КонецЕсли;
	
	Элементы.Все.Пометка = Истина;	
	
КонецПроцедуры

&НаКлиенте
Процедура Рин1_ВсеВместо(Команда)
	
	ОтборПоУчастку = Ложь;
	Элементы.ОперацииОтборПоУчастку.Пометка = ОтборПоУчастку;
	
	Элементы.Все.Пометка = Истина;
	Элементы.Действующие.Пометка = Ложь;
	Элементы.Доступные.Пометка = Ложь;
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
	Работники, 
	"Ссылка", 
	ФизическиеЛицаПодразделения(),
	ВидСравненияКомпоновкиДанных.ВСписке,
	, // Представление - автоматически
	ЗначениеЗаполнено(ПодразделениеОтбор));	
	
КонецПроцедуры

&НаКлиенте
Процедура Рин1_ДействующиеВместо(Команда)
	
	ОтборПоУчастку = Ложь;
	Элементы.ОперацииОтборПоУчастку.Пометка = ОтборПоУчастку;
	
	Элементы.Все.Пометка = Ложь;
	Элементы.Действующие.Пометка = Истина;
	Элементы.Доступные.Пометка = Ложь;
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
	Работники, 
	"Ссылка", 
	ФизическиеЛицаПодразделенияОтбор("Действующие"),
	ВидСравненияКомпоновкиДанных.ВСписке,
	, // Представление - автоматически
	ЗначениеЗаполнено(ПодразделениеОтбор));
	
КонецПроцедуры

&НаКлиенте
Процедура Рин1_ДоступныеВместо(Команда)
	
	ОтборПоУчастку = Ложь;
	Элементы.ОперацииОтборПоУчастку.Пометка = ОтборПоУчастку;
	
	Элементы.Все.Пометка = Ложь;
	Элементы.Действующие.Пометка = Ложь;
	Элементы.Доступные.Пометка = Истина;
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
	Работники, 
	"Ссылка", 
	ФизическиеЛицаПодразделенияОтбор("Доступные"),
	ВидСравненияКомпоновкиДанных.ВСписке,
	, // Представление - автоматически
	ЗначениеЗаполнено(ПодразделениеОтбор));
	
КонецПроцедуры

&НаСервере
Функция ФизическиеЛицаПодразделенияОтбор(ТипОтбора)
	
	Если Не ЗначениеЗаполнено(ПодразделениеОтбор) Тогда
		Возврат Новый Массив;
	КонецЕсли;
	
	ПараметрыЗапроса = КадровыйУчет.ПараметрыПолученияСотрудниковОрганизацийПоСпискуФизическихЛиц();
	ПараметрыЗапроса.КадровыеДанные = "МестоВСтруктуреПредприятия";
	
	УстановитьПривилегированныйРежим(Истина);
	ДанныеСотрудников = КадровыйУчет.СотрудникиОрганизации(Истина, ПараметрыЗапроса);
	УстановитьПривилегированныйРежим(Ложь);
	
	ТЗ_СотрудниковПодразделения = ДанныеСотрудников.Скопировать(Новый Структура("МестоВСтруктуреПредприятия", ПодразделениеОтбор),"ФизическоеЛицо");
	ТЗ_СотрудниковПодразделения.Колонки.Добавить("СоответствуетОтбору", Новый ОписаниеТипов("Булево"));
	
	Для каждого Строка Из ТЗ_СотрудниковПодразделения Цикл
		
		Если не Уволен(Строка.ФизическоеЛицо,СменноеЗадание.Дата) Тогда
			Если ТипОтбора = "Действующие" Тогда
				Строка.СоответствуетОтбору = Истина;
			Иначе  //ТипОтбора = "Доступные"
				
				Запрос = Новый Запрос;
				Запрос.Текст = 
				"ВЫБРАТЬ
				|	ДанныеСостоянийСотрудников.Сотрудник КАК Сотрудник
				|ИЗ
				|	РегистрСведений.ДанныеСостоянийСотрудников КАК ДанныеСостоянийСотрудников
				|ГДЕ
				|	НЕ ДанныеСостоянийСотрудников.Состояние = &СостояниеРабота
				|	и НЕ ДанныеСостоянийСотрудников.Состояние = &СостояниеУволен
				|	И ДанныеСостоянийСотрудников.Начало <= &Дата
				|	И ДанныеСостоянийСотрудников.Окончание >= &Дата
				|	И ДанныеСостоянийСотрудников.Сотрудник.ФизическоеЛицо = &ФизическоеЛицо";
				
				Запрос.УстановитьПараметр("Дата", НачалоДня(СменноеЗадание.Дата));
				Запрос.УстановитьПараметр("СостояниеРабота", Перечисления.СостоянияСотрудника.Работа);
				Запрос.УстановитьПараметр("СостояниеУволен", Перечисления.СостоянияСотрудника.Увольнение);
				Запрос.УстановитьПараметр("ФизическоеЛицо", Строка.ФизическоеЛицо);
				
				РезультатЗапроса = Запрос.Выполнить();
				
				Если РезультатЗапроса.Пустой() Тогда
					Строка.СоответствуетОтбору = Истина;
				КонецЕсли;
				
			КонецЕсли;
		КонецЕсли;		
		
	КонецЦикла;
	
	Возврат ТЗ_СотрудниковПодразделения.Скопировать(Новый Структура("СоответствуетОтбору", Истина),"ФизическоеЛицо").ВыгрузитьКолонку("ФизическоеЛицо");
	
КонецФункции

&НаСервере
Функция Уволен(ФизическоеЛицо,Дата)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КОЛИЧЕСТВО(ДанныеСостоянийСотрудников.Состояние) КАК Работа
	|ПОМЕСТИТЬ ВТ_Работа
	|ИЗ
	|	РегистрСведений.ДанныеСостоянийСотрудников КАК ДанныеСостоянийСотрудников
	|ГДЕ
	|	ДанныеСостоянийСотрудников.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияСотрудника.Работа)
	|	И ДанныеСостоянийСотрудников.Начало <= &Дата
	|	И ДанныеСостоянийСотрудников.Сотрудник.ФизическоеЛицо = &ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КОЛИЧЕСТВО(ДанныеСостоянийСотрудников.Состояние) КАК Увольнение
	|ПОМЕСТИТЬ ВТ_Увольнение
	|ИЗ
	|	РегистрСведений.ДанныеСостоянийСотрудников КАК ДанныеСостоянийСотрудников
	|ГДЕ
	|	ДанныеСостоянийСотрудников.Сотрудник.ФизическоеЛицо = &ФизическоеЛицо
	|	И ДанныеСостоянийСотрудников.Начало <= &Дата
	|	И ДанныеСостоянийСотрудников.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияСотрудника.Увольнение)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ВТ_Работа.Работа, 0) - ЕСТЬNULL(ВТ_Увольнение.Увольнение, 0) <= 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Уволен,
	|	ВТ_Работа.Работа КАК Работа,
	|	ВТ_Увольнение.Увольнение КАК Увольнение
	|ИЗ
	|	ВТ_Работа КАК ВТ_Работа,
	|	ВТ_Увольнение КАК ВТ_Увольнение";
	
	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.УстановитьПараметр("ФизическоеЛицо", ФизическоеЛицо);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если не РезультатЗапроса.Пустой() Тогда
	
		Возврат РезультатЗапроса.Выгрузить()[0].Уволен;
	
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции


