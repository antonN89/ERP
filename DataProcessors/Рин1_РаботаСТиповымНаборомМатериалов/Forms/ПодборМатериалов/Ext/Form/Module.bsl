// + [Rineco], [Киселев А.] [14.12.2021] [Log_Diff][№ 21317], [#ТиповойНаборМатериалов] 
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Этап = Параметры.ЭтапПроизводства;
	
	ПеренестиВДокумент = Ложь;
	СформироватьФормуПоСоставуТиповыхМатериалов();
	
КонецПроцедуры

// + [Rineco], [Киселев А.] [14.12.2021] [Log_Diff][№ 21317], [#ТиповойНаборМатериалов] 
&НаСервере
Процедура СформироватьФормуПоСоставуТиповыхМатериалов()
	
	ДанныеДляЗаполнения = СформироватьДанныеДляЗаполненияГрупп();
	
	Если ДанныеДляЗаполнения = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	НомерВкладки = "1";
	
	Для Каждого ЭлементДанныхДляЗаполнения Из ДанныеДляЗаполнения.Строки Цикл 
		
		ДопИмяДляФормИРеквизитов = "Типовой" + НомерВкладки;
		
		НовыйЭлемент = Элементы.Вставить("Группа" + ДопИмяДляФормИРеквизитов,Тип("ГруппаФормы"),Элементы.ГруппаДляПодбора);
		НовыйЭлемент.Вид = ВидГруппыФормы.Страница;
		НовыйЭлемент.Заголовок = ЭлементДанныхДляЗаполнения.ТиповойНаборМатериалов;
		
		#Область ДобавлениеРеквизитовФормы
		
		ДобавляемыеРеквизиты	= Новый Массив;
		Реквизит_ТаблицаЗначений = Новый РеквизитФормы("Таблица" + ДопИмяДляФормИРеквизитов,Новый ОписаниеТипов("ТаблицаЗначений"));
		
		ДобавляемыеРеквизиты.Добавить(Реквизит_ТаблицаЗначений);
		
		ТаблицаПрототип = СформироватьОписаниеТаблицыПрототип();
		
		Для Каждого Колонка Из ТаблицаПрототип.Колонки Цикл
			
			ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы(Колонка.Имя, Колонка.ТипЗначения,"Таблица"+ ДопИмяДляФормИРеквизитов));
			
		КонецЦикла;
		
		ЭтаФорма.ИзменитьРеквизиты(ДобавляемыеРеквизиты);
		
		#КонецОбласти
		
		ТаблицаПолейВыбора = Элементы.Добавить("ТаблицаФормы" + ДопИмяДляФормИРеквизитов, Тип("ТаблицаФормы"),НовыйЭлемент);
		ТаблицаПолейВыбора.ПутьКДанным = "Таблица"+ ДопИмяДляФормИРеквизитов;
		ТаблицаПолейВыбора.Отображение = ОтображениеТаблицы.Список;
		ТаблицаПолейВыбора.КоманднаяПанель.Видимость = Ложь;
		
		Для Каждого Колонка Из ТаблицаПрототип.Колонки Цикл
			
			НовыйЭлемент = Элементы.Добавить(Строка(ДопИмяДляФормИРеквизитов) + Строка(Колонка.Имя), Тип("ПолеФормы"), ТаблицаПолейВыбора);
			НовыйЭлемент.Заголовок = ?(Колонка.Заголовок = "Остатки",Колонка.Заголовок + " " + ЭлементДанныхДляЗаполнения.ТиповойНаборМатериалов.Склад,Колонка.Заголовок);
			НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
			НовыйЭлемент.ПутьКДанным = "Таблица"+ ДопИмяДляФормИРеквизитов + "." + Колонка.Имя;
			НовыйЭлемент.Ширина = 10;
			
			Если Колонка.Имя = "Количество" Тогда 
				НовыйЭлемент.УстановитьДействие("ПриИзменении","РИНЭКО_ПодключаемыйКоличествоПриИзменении");
			КонецЕсли;
			
			Если Колонка.Имя = "Порядок" Тогда 
				НовыйЭлемент.Ширина = 5;
			КонецЕсли;
			
			Если НовыйЭлемент.Заголовок = "КоличествоУпаковок" ИЛИ НовыйЭлемент.Заголовок = "ОстаткиНаОсновном" ИЛИ НовыйЭлемент.Заголовок = "Склад" Тогда
				НовыйЭлемент.Видимость = Ложь;
			КонецЕсли;
			
		КонецЦикла;
		
		ТаблицаЗначение = РеквизитФормыВЗначение("Таблица" + ДопИмяДляФормИРеквизитов);
		
		Для Каждого ЭлементДанныхВторойУровень Из ЭлементДанныхДляЗаполнения.Строки Цикл 
			
			НоваяСтрока = ТаблицаЗначение.Добавить();

			ЗаполнитьЗначенияСвойств(НоваяСтрока,ЭлементДанныхВторойУровень);
			
			Если ЗначениеЗаполнено(ЭлементДанныхВторойУровень.ТиповойНаборМатериалов.Склад) Тогда
				
				НоваяСтрока.Остатки = ПолучитьОстаткиНаСкладе(ЭлементДанныхВторойУровень.Номенклатура,ЭлементДанныхВторойУровень.ТиповойНаборМатериалов.Склад);
				
			КонецЕсли;
			
			ПараметрыОтбора = Новый Структура;
			ПараметрыОтбора.Вставить("Номенклатура",ЭлементДанныхВторойУровень.Номенклатура);
			НайденныеСтроки = Этап.ОбеспечениеМатериаламиИРаботами.НайтиСтроки(ПараметрыОтбора);
			
			Если ЗначениеЗаполнено(НайденныеСтроки) Тогда
				
				СуммаКоличество = 0;
				Для Каждого ЭлементНайденнойСтроки Из НайденныеСтроки Цикл 
					СуммаКоличество = СуммаКоличество + ЭлементНайденнойСтроки.КоличествоУпаковок;
				КонецЦикла;
				
				НоваяСтрока.Передано = СуммаКоличество;
				
			КонецЕсли;
			
			НоваяСтрока.Склад = ЭлементДанныхВторойУровень.ТиповойНаборМатериалов.Склад;

		КонецЦикла;
		
		ЗначениеВРеквизитФормы(ТаблицаЗначение,"Таблица" + ДопИмяДляФормИРеквизитов);
		
		НомерВкладки = НомерВкладки + 1;
		
	КонецЦикла;
	
КонецПроцедуры

// + [Rineco], [Киселев А.] [14.12.2021] [Log_Diff][№ 21317], [#ТиповойНаборМатериалов] 
&НаСервере
Функция ПолучитьОстаткиНаСкладе(Номенклатура,Склад)
	
	ПараметрыЗапроса = Новый Структура;
	ПараметрыЗапроса.Вставить("Склад",Склад);
	ПараметрыЗапроса.Вставить("Номенклатура",Номенклатура);
	
	ТаблицаРезультат = ОбщегоНазначенияУТ.ЗапросВыполнитьВыгрузить(ТекстЗапросаСвободныеОстатки(),ПараметрыЗапроса);
	
	Если Не ЗначениеЗаполнено(ТаблицаРезультат) Тогда
		Возврат 0;
	КонецЕсли;
	
	Возврат ТаблицаРезультат[0].ВНаличииОстаток;
	
КонецФункции

// + [Rineco], [Киселев А.] [14.12.2021] [Log_Diff][№ 21317], [#ТиповойНаборМатериалов] 
&НаСервере
Функция ТекстЗапросаСвободныеОстатки()
	
	Возврат "ВЫБРАТЬ
	|	СвободныеОстаткиОстатки.ВНаличииОстаток КАК ВНаличииОстаток
	|ИЗ
	|	РегистрНакопления.СвободныеОстатки.Остатки(
	|			,
	|			Склад = &Склад
	|				И Номенклатура = &Номенклатура) КАК СвободныеОстаткиОстатки";
	
КонецФункции

// + [Rineco], [Киселев А.] [14.12.2021] [Log_Diff][№ 21317], [#ТиповойНаборМатериалов] 
&НаСервере
Функция СформироватьДанныеДляЗаполненияГрупп()
	
	СписокТекстов = Новый СписокЗначений;
	СписокТекстов.Добавить(ТекстЗапросаТаблицаТиповыхМатериалов(),"ЗапросГрупп");
	ТаблицаТиповыхМатериалов = ОбщегоНазначенияУТ.ВыгрузитьРезультатыЗапроса(Новый Запрос,СписокТекстов,ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Если Не ЗначениеЗаполнено(ТаблицаТиповыхМатериалов.ЗапросГрупп.Строки) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Возврат ТаблицаТиповыхМатериалов.ЗапросГрупп;
	
КонецФункции

// + [Rineco], [Киселев А.] [14.12.2021] [Log_Diff][№ 21317], [#ТиповойНаборМатериалов] 
&НаСервере
Функция ТекстЗапросаТаблицаТиповыхМатериалов()
	Возврат "ВЫБРАТЬ
	        |	Рин1_СопоставлениеТиповыхНаборовМатериалов.ТиповойНаборМатериалов КАК ТиповойНаборМатериалов,
	        |	0 КАК Количество,
	        |	0 КАК ОстаткиНаПроизводстве,
	        |	0 КАК ОстаткиНаОсновном,
	        |	Рин1_СопоставлениеТиповыхНаборовМатериалов.Номенклатура КАК Номенклатура,
	        |	Рин1_СопоставлениеТиповыхНаборовМатериалов.Номенклатура.Артикул КАК Артикул,
	        |	Рин1_СопоставлениеТиповыхНаборовМатериалов.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	        |	0 КАК Передано,
	        |	0 КАК ПереданоИтог,
	        |	Рин1_СопоставлениеТиповыхНаборовМатериалов.Порядок КАК Порядок
	        |ИЗ
	        |	РегистрСведений.Рин1_СопоставлениеТиповыхНаборовМатериалов КАК Рин1_СопоставлениеТиповыхНаборовМатериалов
	        |
	        |УПОРЯДОЧИТЬ ПО
	        |	Порядок
	        |ИТОГИ ПО
	        |	ТиповойНаборМатериалов"
КонецФункции

// + [Rineco], [Киселев А.] [14.12.2021] [Log_Diff][№ 21317], [#ТиповойНаборМатериалов] 
&НаКлиенте
Процедура РИНЭКО_ПодключаемыйКоличествоПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Элемент.Родитель.ТекущиеДанные.Количество) Тогда
		Элемент.Родитель.ТекущиеДанные.КоличествоУпаковок = Элемент.Родитель.ТекущиеДанные.Количество;
		Элемент.Родитель.ТекущиеДанные.ПереданоИтог = Элемент.Родитель.ТекущиеДанные.Количество + Элемент.Родитель.ТекущиеДанные.Передано;
		ЗаполнитьЗначенияСвойств(Объект.ТаблицаВыбранных.Добавить(),Элемент.Родитель.ТекущиеДанные);
	КонецЕсли;
	
КонецПроцедуры

// + [Rineco], [Киселев А.] [14.12.2021] [Log_Diff][№ 21317], [#ТиповойНаборМатериалов] 
&НаКлиенте
Процедура ОК(Команда)
	
	ПеренестиВДокумент = Истина;
	Закрыть();
	
КонецПроцедуры

// + [Rineco], [Киселев А.] [14.12.2021] [Log_Diff][№ 21317], [#ТиповойНаборМатериалов] 
&НаСервере
Функция СформироватьОписаниеТаблицыПрототип()
	
	ТаблицаПрототип = Новый ТаблицаЗначений;
	ТаблицаПрототип.Колонки.Добавить("Порядок", Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(15, 0, ДопустимыйЗнак.Любой)),"№ п/п");
	ТаблицаПрототип.Колонки.Добавить("Артикул", Новый ОписаниеТипов("Строка", ,Новый КвалификаторыСтроки(50, ДопустимаяДлина.Переменная)),"Артикул");
	ТаблицаПрототип.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"),"Номенклатура");
	ТаблицаПрототип.Колонки.Добавить("ЕдиницаИзмерения", Новый ОписаниеТипов("СправочникСсылка.УпаковкиЕдиницыИзмерения"),"Ед. изм.");
	ТаблицаПрототип.Колонки.Добавить("Количество", Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(15, 3, ДопустимыйЗнак.Любой)),"Количество");
	ТаблицаПрототип.Колонки.Добавить("КоличествоУпаковок", Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(15, 3, ДопустимыйЗнак.Любой)),"КоличествоУпаковок");
	ТаблицаПрототип.Колонки.Добавить("Остатки", Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(15, 2, ДопустимыйЗнак.Любой)),"Остатки");
	ТаблицаПрототип.Колонки.Добавить("Склад", Новый ОписаниеТипов("СправочникСсылка.Склады"),"Склад");
	ТаблицаПрототип.Колонки.Добавить("ОстаткиНаОсновном", Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(15, 2, ДопустимыйЗнак.Любой)),"ОстаткиНаОсновном");
	ТаблицаПрототип.Колонки.Добавить("Передано", Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(15, 2, ДопустимыйЗнак.Любой)),"Передано");
	ТаблицаПрототип.Колонки.Добавить("ПереданоИтог", Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(15, 2, ДопустимыйЗнак.Любой)),"Итог");
	
	Возврат ТаблицаПрототип;
КонецФункции

// + [Rineco], [Киселев А.] [14.12.2021] [Log_Diff][№ 21317], [#ТиповойНаборМатериалов] 
&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Если ПеренестиВДокумент Тогда
		АдресТоваровВХранилище = АдресТоваровВХранилище(ЭтаФорма.ВладелецФормы.УникальныйИдентификатор);
	Иначе
		АдресТоваровВХранилище = Неопределено;
	КонецЕсли;
	
	Если АдресТоваровВХранилище <> Неопределено Тогда
		Структура = Новый Структура("АдресТоваровВХранилище", АдресТоваровВХранилище);
		Структура.Вставить("ИмяТЧ", "ОбеспечениеМатериаламиИРаботами");
		ОповеститьОВыборе(Структура);
	КонецЕсли;
	
КонецПроцедуры

// + [Rineco], [Киселев А.] [14.12.2021] [Log_Diff][№ 21317], [#ТиповойНаборМатериалов] 
&НаСервере
Функция АдресТоваровВХранилище(УникальныйИдентификаторВладельца)
	
	АдресВХранилище = Неопределено;
	
	Если ПеренестиВДокумент Тогда
		
		Товары = Объект.ТаблицаВыбранных.Выгрузить();
		АдресВХранилище = ПоместитьВоВременноеХранилище(Товары, УникальныйИдентификаторВладельца);
		
	КонецЕсли;
	
	Возврат АдресВХранилище;
	
КонецФункции
