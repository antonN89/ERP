
&После("ПередЗаписью")
Процедура Рин1_ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если не ЭтотОбъект.Ссылка.Пустая() Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗаказМатериаловВПроизводствоТовары.Назначение.Заказ КАК НазначениеЗаказ
		|ПОМЕСТИТЬ ВТ_Этапы
		|ИЗ
		|	Документ.ЗаказМатериаловВПроизводство.Товары КАК ЗаказМатериаловВПроизводствоТовары
		|ГДЕ
		|	ЗаказМатериаловВПроизводствоТовары.Ссылка = &Ссылка
		|	И НЕ ЗаказМатериаловВПроизводствоТовары.Ссылка.Статус = ЗНАЧЕНИЕ(перечисление.СтатусыЗаказовМатериаловВПроизводство.закрыт)
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗаказМатериаловВПроизводствоТовары.Назначение.Заказ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Этапы.НазначениеЗаказ КАК НазначениеЗаказ
		|ИЗ
		|	ВТ_Этапы КАК ВТ_Этапы
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2 КАК ЭтапПроизводства2_2
		|		ПО ВТ_Этапы.НазначениеЗаказ = ЭтапПроизводства2_2.Ссылка
		|ГДЕ
		|	НЕ ЭтапПроизводства2_2.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Формируется)
		|	И НЕ ЭтапПроизводства2_2.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен)
		|	И ЭтапПроизводства2_2.Проведен";
		
		Запрос.УстановитьПараметр("Ссылка", ЭтотОбъект.Ссылка);
		
		РезультатЗапроса = Запрос.Выполнить();
		ТЗ_Этапы = РезультатЗапроса.Выгрузить();
		
		//сгруппируем строки тч товары
		ТЗ_Товары = ЭтотОбъект.Товары.Выгрузить(,"Номенклатура,Характеристика,Назначение,Количество,Отменено");
		ТЗ_Товары.Свернуть("Номенклатура,Характеристика,Назначение,Отменено","Количество");
			
		//соберем таблицу сверх заказа и выведем сообщения
		Для каждого СтрокаТЧ Из ТЗ_Товары Цикл
			Если СтрокаТЧ.Отменено или СтрокаТЧ.Назначение.Заказ = Справочники.Назначения.ПустаяСсылка() Тогда
				Продолжить;
			КонецЕсли;
			НайденныйЭтап = ТЗ_Этапы.Найти(СтрокаТЧ.Назначение.Заказ,);
			Если не НайденныйЭтап = Неопределено Тогда
				
				стр_ОтборСтрок =  Новый Структура();
				стр_ОтборСтрок.Вставить("Номенклатура",СтрокаТЧ.Номенклатура);
				стр_ОтборСтрок.Вставить("Характеристика",СтрокаТЧ.Характеристика);
				стр_ОтборСтрок.Вставить("ВариантОбеспечения",Перечисления.ВариантыОбеспечения.Обособленно);
				МассивСтрок = НайденныйЭтап.НазначениеЗаказ.ОбеспечениеМатериаламиИРаботами.НайтиСтроки(стр_ОтборСтрок);
				Если не МассивСтрок.Количество() = 0 Тогда
					КоличествоНоменклатуры_Этап = 0;
					Для каждого СтрокаМассива Из МассивСтрок Цикл
						КоличествоНоменклатуры_Этап = КоличествоНоменклатуры_Этап + СтрокаМассива.Количество; 
					КонецЦикла;
				КонецЕсли;
				
				Если СтрокаТЧ.Количество > КоличествоНоменклатуры_Этап Тогда
					
					//Из таблицы сверхзаказа добавим в тч документа новые строки со снятым назначением
					НоваяСтрТовары = ЭтотОбъект.Товары.Добавить();
					НоваяСтрТовары.Номенклатура = СтрокаТЧ.Номенклатура;
					НоваяСтрТовары.Характеристика = СтрокаТЧ.Характеристика;
					НоваяСтрТовары.Назначение = Справочники.Назначения.ПустаяСсылка();
					Количество = СтрокаТЧ.Количество - КоличествоНоменклатуры_Этап;
					НоваяСтрТовары.Количество = Количество;
					НоваяСтрТовары.КоличествоУпаковок = Количество;
					НоваяСтрТовары.ВариантОбеспечения = Перечисления.ВариантыОбеспечения.Требуется;
					НоваяСтрТовары.НачалоОтгрузки = ТекущаяДата(); 
					НоваяСтрТовары.ОкончаниеПоступления = ТекущаяДата() + ДлительностьПеремещения*86400;
					
					//сообщим о сверхзаказе
					ОбщегоНазначения.СообщитьПользователю("Строка сверх потребности: " + НоваяСтрТовары.Номенклатура + "/" + НоваяСтрТовары.Характеристика + "/" + СтрокаТЧ.Назначение + " / количеством - " + НоваяСтрТовары.Количество);
					
					//найдем строку в тч товары документа с таким же товаром или несколько - отсортируем по количеству и дате и убавим на количество сверх заказа
					ОтборСтрокЗаказа = Новый Структура();
					ОтборСтрокЗаказа.Вставить("Номенклатура",СтрокаТЧ.Номенклатура);
					ОтборСтрокЗаказа.Вставить("Характеристика",СтрокаТЧ.Характеристика);
					ОтборСтрокЗаказа.Вставить("Отменено",Ложь);
					
					МассивСтрокЗаказа = ЭтотОбъект.Товары.НайтиСтроки(ОтборСтрокЗаказа);
					Если не МассивСтрокЗаказа.Количество() = 0 Тогда
						
						ТЗ_ДляСортировки = Новый ТаблицаЗначений;
						ТЗ_ДляСортировки.Колонки.Добавить("НомерСтроки");
						ТЗ_ДляСортировки.Колонки.Добавить("Номенклатура");
						ТЗ_ДляСортировки.Колонки.Добавить("Характеристика");
						ТЗ_ДляСортировки.Колонки.Добавить("НачалоОтгрузки");
						ТЗ_ДляСортировки.Колонки.Добавить("КоличествоУпаковок");
						
						Для каждого СтрокаМассиваТоваров Из МассивСтрокЗаказа Цикл
							Если СтрокаМассиваТоваров.Назначение.Заказ = НайденныйЭтап.НазначениеЗаказ Тогда
								НовСтрТЗ = ТЗ_ДляСортировки.Добавить();
								НовСтрТЗ.НомерСтроки = СтрокаМассиваТоваров.НомерСтроки;
								НовСтрТЗ.Номенклатура = СтрокаМассиваТоваров.Номенклатура;
								НовСтрТЗ.Характеристика = СтрокаМассиваТоваров.Характеристика;
								НовСтрТЗ.НачалоОтгрузки = СтрокаМассиваТоваров.НачалоОтгрузки;
								НовСтрТЗ.КоличествоУпаковок = СтрокаМассиваТоваров.КоличествоУпаковок;
							КонецЕсли;
						КонецЦикла;
						
						ТЗ_ДляСортировки.Сортировать("НачалоОтгрузки");
						
						Для каждого СтрокаТЗ_ДляСортировки Из ТЗ_ДляСортировки Цикл
							Если СтрокаТЗ_ДляСортировки.КоличествоУпаковок > Количество Тогда
								СтрокаДляУменьшения = ЭтотОбъект.Товары.Найти(СтрокаТЗ_ДляСортировки.НомерСтроки,"НомерСтроки");
								СтрокаДляУменьшения.КоличествоУпаковок = СтрокаДляУменьшения.КоличествоУпаковок - Количество;
								СтрокаДляУменьшения.Количество = СтрокаДляУменьшения.Количество - Количество;
								Прервать;
							ИначеЕсли СтрокаТЗ_ДляСортировки.КоличествоУпаковок = Количество Тогда
								СтрокаДляУменьшения = ЭтотОбъект.Товары.Найти(СтрокаТЗ_ДляСортировки.НомерСтроки,"НомерСтроки");
	                            ЭтотОбъект.Товары.Удалить(СтрокаТЗ_ДляСортировки.НомерСтроки-1);
								Прервать;							
							КонецЕсли;
						КонецЦикла;						
						
					КонецЕсли;
					//
					
				КонецЕсли;
				
			КонецЕсли;	
		КонецЦикла;	
		
	КонецЕсли;
	
КонецПроцедуры

