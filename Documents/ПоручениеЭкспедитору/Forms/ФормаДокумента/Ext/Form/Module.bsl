
&НаСервере
Процедура Рин1_ПриСозданииНаСервереПосле(Отказ, СтандартнаяОбработка)
	//++Шерстюк Ю.Ю. 28.05.2021 Задача 8881
	Если Объект.СпособДоставки = Перечисления.СпособыДоставки.ПоручениеЭкспедиторуНаСклад Тогда 
		 Элементы.Рин1_ПолучательОтправитель.Заголовок = "Получатель";
	ИначеЕсли Объект.СпособДоставки = Перечисления.СпособыДоставки.ПоручениеЭкспедиторуВПункте Тогда
		 Элементы.Рин1_ПолучательОтправитель.Заголовок = "Отправитель/получатель";
	ИначеЕсли Объект.СпособДоставки = Перечисления.СпособыДоставки.ПоручениеЭкспедиторуСоСклада Тогда
		 Элементы.Рин1_ПолучательОтправитель.Заголовок = "Отправитель"; 
	КонецЕсли;
	//--Шерстюк Ю.Ю.
	
	//++Шерстюк Ю.Ю. 22.04.2021 Задача 7709 При создании документа заполнять «Дату выполнения» автоматически:
	//Если документ создан до 16-00 Дата выполнения = Текущее число + 1 день Если документ создан после 16-00 Дата выполнения = Текущее число + 2 дня
	пВысокийПриоритет = Справочники.Приоритеты.НайтиПоНаименованию("Высокий");
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		пТекущаяДата = ТекущаяДата();
		пТекущееВремя = пТекущаяДата-НачалоДня(пТекущаяДата);
		Если (пТекущееВремя-57600) > 0 Тогда //Больше 16.00
			Объект.ДатаВыполнения = пТекущаяДата + 2*60*60*24;//добавляем 2 дня
		Иначе
			 Объект.ДатаВыполнения = пТекущаяДата + 60*60*24; //добавляем 1 день
		 КонецЕсли;
		 Объект.Рин1_Приоритет = Справочники.Приоритеты.НайтиПоНаименованию("Средний");//нет предопределенных элементов, поэтому поиск по наименованию
		 
		 пТаблицаОснований = Объект.Основания;
		 пТипЗаказПоставщику = Тип("ДокументСсылка.ЗаказПоставщику");
		 пСтрокаОснований = "";
		 Для Каждого СтрТзОснования из пТаблицаОснований Цикл 
			 Если ТипЗнч(СтрТзОснования.Основание) = пТипЗаказПоставщику Тогда
				 Если пСтрокаОснований <> "" Тогда 
					 пСтрокаОснований = ", ";
				 КонецЕсли;
				  пСтрокаОснований = пСтрокаОснований + СтрТзОснования.Основание.НомерПоДаннымПоставщика + " от " + Формат(СтрТзОснования.Основание.ДатаПоДаннымПоставщика,"ДФ=dd.MM.yyyy");
			 КонецЕсли;
		 КонецЦикла;
		 Объект.Рин1_НомерСчета = пСтрокаОснований;
		 

	КонецЕсли;
	УстановитьУсловноеОформлениеПриоритета(ЭтаФорма);
	//--Шерстюк Ю.Ю. 

	// + [Rineco], [Киселев А.] [25.07.2021] 
	// Задача: [№ ], [# Группа описание обязательны для заполнения]
	//++Шерстюк Ю.Ю. 16.07.2021 Задача 12383 Описание поручения убрать с формы, но т.к. оно обязательно для заполнения, то заполним прочерком
	//Элементы.ГруппаОписание.Видимость = Ложь;
	//Если Не ЗначениеЗаполнено(Объект.ОсобыеУсловияПеревозкиОписание) Тогда 
	//	Объект.ОсобыеУсловияПеревозкиОписание = "-";
	//КонецЕсли;
	//--Шерстюк Ю.Ю.

	// - [Rineco], [Киселев А.] [25.07.2021]
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформлениеПриоритета(Форма) 
	//++Шерстюк Ю.Ю. 22.04.2021 Задача 7709
	ПутьКРеквизитуПриоритет = "Объект.Рин1_Приоритет";
	
	пУсловноеОформление = Форма.УсловноеОформление;
	ЭлементыФормы = Форма.Элементы;
	
	//
	ЭлементУсловногоОформления = пУсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(ЭлементыФормы["Рин1_Приоритет"].Имя);

	ОтборЭлемента = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ПутьКРеквизитуПриоритет);
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Справочники.Приоритеты.ПолучитьВысшийПриоритет();

	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветФона", ЦветаСтиля.ВысокийПриоритетДокумента);

	//
	ЭлементУсловногоОформления = пУсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(ЭлементыФормы["Рин1_Приоритет"].Имя);

	ОтборЭлемента = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ПутьКРеквизитуПриоритет);
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Справочники.Приоритеты.ПолучитьНизшийПриоритет();

	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветФона", ЦветаСтиля.НизкийПриоритетДокумента);
	
	//
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Приоритеты.Ссылка КАК Приоритет,
	|	Приоритеты.Цвет   КАК Цвет
	|ИЗ
	|	Справочник.Приоритеты КАК Приоритеты");
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			Элемент = пУсловноеОформление.Элементы.Добавить();

			ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
			ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(ЭлементыФормы.Рин1_Приоритет.Имя);

			ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ПутьКРеквизитуПриоритет);
			ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
			ОтборЭлемента.ПравоеЗначение = Выборка.Приоритет;

			Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", Выборка.Цвет.Получить());
			
		КонецЦикла;
		
	КонецЕсли;
//--Шерстюк Ю.Ю. 22.04.2021 Задача 7709	
КонецПроцедуры
	 
&НаСервере 
Функция ПолучитьКонтактСервере(пКонтактноеЛицо,пВидКонтактнойИнформации = "Мобильный телефон")
	//++Шерстюк Ю.Ю. 22.04.2021
	пТаблицаКонтактов =пКонтактноеЛицо.КонтактнаяИнформация;
	Для Каждого СтрТзКонтакт из пТаблицаКонтактов Цикл 
		Если СтрТзКонтакт.Вид = Справочники.ВидыКонтактнойИнформации.НайтиПоНаименованию(пВидКонтактнойИнформации) Тогда
			 Возврат  СтрТзКонтакт.Представление;
		КонецЕсли;
	КонецЦикла;

	Возврат "";
	//--Шерстюк Ю.Ю.
КонецФункции


&НаКлиенте
Процедура Рин1_ДатаВыполненияПриИзмененииПосле(Элемент)
	//++Шерстюк Ю.Ю. 22.04.2021
	пДатаВыполненияСсылка = ОбщегоНазначенияУТВызовСервера.ЗначениеРеквизитаОбъекта(Объект.Ссылка,"ДатаВыполнения");
	Если пДатаВыполненияСсылка > Объект.ДатаВыполнения и Не ЕстьРазрешениеНаУменьшениеДаты() Тогда 
		Объект.ДатаВыполнения = пДатаВыполненияСсылка;
	КонецЕсли;
	//--Шерстюк Ю.Ю.
КонецПроцедуры

&НаСервере
Функция ЕстьРазрешениеНаУменьшениеДаты()
	//++Шерстюк Ю.Ю. 22.04.2021
	Возврат (РольДоступна("ПолныеПрава") или РольДоступна("Рин1_ИзменениеДатыОтправкиВПорученииЭкспедитору"));	
	//--Шерстюк Ю.Ю. 

КонецФункции


&НаКлиенте
Процедура Рин1_СпособДоставкиПриИзмененииПосле(Элемент)
	//++Шерстюк Ю.Ю. 28.05.2021 Задача 8881
	Если Объект.СпособДоставки = ПредопределенноеЗначение("Перечисление.СпособыДоставки.ПоручениеЭкспедиторуНаСклад") Тогда 
		 Элементы.Рин1_ПолучательОтправитель.Заголовок = "Получатель";
	ИначеЕсли Объект.СпособДоставки = ПредопределенноеЗначение("Перечисление.СпособыДоставки.ПоручениеЭкспедиторуВПункте") Тогда
		 Элементы.Рин1_ПолучательОтправитель.Заголовок = "Отправитель/получатель";
	ИначеЕсли Объект.СпособДоставки = ПредопределенноеЗначение("Перечисление.СпособыДоставки.ПоручениеЭкспедиторуСоСклада") Тогда
		 Элементы.Рин1_ПолучательОтправитель.Заголовок = "Отправитель"; 
	КонецЕсли;
		 
	//--Шерстюк Ю.Ю.
КонецПроцедуры


&НаКлиенте
Процедура Рин1_ДополнитьИнформациюПоДоставкеКонтактамиВместо(Команда)
	//++Шерстюк Ю.Ю. 31.05.2021, 16.07.2021 Задача 12383
	Если Объект.СпособДоставки = ПредопределенноеЗначение("Перечисление.СпособыДоставки.ПоручениеЭкспедиторуНаСклад") Тогда 
		пПолучатель = "Получатель " + Строка(Объект.Рин1_ПолучательОтправитель);
	ИначеЕсли Объект.СпособДоставки = ПредопределенноеЗначение("Перечисление.СпособыДоставки.ПоручениеЭкспедиторуВПункте") Тогда
		 пПолучатель = "Отправитель/получатель " + Строка(Объект.Рин1_ПолучательОтправитель);
	ИначеЕсли Объект.СпособДоставки = ПредопределенноеЗначение("Перечисление.СпособыДоставки.ПоручениеЭкспедиторуСоСклада") Тогда
		 пПолучатель = "Отправитель " + Строка(Объект.Рин1_ПолучательОтправитель);
	КонецЕсли;
	
	Объект.ДополнительнаяИнформацияПоДоставке = ?(ЗначениеЗаполнено(Объект.КонтактноеЛицо)," Контактное лицо: " + Объект.КонтактноеЛицо + " тел.: " + ПолучитьКонтактСервере(Объект.КонтактноеЛицо,"Мобильный телефон") + "; ","")
	                       + " Менеджер: " + Строка(Объект.Ответственный) + " тел.: " + ПолучитьКонтактСервере(Объект.Ответственный,"Phone") 
	                                            												 + "; Номер счета: " + Объект.Рин1_НомерСчета + "; " + пПолучатель;
	//--Шерстюк Ю.Ю.
	
КонецПроцедуры

// + [Rineco], [Киселев А.Н.] [08.10.2021] 
// Задача: [№ 19055], [#Статусы поручения экспедиторам]
&НаКлиенте
Процедура Рин1_ОбновитьСтатусПосле(Команда)	
	Модифицированность = ЗаполнитьСтатуПоЗаданию();
КонецПроцедуры

// + [Rineco], [Киселев А.Н.] [08.10.2021] 
// Задача: [№ 19055], [#Статусы поручения экспедиторам]
&НаСервере
Функция  ЗаполнитьСтатуПоЗаданию()
	
	СтатусИзменен = Истина;
	
	Если Параметры.Ключ.Пустая() Тогда
		СтатусИзменен = Ложь;
	КонецЕсли;
	            
	СоответствиеСтатусов = Документы.ЗаданиеНаПеревозку.СформироватьСоответствиеСтатусов();
	СтатусЗаданияНаПеревозку = СформироватьСтатусЗаданияНаПеревозку();
	
	Если СтатусЗаданияНаПеревозку = Неопределено Тогда
		СтатусИзменен = Ложь;
	КонецЕсли;
	
	Объект.РИНЭКО_Статус = СоответствиеСтатусов.Получить(СтатусЗаданияНаПеревозку);
	
	Возврат СтатусИзменен;
	
КонецФункции

// + [Rineco], [Киселев А.Н.] [08.10.2021] 
// Задача: [№ 19055], [#Статусы поручения экспедиторам]
Функция СформироватьСтатусЗаданияНаПеревозку()
	
	УстановитьПривилегированныйРежим(Истина);
	ПараметрыЗапроса = Новый Структура("Ссылка",Объект.Ссылка);
	ТаблицаВыгрузки = ОбщегоНазначенияУТ.ЗапросВыполнитьВыгрузить(ТекстЗапросаСтатуса(),ПараметрыЗапроса);
	
	Если ТаблицаВыгрузки.Количество() = 0 Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат ТаблицаВыгрузки[0].Статус;
	
КонецФункции

// + [Rineco], [Киселев А.Н.] [08.10.2021] 
// Задача: [№ 19055], [#Статусы поручения экспедиторам]
Функция ТекстЗапросаСтатуса()
	Возврат "ВЫБРАТЬ ПЕРВЫЕ 1
	|ЗаданиеНаПеревозкуРаспоряжения.Ссылка.Статус КАК Статус
	|ИЗ
	|	Документ.ЗаданиеНаПеревозку.Распоряжения КАК ЗаданиеНаПеревозкуРаспоряжения
	|ГДЕ
	|	ЗаданиеНаПеревозкуРаспоряжения.Распоряжение.Ссылка = &Ссылка";
КонецФункции
