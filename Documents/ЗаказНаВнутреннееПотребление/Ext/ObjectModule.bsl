
&После("ОбработкаПроверкиЗаполнения")
Процедура Рин1_ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	// Желаемая дата отгрузки в подвале должна быть заполнена
	Если не ЗначениеЗаполнено(ЖелаемаяДатаОтгрузки) Тогда
		
		ТекстОшибки = НСтр("ru='Желаемая дата отгрузки должна быть заполнена!'");
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Дата%", Формат(Дата,"ДЛФ=DD"));
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
		ТекстОшибки,
		ЭтотОбъект,
		"ЖелаемаяДатаОтгрузки",
		,
		Отказ);
		
	КонецЕсли;	
	
КонецПроцедуры

&Вместо("ПередЗаписью")
Процедура Рин1_ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
		Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);

	//++ НЕ УТ
	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаВПроизводство И НЕ ПометкаУдаления Тогда
		ТекстСообщения = НСтр("ru = 'Запись документа запрещена, т.к. операция ""Передача в производство"" больше не используется.
								|Заказ материалов оформляется в форме ""Производство - Получение и возврат материалов"".'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Ссылка,,, Отказ);	
	КонецЕсли;
	//-- НЕ УТ
	
	ПроведениеСерверУТ.УстановитьРежимПроведения(ЭтотОбъект, РежимЗаписи, РежимПроведения);

	ЗаказыСервер.УстановитьКлючВСтрокахТабличнойЧасти(ЭтотОбъект, "Товары");

	ДополнительныеСвойства.Вставить("ЭтоНовый",    ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
	ОбщегоНазначенияУТ.ОкруглитьКоличествоШтучныхТоваров(ЭтотОбъект, РежимЗаписи);
	
	Если НЕ НеОтгружатьЧастями Тогда
		
		НоваяДатаОтгрузки = Дата(1, 1, 1);
		
		Если Товары.Количество() > 0 Тогда
			
			СтрокиКОбеспечению = Товары.НайтиСтроки(Новый Структура("Отменено", Ложь));
			
			Если СтрокиКОбеспечению.Количество() > 0 Тогда
				
				ТаблицаСтрокКОбеспечению = Товары.Выгрузить(СтрокиКОбеспечению, "ДатаОтгрузки");
				ТаблицаСтрокКОбеспечению.Сортировать("ДатаОтгрузки Возр");
				НоваяДатаОтгрузки = ТаблицаСтрокКОбеспечению[0].ДатаОтгрузки;
				
			КонецЕсли;
				
		КонецЕсли;
		
		ДатаОтгрузки = НоваяДатаОтгрузки;
	Иначе
		ОбеспечениеСервер.ЗаполнитьДатыОтгрузкиВТаблице(ДатаОтгрузки, Товары, "ДатаОтгрузки");
	КонецЕсли;
	
	// Очистим реквизиты документа не используемые для хозяйственной операции.
	МассивВсехРеквизитов = Новый Массив;
	МассивРеквизитовОперации = Новый Массив;
	
	Документы.ЗаказНаВнутреннееПотребление.ЗаполнитьИменаРеквизитовПоХозяйственнойОперации(
		ХозяйственнаяОперация,
		МассивВсехРеквизитов,
		МассивРеквизитовОперации);
	
	ДенежныеСредстваСервер.ОчиститьНеиспользуемыеРеквизиты(
		ЭтотОбъект,
		МассивВсехРеквизитов,
		МассивРеквизитовОперации);
	
	НоменклатураСервер.ОчиститьНеиспользуемыеСерии(ЭтотОбъект,
	
	НоменклатураСервер.ПараметрыУказанияСерий(ЭтотОбъект, Документы.ЗаказНаВнутреннееПотребление));
	///<-- Гигабайт (Чернов А.С.): ОЕМПотребность
	Если ГИГ_ОЕМПотребность Тогда
		Если Не ЗначениеЗаполнено(ГИГ_ПредставлениеОЕМПотребности) Тогда
			Если ЭтоНовый() Или Не ЗначениеЗаполнено(Номер) Тогда
				УстановитьНовыйНомер();
			КонецЕсли; 
			ГИГ_ПредставлениеОЕМПотребности = "ОЕМ/" + Номер + "/" + ГИГ_Партнер;
		КонецЕсли;
		Для Каждого Строка Из Товары Цикл
			Строка.ВариантОбеспечения = Перечисления.ВариантыОбеспечения.Обособленно;
		КонецЦикла;
	Иначе
		ГИГ_Партнер = Неопределено;
		ГИГ_ПредставлениеОЕМПотребности = "";
	КонецЕсли; 
	///--> Гигабайт (Чернов А.С.)
	ШаблонНазначения = Документы.ЗаказНаВнутреннееПотребление.ШаблонНазначения(ЭтотОбъект);
	Справочники.Назначения.ПроверитьЗаполнитьПередЗаписью(Назначение, ШаблонНазначения, ЭтотОбъект, "НаправлениеДеятельности", Отказ);
	
КонецПроцедуры

//{{20200713 ГлазуновДВ
Процедура ЗаполнитьДокументНаОснованииАктаОРасхожденияхПослеОтгрузки(Знач ДанныеЗаполнения)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Реализация.АдресДоставки,
	|	Реализация.БанковскийСчетОрганизации,
	|	Реализация.БанковскийСчетКонтрагента,
	|	Реализация.БанковскийСчетГрузоотправителя,
	|	Реализация.БанковскийСчетГрузополучателя,
	|	Реализация.Валюта,
	|	Реализация.ВалютаВзаиморасчетов,
	|	Реализация.Грузоотправитель,
	|	Реализация.Грузополучатель,
	|	Реализация.ДатаРаспоряжения,
	|	Реализация.ДоверенностьВыдана,
	|	Реализация.ДоверенностьДата,
	|	Реализация.ДоверенностьЛицо,
	|	Реализация.ДоверенностьНомер,
	|	Реализация.ЗаказКлиента,
	|	Реализация.Организация,
	|	Реализация.Контрагент,
	|	Реализация.НалогообложениеНДС,
	|	Реализация.Партнер,
	|	Реализация.Подразделение,
	|	Реализация.Сделка,
	|	Реализация.СкидкиРассчитаны,
	|	Реализация.Склад,
	|	Реализация.Соглашение,
	|	Реализация.СуммаВзаиморасчетов,
	|	Реализация.ФормаОплаты,
	|	Реализация.ХозяйственнаяОперация,
	|	Реализация.ЦенаВключаетНДС,
	|	Реализация.Касса,
	|	Реализация.Отпустил,
	|	Реализация.ОтпустилДолжность,
	|	Реализация.РеализацияПоЗаказам,
	|	Реализация.ГруппаФинансовогоУчета,
	|	Реализация.КартаЛояльности,
	|	Реализация.Договор,
	|	Реализация.Основание,
	|	Реализация.СпособДоставки,
	|	Реализация.ЗонаДоставки,
	|	Реализация.АдресДоставкиЗначенияПолей,
	|	Реализация.ПеревозчикПартнер,
	|	Реализация.ВремяДоставкиС,
	|	Реализация.ВремяДоставкиПо,
	|	Реализация.АдресДоставкиПеревозчика,
	|	Реализация.АдресДоставкиПеревозчикаЗначенияПолей,
	|	Реализация.ДополнительнаяИнформацияПоДоставке,
	|	Реализация.КонтактноеЛицо,
	|	Реализация.Руководитель,
	|	Реализация.ГлавныйБухгалтер,
	|	Реализация.ПорядокРасчетов,
	|	Реализация.ВернутьМногооборотнуюТару,
	|	Реализация.ДатаВозвратаМногооборотнойТары,
	|	Реализация.СостояниеЗаполненияМногооборотнойТары,
	|	Реализация.ТребуетсяЗалогЗаТару,
	|	Реализация.ОснованиеДата,
	|	Реализация.ОснованиеНомер,
	|	Реализация.НаправлениеДеятельности КАК НаправлениеДеятельности
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК Реализация
	|ГДЕ
	|	Реализация.Ссылка = &ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АктОРасхожденияхПослеОтгрузкиТовары.Номенклатура КАК Номенклатура,
	|	АктОРасхожденияхПослеОтгрузкиТовары.Характеристика КАК Характеристика,
	|	АктОРасхожденияхПослеОтгрузкиТовары.Назначение КАК Назначение,
	|	АктОРасхожденияхПослеОтгрузкиТовары.Серия КАК Серия,
	|	АктОРасхожденияхПослеОтгрузкиТовары.Упаковка КАК Упаковка,
	|	АктОРасхожденияхПослеОтгрузкиТовары.Цена КАК Цена,
	|	АктОРасхожденияхПослеОтгрузкиТовары.СтавкаНДС КАК СтавкаНДС,
	|	АктОРасхожденияхПослеОтгрузкиТовары.Склад КАК Склад,
	|	АктОРасхожденияхПослеОтгрузкиТовары.КоличествоПоДокументу - АктОРасхожденияхПослеОтгрузкиТовары.Количество КАК Количество,
	|	АктОРасхожденияхПослеОтгрузкиТовары.КоличествоУпаковокПоДокументу - АктОРасхожденияхПослеОтгрузкиТовары.КоличествоУпаковок КАК КоличествоУпаковок,
	|	АктОРасхожденияхПослеОтгрузкиТовары.СуммаПоДокументу - АктОРасхожденияхПослеОтгрузкиТовары.Сумма КАК Сумма,
	|	АктОРасхожденияхПослеОтгрузкиТовары.СуммаНДСПоДокументу - АктОРасхожденияхПослеОтгрузкиТовары.СуммаНДС КАК СуммаНДС,
	|	АктОРасхожденияхПослеОтгрузкиТовары.СуммаСНДСПоДокументу - АктОРасхожденияхПослеОтгрузкиТовары.СуммаСНДС КАК СуммаСНДС,
	|	АктОРасхожденияхПослеОтгрузкиТовары.ЗаказКлиента,
	|	АктОРасхожденияхПослеОтгрузкиТовары.КодСтроки
	|ПОМЕСТИТЬ ТоварыРеализации
	|ИЗ
	|	Документ.АктОРасхожденияхПослеОтгрузки.Товары КАК АктОРасхожденияхПослеОтгрузкиТовары
	|ГДЕ
	|	АктОРасхожденияхПослеОтгрузкиТовары.Ссылка = &АктОРасхождениях
	|	И АктОРасхожденияхПослеОтгрузкиТовары.Действие = ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеОтгрузки.ОтгрузитьСейчас)
	|	И АктОРасхожденияхПослеОтгрузкиТовары.Реализация = &ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыРеализации.Номенклатура,
	|	ТоварыРеализации.Характеристика,
	|	ТоварыРеализации.Назначение,
	|	ТоварыРеализации.Серия,
	|	ТоварыРеализации.Упаковка,
	|	ТоварыРеализации.Цена,
	|	ТоварыРеализации.СтавкаНДС,
	|	ТоварыРеализации.Склад,
	|	ТоварыРеализации.Количество,
	|	ТоварыРеализации.КоличествоУпаковок,
	|	ТоварыРеализации.Сумма,
	|	ТоварыРеализации.СуммаНДС,
	|	ТоварыРеализации.СуммаСНДС,
	|	ТоварыРеализации.ЗаказКлиента,
	|	ТоварыРеализации.КодСтроки
	|ИЗ
	|	ТоварыРеализации КАК ТоварыРеализации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТоварыРеализации.ЗаказКлиента
	|ИЗ
	|	ТоварыРеализации КАК ТоварыРеализации
	|ГДЕ
	|	ТоварыРеализации.ЗаказКлиента <> НЕОПРЕДЕЛЕНО";
	Запрос = Новый Запрос(ТекстЗапроса);
	
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения.Реализация);
	Запрос.УстановитьПараметр("АктОРасхождениях", ДанныеЗаполнения.АктОРасхождениях);
	ПакетЗапросов = Запрос.ВыполнитьПакет();
	ВыборкаШапка = ПакетЗапросов[0].Выбрать();
	ВыборкаШапка.Следующий();
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ВыборкаШапка);
	
	Рин1_ДопоставкаПоРеализации = ДанныеЗаполнения.Реализация;
	ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СписаниеТоваровПоТребованию;
	ЖелаемаяДатаОтгрузки = ТекущаяДата();
	
	Товары.Загрузить(ПакетЗапросов[2].Выгрузить());
	ОбеспечениеСервер.ЗаполнитьДатыОтгрузкиВТаблице(ЖелаемаяДатаОтгрузки, Товары, "ДатаОтгрузки");
	
	ВыборкаЗаказы = ПакетЗапросов[3].Выбрать();
	ЭлементовВВыборкеЗаказы = ВыборкаЗаказы.Количество();
	Если ЭлементовВВыборкеЗаказы > 0 Тогда
		РеализацияПоЗаказам = Истина;
		Если ЭлементовВВыборкеЗаказы = 1 Тогда
			ВыборкаЗаказы.Следующий();
			ЗаказКлиента = ВыборкаЗаказы.ЗаказКлиента;
		КонецЕсли;
	КонецЕсли;
	
	//Если НЕ ЗначениеЗаполнено(Статус) Тогда
	//	Статус = Перечисления.СтатусыРеализацийТоваровУслуг.Отгружено;
	//КонецЕсли;
	
КонецПроцедуры

&Вместо("ОбработкаЗаполнения")
Процедура Рин1_ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	// Вставить содержимое метода.
	//ПродолжитьВызов(ДанныеЗаполнения, СтандартнаяОбработка);
	Перем РеквизитыШапки;
	
//Исходное	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") И ДанныеЗаполнения.Свойство("Товары") Тогда
	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	Если ТипДанныхЗаполнения = Тип("Структура") Тогда
		Если ДанныеЗаполнения.Свойство("АктОРасхождениях") 
			И ДанныеЗаполнения.Свойство("Реализация") Тогда
			ЗаполнитьДокументНаОснованииАктаОРасхожденияхПослеОтгрузки(ДанныеЗаполнения);
		ИначеЕсли
			 ДанныеЗаполнения.Свойство("Товары") Тогда
				ДанныеЗаполнения.Свойство("РеквизитыШапки", РеквизитыШапки);
				ЗаполнитьЗначенияСвойств(ЭтотОбъект, РеквизитыШапки);
				Товары.Загрузить(ДанныеЗаполнения.Товары);
		КонецЕсли;
	КонецЕсли;
	
	ИнициализироватьДокумент(ДанныеЗаполнения);
	
	ЗаполнениеСвойствПоСтатистикеСервер.ЗаполнитьСвойстваОбъекта(ЭтотОбъект, ДанныеЗаполнения);
	
КонецПроцедуры
//}}20200713 ГлазуновДВ