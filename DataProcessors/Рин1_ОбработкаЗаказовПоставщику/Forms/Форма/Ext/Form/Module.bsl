
&НаКлиенте
Процедура УстановитьПометку(Команда)
	
	Для каждого Элемент Из ЗаказыПоставщику Цикл
		
		Элемент.Пометка = Истина;	
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьПометку(Команда)
	
	Для каждого Элемент Из ЗаказыПоставщику Цикл
		
		Элемент.Пометка = Ложь;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура НачалоПериодаПриИзменении(Элемент)
	Если Объект.НачалоПериода > Объект.КонецПериода Тогда	
		Объект.НачалоПериода = НачалоДня(Объект.КонецПериода); 	
	КонецЕсли;
	ОбновитьНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура КонецПериодаПриИзменении(Элемент)
	Если Объект.НачалоПериода > Объект.КонецПериода Тогда	
		Объект.КонецПериода = КонецДня(Объект.НачалоПериода); 	
	КонецЕсли;
	ОбновитьНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьПериод(Команда)
	
	ПараметрыВыбора = Новый Структура("НачалоПериода,КонецПериода", Объект.НачалоПериода, Объект.КонецПериода);
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыбратьПериодЗавершение", ЭтотОбъект);
	ОткрытьФорму("ОбщаяФорма.ВыборСтандартногоПериода", ПараметрыВыбора, Элементы.ВыбратьПериод, , , , ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьПериодЗавершение(РезультатВыбора, ДопПараметры) Экспорт
	
	Если РезультатВыбора = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ЗаполнитьЗначенияСвойств(Объект, РезультатВыбора, "НачалоПериода,КонецПериода");
	
	ОбновитьНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Объект.НачалоПериода = НачалоДня(ДобавитьМесяц(ТекущаяДата(), -1));
	Объект.КонецПериода = КонецДня(ТекущаяДата());
	
	Организация = Параметры.Организация;
	Партнер     = Параметры.Партнер;
	Контрагент  = Параметры.Контрагент;
	
	Склад = Параметры.Склад;
	Владелец = Параметры.Ссылка;
	
	АдресТоварыНакладнойВоВременномХранилище = Параметры.АдресТоварыНакладнойВоВременномХранилище;
	
	ЗаполнитьТаблицуТоваров();
	
	Фильтр = Истина;
	
	ОбновитьНаСервере();
	
	//
	Элементы.ДекорацияВалютаДокумента.Заголовок = "Валюта документа - " + Строка(Владелец.Валюта) + " ";	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Валюты.Ссылка КАК Ссылка,
	|	Валюты.Наименование КАК Наименование
	|ИЗ
	|	Справочник.Валюты КАК Валюты";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	СписокВалют = Новый СписокЗначений;
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Элементы.ВалютаВыбранная.СписокВыбора.Добавить(ВыборкаДетальныеЗаписи.Ссылка,ВыборкаДетальныеЗаписи.Наименование);
	КонецЦикла;
	//ВалютаПоставщика = Элементы.ВалютаПоставщика.СписокВыбора[0].Значение;
	
	ТекущийКурс = 1;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаказыПоставщикуПометкаПриИзменении(Элемент)
	
	ПроверитьКорректностьДанных(Элементы.ЗаказыПоставщику.ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьКорректностьДанных(ВыделеннаяСтрока = Неопределено)
	
	ЭтаФорма.ОбновитьОтображениеДанных();
	
КонецПроцедуры

&НаСервере
Процедура ВывестиСообщениеОНеобработаномЗаказе(Заказ)
	
	СообщениеПользователю = Новый СообщениеПользователю;
	СообщениеПользователю.Текст = Строка(Заказ) + " не имеет статус текущего состояния <Подтвержден>, и не может быть обработан!";
	СообщениеПользователю.Сообщить();	
	
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
	
	ОбновитьНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ФильтрПриИзменении(Элемент)
	
	ОбновитьНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьНаСервере()
	
	//создадим отбор тех заказов поставщикам в которых есть номенклатура переданная с документа	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТЗ.Номенклатура КАК Номенклатура
	|ПОМЕСТИТЬ ТЗ
	|ИЗ
	|	&ТЗ КАК ТЗ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаказПоставщикуДокумент.Дата КАК Дата,
	|	ЗаказПоставщикуДокумент.Номер КАК Номер,
	|	ЗаказыПоставщикамОстаткиИОбороты.ЗаказПоставщику КАК ЗаказПоставщику,
	|	ЗаказПоставщикуДокумент.Организация КАК Организация,
	|	ЗаказПоставщикуДокумент.Партнер КАК Партнер,
	|	ЗаказПоставщикуДокумент.Статус КАК Статус,
	|	ПРЕДСТАВЛЕНИЕ(ЗаказПоставщикуДокумент.Валюта) КАК ВалютаДокумента,
	|	ЗаказПоставщикуДокумент.Контрагент КАК Контрагент,
	|	ЗаказПоставщикуДокумент.НомерПоДаннымПоставщика КАК НомерПоДаннымПоставщика,
	|	ЗаказПоставщикуДокумент.ДатаПоДаннымПоставщика КАК ДатаПоДаннымПоставщика,
	|	ЗаказПоставщикуДокумент.СуммаДокумента КАК СуммаДокумента,
	|	ЗаказыПоставщикамОстаткиИОбороты.ЗаказаноКонечныйОстаток КАК ЗаказаноОстаток,
	|	ВЫБОР
	|		КОГДА НЕ ЗаказыПоставщикамОстаткиИОбороты.КОформлениюКонечныйОстаток = 0
	|			ТОГДА ЗаказыПоставщикамОстаткиИОбороты.КОформлениюКонечныйОстаток
	|		ИНАЧЕ ""-----""
	|	КОНЕЦ КАК КОформлениюОстаток
	|ИЗ
	|	РегистрНакопления.ЗаказыПоставщикам.ОстаткиИОбороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			Авто,
	|			,
	//++Шерстюк Ю.Ю. 24.06.2021 Задача 9406
	|Номенклатура В
	|			(ВЫБРАТЬ
	|				ТЗ.Номенклатура КАК Номенклатура
	|				
	|			ИЗ
	|				ТЗ КАК ТЗ) И Склад В ИЕРАРХИИ(&Склад) ) КАК ЗаказыПоставщикамОстаткиИОбороты

	//|			Номенклатура В (ВЫБРАТЬ ТЗ.Номенклатура КАК Номенклатура ИЗ ТЗ КАК ТЗ) И
	//|				Склад = &Склад) КАК ЗаказыПоставщикамОстаткиИОбороты
	//--Шерстюк Ю.Ю. 24.06.2021 Задача 9406
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказПоставщику КАК ЗаказПоставщикуДокумент
	|		ПО ЗаказыПоставщикамОстаткиИОбороты.ЗаказПоставщику = ЗаказПоставщикуДокумент.Ссылка
	|ГДЕ
	|	(&Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ИЛИ ЗаказыПоставщикамОстаткиИОбороты.ЗаказПоставщику.Организация = &Организация)
	|	И (&Партнер = ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)
	|			ИЛИ ЗаказыПоставщикамОстаткиИОбороты.ЗаказПоставщику.Партнер = &Партнер)
	|	И (&Контрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ИЛИ ЗаказыПоставщикамОстаткиИОбороты.ЗаказПоставщику.Контрагент = &Контрагент)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата";
	
	
	Запрос.Параметры.Вставить("НачалоПериода",Объект.НачалоПериода);
	Запрос.Параметры.Вставить("КонецПериода",КонецДня(Объект.КонецПериода));
	Запрос.Параметры.Вставить("Склад",Склад);
	Запрос.Параметры.Вставить("Организация",Организация);
	Запрос.Параметры.Вставить("Партнер",Партнер);
	Запрос.Параметры.Вставить("Контрагент",Контрагент);
	
	Запрос.Параметры.Вставить("ТЗ",ДанныеФормыВзначение(ТаблицаТоваров,Тип("ТаблицаЗначений")));//товары с документа
	
	Если не Фильтр Тогда
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"			Номенклатура В (ВЫБРАТЬ ТЗ.Номенклатура КАК Номенклатура ИЗ ТЗ КАК ТЗ) И","");
		
	КонецЕсли;	
	
	РезультатЗапроса = Запрос.Выполнить();
	Результат = РезультатЗапроса.Выгрузить();
	
	Результат.Колонки.Добавить("НомерДатаПоДаннымПоставщика");
	Для каждого Стр Из Результат Цикл
		Стр.НомерДатаПоДаннымПоставщика = ?(Стр.НомерПоДаннымПоставщика = "","",Стр.НомерПоДаннымПоставщика + " от " +  Формат(Стр.ДатаПоДаннымПоставщика,"ДФ=dd.MM.yyyy"));
	КонецЦикла;
	
	ЗаказыПоставщику.Загрузить(Результат);
	
КонецПроцедуры 

&НаСервере
Процедура ЗаполнитьТаблицуТоваров()
	
	ТоварыИсточника = ПолучитьИзВременногоХранилища(АдресТоварыНакладнойВоВременномХранилище);
	ТаблицаТоваров.Загрузить(ТоварыИсточника);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьПодбор(Команда)
	
	Отказ = Истина;
	
	Для каждого Строка Из ЗаказыПоставщику Цикл
		
		Если Строка.Пометка Тогда
			Отказ = Ложь;
			Прервать;
		КонецЕсли;	
		
	КонецЦикла;
	
	Если не Отказ Тогда
		
		ОбработатьПоАлгоритму();
		ПеренестиТоварыВДокумент();
		
	Иначе 
		
		СообщениеПользователю = Новый СообщениеПользователю;
		СообщениеПользователю.Текст = "Не выбран не один заказ. Обработка отменена!";
		СообщениеПользователю.Сообщить();
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьПоАлгоритму()
	
	ЗадачиИспользуются = Константы.ИспользоватьБизнесПроцессыИЗадачи.Получить();
	Сообщение = "";
	
	//корректируем таблицы в соответствии с необходимым алгоритмом
	Товары_Поступление = ДанныеФормыВЗначение(ТаблицаТоваров,Тип("ТаблицаЗначений"));
	ТоварыДляВозвратаВОсновнуюТаблицу = Товары_Поступление.СкопироватьКолонки(); //чистая таблица
	Товары_Поступление.Свернуть("Номенклатура,Склад,СтранаПроисхождения,НомерГТД,Характеристика,ВидЦеныПоставщика,ЦенаЗаказа,Цена,КодСтроки,СтавкаНДС","КоличествоУпаковок, Количество, Сумма, СуммаСНДС,СуммаНДС");
	Товары_Поступление.Колонки.Добавить("Назначение",Новый  ОписаниеТипов("СправочникСсылка.Назначения"));
	
	//получаем таблицу заказов
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТЗ_ЗаказыПоставщику.ЗаказПоставщику КАК ЗаказПоставщику
	|ПОМЕСТИТЬ ВТ_ЗаказПоставщику
	|ИЗ
	|	&ТЗ_ЗаказыПоставщику КАК ТЗ_ЗаказыПоставщику
	|ГДЕ
	|	ТЗ_ЗаказыПоставщику.Пометка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаказПоставщикуТовары.Ссылка КАК ЗаказПоставщику,
	|	ЗаказПоставщикуТовары.Номенклатура КАК Номенклатура,
	|	ЗаказПоставщикуТовары.Характеристика КАК Характеристика,
	|	ЗаказПоставщикуТовары.Цена КАК Цена,
	|	ЗаказПоставщикуТовары.Назначение КАК Назначение,
	|	ЗаказПоставщикуТовары.Склад КАК Склад,
	|	ЗаказПоставщикуТовары.КоличествоУпаковок КАК КоличествоУпаковок,
	|	ЗаказПоставщикуТовары.КодСтроки КАК КодСтроки,
	|	ВЫБОР
	|		КОГДА ЗаказПоставщикуТовары.Ссылка.ПоступлениеОднойДатой
	|			ТОГДА ЗаказПоставщикуТовары.Ссылка.ДатаПоступления
	|		ИНАЧЕ ЗаказПоставщикуТовары.ДатаПоступления
	|	КОНЕЦ КАК ДатаПоступления
	//++Шерстюк Ю.Ю. 24.06.2021 Задача 10161
	|,
	|	ЗаказПоставщикуТовары.Количество КАК Количество
	//--Шерстюк Ю.Ю.
	|ПОМЕСТИТЬ ВТ_ТоварыЗаказаПоставщику
	|ИЗ
	|	ВТ_ЗаказПоставщику КАК ВТ_ЗаказПоставщику
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказПоставщику.Товары КАК ЗаказПоставщикуТовары
	|		ПО ВТ_ЗаказПоставщику.ЗаказПоставщику = ЗаказПоставщикуТовары.Ссылка
	|ГДЕ
	|	НЕ ЗаказПоставщикуТовары.Отменено
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТоварыЗаказаПоставщику.ЗаказПоставщику КАК ЗаказПоставщику,
	|	ЗаказыПоставщикамОстатки.КодСтроки КАК КодСтроки,
	|	ВТ_ТоварыЗаказаПоставщику.ДатаПоступления КАК ДатаПоступления,
	|	ВТ_ТоварыЗаказаПоставщику.Номенклатура КАК Номенклатура,
	|	ВТ_ТоварыЗаказаПоставщику.Характеристика КАК Характеристика,
	|	ВТ_ТоварыЗаказаПоставщику.Цена КАК Цена,
	|	ВТ_ТоварыЗаказаПоставщику.Назначение КАК Назначение,
	|	ВТ_ТоварыЗаказаПоставщику.Склад КАК Склад,
	|	ЗаказыПоставщикамОстатки.КОформлениюОстаток КАК КоличествоУпаковок,
	|	ЗаказыПоставщикамОстатки.ЗаказаноОстаток КАК ЗаказаноОстаток
	//++Шерстюк Ю.Ю. 24.06.2021 Задача 10161
	|,
	|	ВТ_ТоварыЗаказаПоставщику.Количество / ВТ_ТоварыЗаказаПоставщику.КоличествоУпаковок * ЗаказыПоставщикамОстатки.КОформлениюОстаток КАК Количество
	//--Шерстюк Ю.Ю.
	|ИЗ
	|	ВТ_ТоварыЗаказаПоставщику КАК ВТ_ТоварыЗаказаПоставщику
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыПоставщикам.Остатки КАК ЗаказыПоставщикамОстатки
	|		ПО ВТ_ТоварыЗаказаПоставщику.Номенклатура = ЗаказыПоставщикамОстатки.Номенклатура
	|			И ВТ_ТоварыЗаказаПоставщику.Характеристика = ЗаказыПоставщикамОстатки.Характеристика
	|			И ВТ_ТоварыЗаказаПоставщику.КодСтроки = ЗаказыПоставщикамОстатки.КодСтроки
	|			И ВТ_ТоварыЗаказаПоставщику.ЗаказПоставщику = ЗаказыПоставщикамОстатки.ЗаказПоставщику
	|ГДЕ
	|	ЗаказыПоставщикамОстатки.КОформлениюОстаток > 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВТ_ТоварыЗаказаПоставщику.ДатаПоступления,
	|	Назначение УБЫВ";
	
	ТЗ_ЗаказыПоставщику = ДанныеФормыВЗначение(ЗаказыПоставщику,Тип("ТаблицаЗначений"));
	ТЗ_ЗаказыПоставщику.Сортировать("Дата Возр");
	Запрос.УстановитьПараметр("ТЗ_ЗаказыПоставщику",ТЗ_ЗаказыПоставщику);
	
	РезультатЗапроса = Запрос.Выполнить();			
	Товары_Заказы = РезультатЗапроса.Выгрузить();
	
//{{20200826 ГлазуновДВ	
	Если РезультатЗапроса.Пустой() Тогда
		Для каждого СтрокаЗаказа Из ТЗ_ЗаказыПоставщику Цикл
			Если СтрокаЗаказа.Пометка И НЕ СтрокаЗаказа.Статус = Перечисления.СтатусыЗаказовПоставщикам.Подтвержден Тогда
				ВывестиСообщениеОНеобработаномЗаказе(СтрокаЗаказа.ЗаказПоставщику);
			КонецЕсли;
		КонецЦикла;
		Возврат;
	КонецЕсли;
//}}20200826 ГлазуновДВ
	
	Для каждого СтрокаПоступление Из Товары_Поступление Цикл
		
		ОтборСтрок = Новый Структура();
		ОтборСтрок.Вставить("Номенклатура",СтрокаПоступление.Номенклатура);
		ОтборСтрок.Вставить("Характеристика",СтрокаПоступление.Характеристика);
		//++Шерстюк Ю.Ю. 24.06.2021 Задача 9406 склад заполняем из заказа поставщику
		//ОтборСтрок.Вставить("Склад",СтрокаПоступление.Склад);
		//--Шерстюк Ю.Ю.
		
		МассивОтобранныхСтрокТовары_Заказы = Товары_Заказы.НайтиСтроки(ОтборСтрок);		
		
		//++Шерстюк Ю.Ю. 24.06.2021 Задача 10161
		пКоличествоУпаковокПоСтрокеПоступления = СтрокаПоступление.КоличествоУпаковок;
		пСуммаПоСтроке = 0;
		пСуммаСНДСПоСтроке = 0;
		пСуммаНДСПоСтроке = 0;
		//--Шерстюк Ю.Ю.
		
		Если МассивОтобранныхСтрокТовары_Заказы.Количество() Тогда
			Для каждого СтрокаЗаказ Из МассивОтобранныхСтрокТовары_Заказы Цикл
				
				Если СтрокаЗаказ.КоличествоУпаковок = 0 Тогда
					Продолжить;
				КонецЕсли;
				
				Если СтрокаПоступление.КоличествоУпаковок = 0 Тогда
					Прервать;
				КонецЕсли;				
				
				НовСтр = ТоварыДляВозвратаВОсновнуюТаблицу.Добавить();
				НовСтр.ЗаказПоставщику = СтрокаЗаказ.ЗаказПоставщику;
				НовСтр.ЦенаЗаказа = СтрокаЗаказ.Цена;				
				НовСтр.Назначение = СтрокаЗаказ.Назначение;
				НовСтр.КодСтроки = СтрокаЗаказ.КодСтроки;
				ЗаполнитьЗначенияСвойств(НовСтр,СтрокаПоступление,,"ЦенаЗаказа,Назначение,КодСтроки");
				//++Шерстюк Ю.Ю. 24.06.2021 Задача 9406 брать склад из заказа поставщику
				НовСтр.Склад = СтрокаЗаказ.Склад;
				//--Шерстюк Ю.Ю.
				
				Если СтрокаПоступление.КоличествоУпаковок >= СтрокаЗаказ.КоличествоУпаковок Тогда
					
					НовСтр.КоличествоУпаковок = СтрокаЗаказ.КоличествоУпаковок;
					СтрокаПоступление.КоличествоУпаковок = СтрокаПоступление.КоличествоУпаковок - СтрокаЗаказ.КоличествоУпаковок;
					СтрокаЗаказ.КоличествоУпаковок = 0;
					//++Шерстюк Ю.Ю. 24.06.2021 Задача 10161
					НовСтр.Количество = СтрокаЗаказ.Количество;
					СтрокаПоступление.Количество = СтрокаПоступление.Количество - СтрокаЗаказ.Количество;
					//--Шерстюк Ю.Ю.
					ВывестиСообщениеОРазницеВЦенах(СтрокаЗаказ.Цена, СтрокаПоступление.Цена, СтрокаЗаказ.ЗаказПоставщику, СтрокаПоступление.Номенклатура);

				Иначе
					
					НовСтр.КоличествоУпаковок = СтрокаПоступление.КоличествоУпаковок;
					СтрокаЗаказ.КоличествоУпаковок = СтрокаЗаказ.КоличествоУпаковок - СтрокаПоступление.КоличествоУпаковок;
					СтрокаПоступление.КоличествоУпаковок = 0;
					//++Шерстюк Ю.Ю. 24.06.2021 Задача 10161
					НовСтр.Количество = СтрокаПоступление.Количество;
					СтрокаЗаказ.Количество = СтрокаЗаказ.Количество - СтрокаПоступление.Количество;
					СтрокаПоступление.Количество = 0;
					//--Шерстюк Ю.Ю.
					ВывестиСообщениеОРазницеВЦенах(СтрокаЗаказ.Цена, СтрокаПоступление.Цена, СтрокаЗаказ.ЗаказПоставщику, СтрокаПоступление.Номенклатура);

				КонецЕсли;
				
				//++Шерстюк Ю.Ю. 24.06.2021 Задача 10161
				пКоэф = НовСтр.КоличествоУпаковок/пКоличествоУпаковокПоСтрокеПоступления;
                НовСтр.Сумма = Окр(пКоэф*СтрокаПоступление.Сумма,2);
                НовСтр.СуммаСНДС = Окр(пКоэф*СтрокаПоступление.СуммаСНДС,2);
				НовСтр.СуммаНДС = Окр(пКоэф*СтрокаПоступление.СуммаНДС,2);
				
				Если НовСтр.Сумма < 0.01 Тогда 
					 НовСтр.Сумма = 0.01;
				КонецЕсли;
				Если НовСтр.СуммаСНДС < 0.01 Тогда 
					 НовСтр.СуммаСНДС = 0.01;
				КонецЕсли;
				Если НовСтр.СуммаНДС < 0.01 Тогда 
					 НовСтр.СуммаНДС = 0.01;
				КонецЕсли;

				пСуммаПоСтроке = пСуммаПоСтроке + НовСтр.Сумма;
				пСуммаСНДСПоСтроке = пСуммаСНДСПоСтроке + НовСтр.СуммаСНДС;
				пСуммаНДСПоСтроке = пСуммаНДСПоСтроке + НовСтр.СуммаНДС;
				//--Шерстюк Ю.Ю.
				
			КонецЦикла;		
		КонецЕсли;
		
		//если в поступленнии больше чем по заказам
		Если не СтрокаПоступление.КоличествоУпаковок = 0 Тогда
			НовСтр = ТоварыДляВозвратаВОсновнуюТаблицу.Добавить();
			ЗаполнитьЗначенияСвойств(НовСтр,СтрокаПоступление,,"ЦенаЗаказа");
			НовСтр.КоличествоУпаковок = СтрокаПоступление.КоличествоУпаковок;
			//280120 сказано записывать последние значения (Черевач)	
			НовСтр.ЗаказПоставщику = Товары_Заказы[0].ЗаказПоставщику;
			НовСтр.ЦенаЗаказа = Товары_Заказы[0].Цена;
			НовСтр.КодСтроки = 0;
			//
			НовСтр.РасхождениеЗаказ = 1;
			
			//++Шерстюк Ю.Ю. 24.06.2021 Задача 10161
			пКоэф = НовСтр.КоличествоУпаковок/пКоличествоУпаковокПоСтрокеПоступления;
            НовСтр.Сумма = пКоэф*СтрокаПоступление.Сумма;
            НовСтр.СуммаСНДС = пКоэф*СтрокаПоступление.СуммаСНДС;
			НовСтр.СуммаНДС = пКоэф*СтрокаПоступление.СуммаНДС;
	
			Если НовСтр.Сумма < 0.01 Тогда 
				 НовСтр.Сумма = 0.01;
			КонецЕсли;
			Если НовСтр.СуммаСНДС < 0.01 Тогда 
				 НовСтр.СуммаСНДС = 0.01;
			КонецЕсли;
			Если НовСтр.СуммаНДС < 0.01 Тогда 
				НовСтр.СуммаНДС = 0.01;
			КонецЕсли;
			
			пСуммаПоСтроке = пСуммаПоСтроке + НовСтр.Сумма;
			пСуммаСНДСПоСтроке = пСуммаСНДСПоСтроке + НовСтр.СуммаСНДС;
			пСуммаНДСПоСтроке = пСуммаНДСПоСтроке + НовСтр.СуммаНДС;

			//--Шерстюк Ю.Ю.

		КонецЕсли;
		
		//++Шерстюк Ю.Ю. 24.06.2021 Задача 10161
		Если СтрокаПоступление.Сумма <> пСуммаПоСтроке или СтрокаПоступление.СуммаСНДС <> пСуммаСНДСПоСтроке или СтрокаПоступление.СуммаСНДС <> пСуммаНДСПоСтроке Тогда 
			МассивСтрокПоСтрокеПоступленияИтог = ТоварыДляВозвратаВОсновнуюТаблицу.НайтиСтроки(ОтборСтрок);
			пКоличествоЭлементов = МассивСтрокПоСтрокеПоступленияИтог.Количество();
			Если пКоличествоЭлементов > 0 Тогда 
				пМаксимальнаяСумма = МассивСтрокПоСтрокеПоступленияИтог[0].Сумма;
				пИндексМакс = 0;
				пИндекс = 0;
				Пока пИндекс < пКоличествоЭлементов Цикл 
					Если МассивСтрокПоСтрокеПоступленияИтог[пИндекс].Сумма > пМаксимальнаяСумма Тогда 
						 пМаксимальнаяСумма = МассивСтрокПоСтрокеПоступленияИтог[пИндекс].Сумма;
						 пИндексМакс = пИндекс;
					 КонецЕсли;
					 пИндекс = пИндекс + 1;
				 КонецЦикла;
				 
				МассивСтрокПоСтрокеПоступленияИтог[пИндексМакс].Сумма  = МассивСтрокПоСтрокеПоступленияИтог[пИндексМакс].Сумма + СтрокаПоступление.Сумма - пСуммаПоСтроке;
				МассивСтрокПоСтрокеПоступленияИтог[пИндексМакс].СуммаСНДС  = МассивСтрокПоСтрокеПоступленияИтог[пИндексМакс].СуммаСНДС + СтрокаПоступление.СуммаСНДС - пСуммаСНДСПоСтроке;	
				МассивСтрокПоСтрокеПоступленияИтог[пИндексМакс].СуммаНДС  = МассивСтрокПоСтрокеПоступленияИтог[пИндексМакс].СуммаНДС + СтрокаПоступление.СуммаНДС - пСуммаНДСПоСтроке;			

			КонецЕсли;

		КонецЕсли;
		//--Шерстюк Ю.Ю.
		
	КонецЦикла;
	
	//возвращаем распределенные данные назад в ТаблицаТоваров для передачи в форму
	ЗначениеВДанныеФормы(ТоварыДляВозвратаВОсновнуюТаблицу,ТаблицаТоваров);
	
КонецПроцедуры

&НаСервере
Процедура ВывестиСообщениеОРазницеВЦенах(ЦенаЗаказ, ЦенаПоступление, Заказ, Номенклатура)
	
	Если не ЦенаЗаказ = ЦенаПоступление Тогда
		Сообщение = Сообщение +  " Цена в " + Строка(Заказ) + " на номенклатуру " + Строка(Номенклатура) + 
		" отличается от цены в поступлении!" + " (Заказ поставщику - " + ЦенаЗаказ + " " +  Строка(Владелец.Валюта) + 
		", Поступление товаров - " + ЦенаПоступление + " " +  Строка(Владелец.Валюта) + ")" + Символы.ПС + "";
	КонецЕсли;		
	
КонецПроцедуры 

&НаКлиенте
Процедура ПеренестиТоварыВДокумент()
	
	Модифицированность = Ложь;  // Снятие модифицированности, т.к. перед закрытием признак проверяется.
	
	Закрыть();
	
	ОповеститьОВыборе(Новый Структура("АдресВХранилище", ПоместитьВХранилище()));
	
//{{20200826 ГлазуновДВ
//Выводим не выведенные сообщения
	Для каждого СтрокаЗаказа Из ЗаказыПоставщику Цикл
		Если СтрокаЗаказа.Пометка И НЕ СтрокаЗаказа.Статус = ПредопределенноеЗначение("Перечисление.СтатусыЗаказовПоставщикам.Подтвержден") Тогда
			ВывестиСообщениеОНеобработаномЗаказе(СтрокаЗаказа.ЗаказПоставщику);
		КонецЕсли;
	КонецЦикла;
//}}20200826 ГлазуновДВ
	//++Шерстюк Ю.Ю. 24.06.2021 Задача 10161 убираем создание задачи, т.к. никто не использует, лишние окна
	////Формируем задачу пользователю
	//Если не Сообщение = "" и ЗадачиИспользуются Тогда
	//	
	//	Задача = ОткрытьФорму("Задача.ЗадачаИсполнителя.Форма.ФормаЗадачи",,,,,,,РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);		
	//	//Задача = ПолучитьФорму("Задача.ЗадачаИсполнителя.Форма.ФормаЗадачи");
	//	
	//	Задача.Объект.Наименование = "Расхождение цен в " + Строка(Владелец);
	//	Задача.Объект.Описание = Сообщение;
	//	Задача.Объект.Автор = ПользователиКлиентСервер.ТекущийПользователь();
	//	Задача.Объект.Исполнитель = ПользователиКлиентСервер.ТекущийПользователь();
	//	Задача.Объект.Предмет = Владелец;
	//	Задача.Элементы.Исполнитель.ТолькоПросмотр = Ложь;
	//	
	//	//Задача.Записать();
	//	
	//	СообщениеПользователю = Новый СообщениеПользователю;
	//	СообщениеПользователю.Текст = "Укажите исполнителя и запишите задачу!";
	//	СообщениеПользователю.Сообщить();
	//	
	//КонецЕсли;
	//--Шерстюк Ю.Ю.
	
КонецПроцедуры

//{{20200826 ГлазуновДВ
&НаСервере
Процедура ВывестиСообщенияПользователю()	
	Сообщения = ПолучитьСообщенияПользователю(Истина);
	Если Сообщения <> Неопределено Тогда
		Для Каждого СтрСообщение Из Сообщения Цикл
			СтрСообщение.Сообщить();
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры
//}}20200826 ГлазуновДВ

&НаСервере
Функция ПоместитьВХранилище()
	
	Результат = ТаблицаТоваров.Выгрузить();
	
	СтруктураВозврата = Новый Структура;
	СтруктураВозврата.Вставить("Валюта",ВалютаВыбранная);
	СтруктураВозврата.Вставить("Таблица",Результат);
	
	Возврат ПоместитьВоВременноеХранилище(СтруктураВозврата);
	
КонецФункции

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	ОбновитьНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПартнерПриИзменении(Элемент)
	
	ОбновитьНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	
	ОбновитьНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ВалютаВыбраннаяПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(ВалютаВыбранная) Тогда
		ДатаКурса = ?(ДатаКурса = Дата(1,1,1),ТекущаяДата(),ДатаКурса);
		ТекущийКурс = ПолучитьКурс();
		Если не ВалютаДокумента = ВалютаВыбранная Тогда
			Элементы.ДатаКурса.Видимость = Истина;			
		Иначе 
			Элементы.ДатаКурса.Видимость = Ложь;
		КонецЕсли;
	Иначе 
		Элементы.ДатаКурса.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьКурс()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КурсыВалютСрезПоследних.Курс КАК Курс
	|ИЗ
	|	РегистрСведений.КурсыВалют.СрезПоследних(&Период, Валюта = &Валюта) КАК КурсыВалютСрезПоследних";
	
	Запрос.УстановитьПараметр("Валюта", ВалютаВыбранная);
	Запрос.УстановитьПараметр("Период", ДатаКурса);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат 1;
	Иначе
		Результат = РезультатЗапроса.Выгрузить();
		Возврат Результат[0].Курс; 
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура ДатаКурсаПриИзменении(Элемент)
	
	ТекущийКурс = ПолучитьКурс();
	
КонецПроцедуры
