
&Вместо("ОбработкаДополнительнойРасшифровки")
Процедура Рин1_ОбработкаДополнительнойРасшифровки(ЭтаФорма, Элемент, Расшифровка, СтандартнаяОбработка)
	
	ПолноеИмяОтчета = ЭтаФорма.НастройкиОтчета.ПолноеИмя;
	КлючТекущегоВарианта = ЭтаФорма.КлючТекущегоВарианта;
	
	МенюОтчетов  = Новый Массив;
	МенюДействий = Новый Массив;
	
	Если ПолноеИмяОтчета = "Отчет.ПоступлениеИОтгрузкаТоваров" Тогда
		СтандартнаяОбработка  = Ложь;
	ИначеЕсли ПолноеИмяОтчета = "Отчет.СверкаРасчетовСПартнерами" Тогда
		СтандартнаяОбработка  = Ложь;
	ИначеЕсли ПолноеИмяОтчета = "Отчет.УправленческийБаланс" Тогда
		Если КлючТекущегоВарианта = "УправленческийБаланс"
			ИЛИ КлючТекущегоВарианта = "ФинансовоеСостояниеБазовая" Тогда
			
			// Расшифровать отчетом -> Себестоимость продаж
			#Область АнализСебестоимостиТоваровРасширенный
			ПараметрыОтчета = Новый Структура;
			ПараметрыОтчета.Вставить("Имя",              "СебестоимостьТоваров");
			ПараметрыОтчета.Вставить("Заголовок",        НСтр("ru = 'Себестоимость товаров';
																|en = 'Goods cost'"));
			ПараметрыОтчета.Вставить("ИмяОтчета",        "Отчет.АнализСебестоимостиТоваровРасширенный");
			
			ПоляРасшифровки  = Новый Массив;
			ПоляРасшифровки.Добавить("Показатель");
			ПараметрыОтчета.Вставить("ПоляРасшифровки", ПоляРасшифровки);
			
			ЗаменаПараметров = Новый Структура;
			ЗаменяющиеПараметры = Новый Соответствие;
			
			ЗаменаПараметров.Вставить("Показатель", Неопределено);
			ЗаменаПараметров.Вставить("Показатель_Родитель", Неопределено);
			ЗаменаПараметров.Вставить("ДинамическаяГруппировкаПоТипуАнализа", "СтруктураПредприятия_Организация");
			ПараметрыОтчета.Вставить("ЗаменаПараметров", ЗаменаПараметров);

			НеобходимыеЗначенияПараметра = Новый Массив;
			НеобходимыеЗначенияПараметра.Добавить(ПредопределенноеЗначение("ПланВидовХарактеристик.СтатьиАктивовПассивов.Товары"));
			НеобходимыеПараметры = Новый Структура;
			НеобходимыеПараметры.Вставить("Показатель", НеобходимыеЗначенияПараметра);
			ПараметрыОтчета.Вставить("НеобходимыеПараметры", НеобходимыеПараметры);
			
			СписокПараметров = Новый Массив;
			СписокПараметров.Добавить("Период");
			ПараметрыОтчета.Вставить("СписокПараметров", СписокПараметров);
			
			МенюОтчетов.Добавить(ПараметрыОтчета);		
			#КонецОбласти
		КонецЕсли;
	ИначеЕсли ПолноеИмяОтчета = "Отчет.ВыручкаИСебестоимостьПродаж" Тогда
		// Расшифровать отчетом -> Себестоимость продаж
		#Область АнализСебестоимостиТоваровРасширенный
		ПараметрыОтчета = Новый Структура;
		Если СтрНайти(КлючТекущегоВарианта, "ПоПредприятию") <> 0
		 ИЛИ КлючТекущегоВарианта = "ПродажиСводно" Тогда
			ПараметрыОтчета.Вставить("Имя", "СебестоимостьТоваровПоПредприятию");
		Иначе
			ПараметрыОтчета.Вставить("Имя", "СебестоимостьТоваровПоОрганизациям");
		КонецЕсли;
		ПараметрыОтчета.Вставить("Заголовок",        НСтр("ru = 'Себестоимость товаров';
															|en = 'Goods cost'"));
		ПараметрыОтчета.Вставить("ИмяОтчета",        "Отчет.АнализСебестоимостиТоваровРасширенный");
		
		ПоляРасшифровки  = Новый Массив;
		ПоляРасшифровки.Добавить("Организация");
		ПоляРасшифровки.Добавить("Подразделение");
		ПоляРасшифровки.Добавить("Менеджер");
		ПоляРасшифровки.Добавить("Склад");
		ПоляРасшифровки.Добавить("Партнер");
		ПоляРасшифровки.Добавить("Номенклатура");
		ПоляРасшифровки.Добавить("Характеристика");
		ПоляРасшифровки.Добавить("Серия");
		ПоляРасшифровки.Добавить("ХозяйственнаяОперация");
		ПоляРасшифровки.Добавить("СебестоимостьИтого");
		ПоляРасшифровки.Добавить("Себестоимость");
		ПоляРасшифровки.Добавить("ДопРасходы");
		ПараметрыОтчета.Вставить("ПоляРасшифровки", ПоляРасшифровки);
		
		ДостаточныеПараметры = Новый Структура;
		ДостаточныеПараметры.Вставить("СебестоимостьИтого");
		ДостаточныеПараметры.Вставить("Себестоимость");
		ДостаточныеПараметры.Вставить("ДопРасходы");
		ПараметрыОтчета.Вставить("ДостаточныеПараметры", ДостаточныеПараметры);
		
		ЗаменаПараметров = Новый Структура;
		ЗаменяющиеПараметры = Новый Соответствие;
		
		ЗаменаПараметров.Вставить("Организация",		"СтруктураПредприятия_Организация");
		ЗаменаПараметров.Вставить("Подразделение",		"АналитикаОборотов_Подразделение");
		ЗаменаПараметров.Вставить("Менеджер",			"АналитикаОборотов_Менеджер");
		ЗаменаПараметров.Вставить("Склад",				"СтруктураПредприятия_Склад");
		ЗаменаПараметров.Вставить("Номенклатура",		"АналитикаНоменклатуры_Номенклатура");
		ЗаменаПараметров.Вставить("Характеристика",		"АналитикаНоменклатуры_Характеристика");
		ЗаменаПараметров.Вставить("Серия",				"АналитикаНоменклатуры_Серия");
		ЗаменаПараметров.Вставить("СебестоимостьИтого", Неопределено);
		ЗаменаПараметров.Вставить("Себестоимость",		Неопределено);
		ЗаменаПараметров.Вставить("ДопРасходы",			Неопределено);
		
		ЗначенияПараметров = Новый Соответствие;
		ЗначенияПараметров.Вставить("АналитикаОборотов_ХозяйственнаяОперация", ХозяйственныеОперацииПродаж());
		ЗаменяющиеПараметры.Вставить(0, ЗначенияПараметров); // Все продажи
		
		ЗначенияПараметров = Новый Соответствие;
		ЗначенияПараметров.Вставить("АналитикаОборотов_ХозяйственнаяОперация", ХозяйственныеОперацииПродаж(Истина));
		ЗаменяющиеПараметры.Вставить(1, ЗначенияПараметров); // Кроме продаж между собственными юр. лицами
		
		ЗначенияПараметров = Новый Соответствие;
		ЗначенияПараметров.Вставить("АналитикаОборотов_ХозяйственнаяОперация", ПредопределенноеЗначение("Справочник.НастройкиХозяйственныхОпераций.РеализацияТоваровВДругуюОрганизацию"));
		ЗаменяющиеПараметры.Вставить(2, ЗначенияПараметров); // Только продажи между собственными юр. лицами
		
		ЗаменаПараметров.Вставить("ПоказыватьПродажи", ЗаменяющиеПараметры);
		
		ПараметрыОтчета.Вставить("ЗаменаПараметров", ЗаменаПараметров);
		
		ФиксированныеПараметры = Новый Структура;
		ФиксированныеПараметры.Вставить("АналитикаОборотов_ХозяйственнаяОперация_ИсточникДанных", "ВыручкаИСебестоимостьПродаж");
		ПараметрыОтчета.Вставить("ФиксированныеПараметры", ФиксированныеПараметры);
		
		СписокПараметров = Новый Массив;
		СписокПараметров.Добавить("Период");
		СписокПараметров.Добавить("ДанныеОтчета");
		СписокПараметров.Добавить("ЕдиницыКоличества");
		СписокПараметров.Добавить("ПоказыватьПродажи");
		ПараметрыОтчета.Вставить("СписокПараметров", СписокПараметров);
		
		МенюОтчетов.Добавить(ПараметрыОтчета);		
		
//НАШ ОТЧЕТ	//--Шерстюк Ю.Ю. изменения без автора
	
		ПараметрыОтчета = Новый Структура;
		ПараметрыОтчета.Вставить("Имя", "СебестоимостьТоваровПоПредприятию");
		ПараметрыОтчета.Вставить("Заголовок",        НСтр("ru = 'Себестоимость товаров (Ринэко)';
															|en = 'Goods cost'"));
		ПараметрыОтчета.Вставить("ИмяОтчета",        "Отчет.Рин1_АнализСебестоимостиТоваровРасширенный1");
		
		ПоляРасшифровки  = Новый Массив;
		ПоляРасшифровки.Добавить("Организация");
		ПоляРасшифровки.Добавить("Подразделение");
		ПоляРасшифровки.Добавить("Менеджер");
		ПоляРасшифровки.Добавить("Склад");
		ПоляРасшифровки.Добавить("Партнер");
		ПоляРасшифровки.Добавить("Номенклатура");
		ПоляРасшифровки.Добавить("Характеристика");
		ПоляРасшифровки.Добавить("Серия");
		ПоляРасшифровки.Добавить("ХозяйственнаяОперация");
		ПоляРасшифровки.Добавить("СебестоимостьИтого");
		ПоляРасшифровки.Добавить("Себестоимость");
		ПоляРасшифровки.Добавить("ДопРасходы");
//{{20200525 ГлазуновДВ Добавлено
		ПоляРасшифровки.Добавить("ЗаказКлиента");
		ПоляРасшифровки.Добавить("Партия");
//}}20200525 ГлазуновДВ Добавлено		
		ПараметрыОтчета.Вставить("ПоляРасшифровки", ПоляРасшифровки);
		
		ДостаточныеПараметры = Новый Структура;
		ДостаточныеПараметры.Вставить("СебестоимостьИтого");
		ДостаточныеПараметры.Вставить("Себестоимость");
		ДостаточныеПараметры.Вставить("ДопРасходы");
		ПараметрыОтчета.Вставить("ДостаточныеПараметры", ДостаточныеПараметры);
		
		ЗаменаПараметров = Новый Структура;
		ЗаменяющиеПараметры = Новый Соответствие;
		
//{{20200525 ГлазуновДВ Добавлено
		ЗаменаПараметров.Вставить("Период1",		"Период");
		ЗаменаПараметров.Вставить("ЗаказКлиента",		"АналитикаОборотов_Заказ");
		ЗаменаПараметров.Вставить("Партия",		"Партия");
//}}20200525 ГлазуновДВ Добавлено		
		ЗаменаПараметров.Вставить("Организация",		"СтруктураПредприятия_Организация");
		ЗаменаПараметров.Вставить("Подразделение",		"АналитикаОборотов_Подразделение");
		ЗаменаПараметров.Вставить("Менеджер",			"АналитикаОборотов_Менеджер");
		ЗаменаПараметров.Вставить("Склад",				"СтруктураПредприятия_Склад");
		ЗаменаПараметров.Вставить("Номенклатура",		"АналитикаНоменклатуры_Номенклатура");
		ЗаменаПараметров.Вставить("Характеристика",		"АналитикаНоменклатуры_Характеристика");
		ЗаменаПараметров.Вставить("Серия",				"АналитикаНоменклатуры_Серия");
		ЗаменаПараметров.Вставить("СебестоимостьИтого", Неопределено);
		ЗаменаПараметров.Вставить("Себестоимость",		Неопределено);
		ЗаменаПараметров.Вставить("ДопРасходы",			Неопределено);
		
		ЗначенияПараметров = Новый Соответствие;
		ЗначенияПараметров.Вставить("АналитикаОборотов_ХозяйственнаяОперация", ХозяйственныеОперацииПродаж());
		ЗаменяющиеПараметры.Вставить(0, ЗначенияПараметров); // Все продажи
		
		//ЗначенияПараметров = Новый Соответствие;
		//ЗначенияПараметров.Вставить("АналитикаОборотов_ХозяйственнаяОперация", ХозяйственныеОперацииПродаж(Истина));
		//ЗаменяющиеПараметры.Вставить(1, ЗначенияПараметров); // Кроме продаж между собственными юр. лицами
		//
		//ЗначенияПараметров = Новый Соответствие;
		//ЗначенияПараметров.Вставить("АналитикаОборотов_ХозяйственнаяОперация", ПредопределенноеЗначение("Справочник.НастройкиХозяйственныхОпераций.РеализацияТоваровВДругуюОрганизацию"));
		//ЗаменяющиеПараметры.Вставить(2, ЗначенияПараметров); // Только продажи между собственными юр. лицами
		
		ЗаменаПараметров.Вставить("ПоказыватьПродажи", ЗаменяющиеПараметры);
		
		ПараметрыОтчета.Вставить("ЗаменаПараметров", ЗаменаПараметров);
		
		//ФиксированныеПараметры = Новый Структура;
		//ФиксированныеПараметры.Вставить("АналитикаОборотов_ХозяйственнаяОперация_ИсточникДанных", "ВыручкаИСебестоимостьПродаж");
		//ПараметрыОтчета.Вставить("ФиксированныеПараметры", ФиксированныеПараметры);
		
		СписокПараметров = Новый Массив;
		СписокПараметров.Добавить("Период");
		СписокПараметров.Добавить("ДанныеОтчета");
		СписокПараметров.Добавить("ЕдиницыКоличества");
		СписокПараметров.Добавить("ПоказыватьПродажи");
		ПараметрыОтчета.Вставить("СписокПараметров", СписокПараметров);
		
		МенюОтчетов.Добавить(ПараметрыОтчета);		
		#КонецОбласти
	ИначеЕсли ПолноеИмяОтчета = "Отчет.АнализСебестоимостиТоваровРасширенный" Тогда
		// Расшифровать отчетом -> Ведомость по партиям товаров
		#Область ВедомостьПоПартиямТоваров
		ПараметрыОтчета = Новый Структура;
		Если СтрНайти(КлючТекущегоВарианта, "ПоПредприятию") <> 0 Тогда
			ПараметрыОтчета.Вставить("Имя", "ВедомостьПоПартиямТоваровПредприятия");
		Иначе
			ПараметрыОтчета.Вставить("Имя", "ВедомостьПоПартиямТоваровОрганизаций");
		КонецЕсли;
		ПараметрыОтчета.Вставить("Заголовок",        НСтр("ru = 'Ведомость по партиям товаров - только при ФИФО(скользящая оценка)';
															|en = 'Batch list - only with FIFO (rolling valuation)'"));
		ПараметрыОтчета.Вставить("ИмяОтчета",        "Отчет.ВедомостьПоПартиямТоваров");
		
		ПоляРасшифровки  = Новый Массив;
		ПоляРасшифровки.Добавить("СтруктураПредприятия_Организация");
		ПоляРасшифровки.Добавить("АналитикаОборотов_Подразделение");
		ПоляРасшифровки.Добавить("АналитикаНоменклатуры_Номенклатура");
		ПоляРасшифровки.Добавить("АналитикаНоменклатуры_Характеристика");
		ПоляРасшифровки.Добавить("АналитикаНоменклатуры_Серия");
		ПоляРасшифровки.Добавить("СтруктураПредприятия_Склад");
		ПараметрыОтчета.Вставить("ПоляРасшифровки", ПоляРасшифровки);
		
		ЗаменаПараметров = Новый Структура;
		ЗаменяющиеПараметры = Новый Соответствие;
		
		ЗаменаПараметров.Вставить("СтруктураПредприятия_Организация", "Организация");
		ЗаменаПараметров.Вставить("АналитикаОборотов_Подразделение", "Подразделение");
		ЗаменаПараметров.Вставить("АналитикаНоменклатуры_Номенклатура", "Номенклатура");
		ЗаменаПараметров.Вставить("АналитикаНоменклатуры_Характеристика", "Характеристика");
		ЗаменаПараметров.Вставить("АналитикаНоменклатуры_Серия", "Серия");
		ЗаменаПараметров.Вставить("СтруктураПредприятия_Склад", "Склад");
		ПараметрыОтчета.Вставить("ЗаменаПараметров", ЗаменаПараметров);
		
		СписокПараметров = Новый Массив;
		СписокПараметров.Добавить("Период");
		СписокПараметров.Добавить("ДанныеОтчета");
		СписокПараметров.Добавить("ЕдиницыКоличества");
		ПараметрыОтчета.Вставить("СписокПараметров", СписокПараметров);
		
		МенюОтчетов.Добавить(ПараметрыОтчета);		
		#КонецОбласти
		//--Шерстюк Ю.Ю.
	ИначеЕсли ПолноеИмяОтчета = "Отчет.ТоварыСхемыОбеспечения" Тогда
		#Область ИзменениеСпособаОбеспеченияПотребностей
		ПараметрыДействия = Новый Структура;
		ПараметрыДействия.Вставить("Имя", "ИзменениеСпособаОбеспеченияПотребностей");
		ПараметрыДействия.Вставить("Заголовок", НСтр("ru = 'Изменить способ обеспечения потребностей';
													|en = 'Change the demand fulfillment method'"));
		ПараметрыДействия.Вставить("Действие", "ОткрытьФорму");
		ПараметрыДействия.Вставить("ИмяФормы", "Обработка.НастройкаСпособовОбеспеченияПотребностей.Форма.Форма");
		
		ПоляРасшифровки = Новый Массив;
		ПоляРасшифровки.Добавить("Номенклатура");
		ПоляРасшифровки.Добавить("Характеристика");
		ПоляРасшифровки.Добавить("Склад");
		ПараметрыДействия.Вставить("ПоляРасшифровки", ПоляРасшифровки);
		
		НеобходимыеПараметры = Новый Структура;
		НеобходимыеПараметры.Вставить("Номенклатура");
		НеобходимыеПараметры.Вставить("Склад");
		ПараметрыДействия.Вставить("НеобходимыеПараметры", НеобходимыеПараметры);
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Источник", "ТоварыСхемыОбеспечения");
		ПараметрыФормы.Вставить("Номенклатура");
		ПараметрыФормы.Вставить("Характеристика");
		ПараметрыФормы.Вставить("Склад");
		ПараметрыДействия.Вставить("ПараметрыФормы", ПараметрыФормы);
		
		МенюДействий.Добавить(ПараметрыДействия);
		#КонецОбласти
	КонецЕсли;
	
	Если МенюОтчетов.Количество() > 0 
		ИЛИ МенюДействий.Количество() > 0 Тогда
			ПараметрыРасшифровки = Новый Структура;
			ПараметрыРасшифровки.Вставить("МенюОтчетов",  МенюОтчетов);
			ПараметрыРасшифровки.Вставить("МенюДействий", МенюДействий);
			ПараметрыРасшифровки.Вставить("Расшифровка",  Расшифровка);
			
			КомпоновкаДанныхКлиент.ОбработкаРасшифровкиСДополнительнымМеню(ЭтаФорма, ПараметрыРасшифровки, СтандартнаяОбработка);
	КонецЕсли;
КонецПроцедуры
